name: Claude Code Review

on:
  pull_request:
    types: [opened, synchronize]
    # Optional: Only run on specific file changes
    # paths:
    #   - "src/**/*.ts"
    #   - "src/**/*.tsx"
    #   - "src/**/*.js"
    #   - "src/**/*.jsx"

jobs:
  claude-review:
    # Optional: Filter by PR author
    # if: |
    #   github.event.pull_request.user.login == 'external-contributor' ||
    #   github.event.pull_request.user.login == 'new-developer' ||
    #   github.event.pull_request.author_association == 'FIRST_TIME_CONTRIBUTOR'
    
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: read
      issues: read
      id-token: write
    
    env:
      GITLAB_UPSTREAM_URL: ${{ vars.GITLAB_UPSTREAM_URL }}
      GITLAB_TOKEN: ${{ secrets.GITLAB_TOKEN }}
      CLAUDE_OAUTH_TOKEN: ""
      CLAUDE_API_KEY: ""
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Set Claude authentication variables
        id: claude_auth
        run: |
          if [ -n "${{ secrets.CLAUDE_CODE_OAUTH_TOKEN }}" ]; then
            echo "CLAUDE_OAUTH_TOKEN=${{ secrets.CLAUDE_CODE_OAUTH_TOKEN }}" >> $GITHUB_ENV
            echo "CLAUDE_API_KEY=" >> $GITHUB_ENV
            echo "auth_method=oauth" >> $GITHUB_OUTPUT
            echo "Using OAuth token for authentication"
          elif [ -n "${{ secrets.ANTHROPIC_API_KEY }}" ]; then
            echo "CLAUDE_OAUTH_TOKEN=" >> $GITHUB_ENV
            echo "CLAUDE_API_KEY=${{ secrets.ANTHROPIC_API_KEY }}" >> $GITHUB_ENV
            echo "auth_method=api_key" >> $GITHUB_OUTPUT
            echo "Using API key for authentication"
          else
            echo "CLAUDE_OAUTH_TOKEN=" >> $GITHUB_ENV
            echo "CLAUDE_API_KEY=" >> $GITHUB_ENV
            echo "auth_method=none" >> $GITHUB_OUTPUT
            echo "::error::No Claude authentication available. Please configure either CLAUDE_CODE_OAUTH_TOKEN or ANTHROPIC_API_KEY secrets."
            exit 1
          fi

      - name: Validate GitLab configuration
        if: contains(github.event.pull_request.labels.*.name, 'OSDU')
        run: |
          if [ -z "${{ vars.GITLAB_UPSTREAM_URL }}" ]; then
            echo "::error::GITLAB_UPSTREAM_URL variable is not configured. Please set it in repository settings."
            echo "This variable should contain the URL of your upstream GitLab repository (e.g., https://gitlab.com/group/project.git)"
            exit 1
          fi
          
          if [ -z "${{ secrets.GITLAB_TOKEN }}" ]; then
            echo "::error::GITLAB_TOKEN secret is not configured. Please set it in repository secrets."
            echo "This secret should contain a GitLab personal access token with appropriate permissions."
            exit 1
          fi
          
          echo "GitLab configuration validated:"
          echo "- GITLAB_UPSTREAM_URL: ${{ vars.GITLAB_UPSTREAM_URL }}"
          echo "- GITLAB_TOKEN: [CONFIGURED]"

      - name: Install GitLab CLI
        if: contains(github.event.pull_request.labels.*.name, 'OSDU')
        run: |
          curl -fsSL https://gitlab.com/gitlab-org/cli/-/releases/v1.36.0/downloads/glab_1.36.0_linux_amd64.tar.gz | tar -xzv
          sudo mv bin/glab /usr/local/bin/
          glab version

      - name: Run Claude Code Review
        if: steps.claude_auth.outputs.auth_method != 'none'
        id: claude_review
        uses: anthropics/claude-code-action@beta
        with:
          claude_code_oauth_token: ${{ env.CLAUDE_OAUTH_TOKEN }}
          anthropic_api_key: ${{ env.CLAUDE_API_KEY }}

          # Optional: Specify model (defaults to Claude Sonnet 4, uncomment for Claude Opus 4)
          # model: "claude-opus-4-20250514"
          
          # Direct prompt for automated review (no @claude mention needed)
          direct_prompt: |
            Please review this pull request and provide feedback on:
            - Code quality and best practices
            - Potential bugs or issues
            - Performance considerations
            - Security concerns
            - Test coverage
            
            Be constructive and helpful in your feedback.

      - name: Create GitLab MR
        if: |
          steps.claude_auth.outputs.auth_method != 'none'
        id: claude_gitlab
        uses: anthropics/claude-code-action@beta
        with:
          claude_code_oauth_token: ${{ env.CLAUDE_OAUTH_TOKEN }}
          anthropic_api_key: ${{ env.CLAUDE_API_KEY }}
          
          # Tools to allow GitLab operations
          allowed_tools: "Bash(glab *),Bash(git *)"

          additional_permissions: |
            actions: read
          
          # Optional: Specify model (defaults to Claude Sonnet 4, uncomment for Claude Opus 4)
          # model: "claude-opus-4-20250514"
          
          # Optional: Customize the trigger phrase (default: @claude)
          trigger_phrase: "/claude-osdu"
          
          # Direct prompt for GitLab MR creation
          direct_prompt: |
            You need to create an identical GitLab Merge Request for this GitHub Pull Request.
            
            ENVIRONMENT VARIABLES AVAILABLE:
            - GITLAB_UPSTREAM_URL: ${{ env.GITLAB_UPSTREAM_URL }}
            - GITLAB_TOKEN: Available for authentication
            
            INSTRUCTIONS:
            1. Authenticate with GitLab using: glab auth login --hostname <gitlab-host> --token $GITLAB_TOKEN
            2. Analyze the current GitHub PR changes and metadata
            3. Create a new branch in the GitLab repository with the same changes
              - The branch name should be prefixed with `ai-agent`
            4. Create a GitLab MR with:
               - Same title as GitHub PR
               - Same description (adapted for GitLab format)
               - Same file changes
               - Labels should be added for `MR::Dependencies Upgrade`
            5. Ensure the existing PR has a comment with the GitLab MR URL
            
            IMPORTANT: Use the glab CLI tool to interact with GitLab. The GitLab repository URL is: ${{ env.GITLAB_UPSTREAM_URL }}
            
            If there are any issues, explain what went wrong and provide troubleshooting steps.

          # Optional: Use sticky comments to make Claude reuse the same comment on subsequent pushes to the same PR
          # use_sticky_comment: true

