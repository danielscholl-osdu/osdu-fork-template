This file is a merged representation of the entire codebase, combined into a single document by Repomix.

<file_summary>
This section contains a summary of this file.

<purpose>
This file contains a packed representation of the entire repository's contents.
It is designed to be easily consumable by AI systems for analysis, code review,
or other automated processes.
</purpose>

<file_format>
The content is organized as follows:
1. This summary section
2. Repository information
3. Directory structure
4. Repository files (if enabled)
5. Multiple file entries, each consisting of:
  - File path as an attribute
  - Full contents of the file
</file_format>

<usage_guidelines>
- This file should be treated as read-only. Any changes should be made to the
  original repository files, not this packed version.
- When processing this file, use the file path to distinguish
  between different files in the repository.
- Be aware that this file may contain sensitive information. Handle it with
  the same level of security as you would the original repository.
</usage_guidelines>

<notes>
- Some files may have been excluded based on .gitignore rules and Repomix's configuration
- Binary files are not included in this packed representation. Please refer to the Repository Structure section for a complete list of file paths, including binary files
- Files matching patterns in .gitignore are excluded
- Files matching default ignore patterns are excluded
- Files are sorted by Git change count (files with more changes are at the bottom)
</notes>

</file_summary>

<directory_structure>
src/
  images/
    branding/
      Logo Files/
        For Print/
          eps/
            Black logo - no background.eps
            Color logo - no background.eps
            Color logo with background.eps
            White logo - no background.eps
        For Web/
          svg/
            Black logo - no background.svg
            Color logo - no background.svg
            Color logo with background.svg
            White logo - no background.svg
      guide.html
  javascripts/
    tablesort.js
  stylesheets/
    extra.css
  advanced_vnet.md
  debugging_airflow.md
  debugging_istio.md
  debugging_kibana.md
  debugging_rest.md
  design_architecture.md
  design_infrastructure.md
  design_platform.md
  design_software.md
  experimental_adminui.md
  feature_flags.md
  getting_started.md
  index.md
  install_cli.md
  install_portal.md
  install_prerequisites.md
  services_core_entitlements.md
  services_core_file.md
  services_core_indexer.md
  services_core_legal.md
  services_core_partition.md
  services_core_schema.md
  services_core_search.md
  services_core_storage.md
  services_core_workflow.md
  services_core.md
  services_overview.md
  services_reference_conversion.md
  services_reference_crs.md
  services_reference_unit.md
  services_source.md
  tutorial_arm.md
  tutorial_cli.md
.gitignore
gateway-migration-summary.md
mkdocs.yml
pipelines.md
README.md
</directory_structure>

<files>
This section contains the contents of the repository's files.

<file path="src/images/branding/Logo Files/For Print/eps/Black logo - no background.eps">
%!PS-Adobe-3.0 EPSF-3.0
%Produced by poppler pdftops version: 22.05.0 (http://poppler.freedesktop.org)
%%Creator: Chromium
%%LanguageLevel: 3
%%DocumentSuppliedResources: (atend)
%%BoundingBox: 0 0 2346 736
%%HiResBoundingBox: 0 0 2346 735.12
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.00 0
%%Copyright: Copyright 1996-2011, 2022 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  /setpagedevice where {
    pop 2 dict begin
      /Policies 1 dict dup begin /PageSize 6 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop
  } ifelse
} def
/pdfSetupPaper {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfOPM false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfPatternCS false def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/opm { dup /pdfOPM exch def
      /setoverprintmode where{pop setoverprintmode}{pop}ifelse  } def
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16L3 {
  1 index /CIDFont resourcestatus {
    pop pop 1 index /CIDFont findresource /CIDFontType known
  } {
    false
  } ifelse
  {
    0 eq { /Identity-H } { /Identity-V } ifelse
    exch 1 array astore composefont pop
  } {
    pdfMakeFont16
  } ifelse
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
  /pdfOPM where {
    pop
    pdfOPM /setoverprintmode where{pop setoverprintmode}{pop}ifelse 
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Tp { /pdfPatternCS exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/xyshow where {
  pop
  /xyshow2 {
    dup length array
    0 2 2 index length 1 sub {
      2 index 1 index 2 copy get 3 1 roll 1 add get
      pdfTextMat dtransform
      4 2 roll 2 copy 6 5 roll put 1 add 3 1 roll dup 4 2 roll put
    } for
    exch pop
    xyshow
  } def
}{
  /xyshow2 {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval show moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval show moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/cshow where {
  pop
  /xycp {
    0 3 2 roll
    {
      pop pop currentpoint 3 2 roll
      1 string dup 0 4 3 roll put false charpath moveto
      2 copy get 2 index 2 index 1 add get
      pdfTextMat dtransform rmoveto
      2 add
    } exch cshow
    pop pop
  } def
}{
  /xycp {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval false charpath moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval false charpath moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/Tj {
  fCol
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 4 2 roll
  pdfTextRender 1 and 0 eq {
    2 copy xyshow2
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    3 index 3 index moveto
    2 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    xycp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    4 2 roll moveto xycp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    pop pop pop pop
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { 0.001 mul pdfFontSize mul pdfHorizScaling mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { 0.001 mul pdfFontSize mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
/Tclip* { pdfTextClipPath cvx exec eoclip newpath
         /pdfTextClipPath [] def } def
% Level 2/3 image operators
/pdfImBuf 100 string def
/pdfImStr {
  2 copy exch length lt {
    2 copy get exch 1 add exch
  } {
    ()
  } ifelse
} def
/skipEOD {
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfIm { image skipEOD } def
/pdfMask {
  /ReusableStreamDecode filter
  skipEOD
  /maskStream exch def
} def
/pdfMaskEnd { maskStream closefile } def
/pdfMaskInit {
  /maskArray exch def
  /maskIdx 0 def
} def
/pdfMaskSrc {
  maskIdx maskArray length lt {
    maskArray maskIdx get
    /maskIdx maskIdx 1 add def
  } {
    ()
  } ifelse
} def
/pdfImM { fCol imagemask skipEOD } def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
/CIDInit /ProcSet findresource begin
10 dict begin
  begincmap
  /CMapType 1 def
  /CMapName /Identity-H def
  /CIDSystemInfo 3 dict dup begin
    /Registry (Adobe) def
    /Ordering (Identity) def
    /Supplement 0 def
  end def
  1 begincodespacerange
    <0000> <ffff>
  endcodespacerange
  0 usefont
  1 begincidrange
    <0000> <ffff> 0
  endcidrange
  endcmap
  currentdict CMapName exch /CMap defineresource pop
end
10 dict begin
  begincmap
  /CMapType 1 def
  /CMapName /Identity-V def
  /CIDSystemInfo 3 dict dup begin
    /Registry (Adobe) def
    /Ordering (Identity) def
    /Supplement 0 def
  end def
  /WMode 1 def
  1 begincodespacerange
    <0000> <ffff>
  endcodespacerange
  0 usefont
  1 begincidrange
    <0000> <ffff> 0
  endcidrange
  endcmap
  currentdict CMapName exch /CMap defineresource pop
end
end
%%EndProlog
%%BeginSetup
xpdf begin
%%EndSetup
pdfStartPage
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
0 0 2346 735.12 re
W
q
[0.24 0 0 -0.24 0 735.12] cm
q
0 0 9771.875 3056.25 re
W*
q
[14.689504 0 0 14.689504 4160.7959 128.73938] cm
/DeviceRGB {} CS
[0 0 0] SC
/DeviceRGB {} cs
[0 0 0] sc
44.723 5.1992 m
40.3675 6.3359 36.7542 9.3242 34.765999 13.2656 c
41.832397 13.2656 l
42.324589 10.4453 43.211296 7.375 44.722996 5.199201 c
44.723 5.1992 l
h
27.140999 87.1642 m
26.668339 86.871231 26.047199 87.015762 25.754299 87.484512 c
25.461329 87.957169 25.60586 88.578316 26.07852 88.871216 c
40.160519 97.65242 58.078522 97.418114 71.949516 88.277466 c
72.41436 87.972778 72.543266 87.347778 72.238579 86.882965 c
71.933891 86.418121 71.308891 86.289215 70.844078 86.597809 c
57.606079 95.308708 40.578079 95.527512 27.141079 87.164215 c
27.140999 87.1642 l
h
23.777699 20.746201 m
24.215199 20.406361 24.297228 19.77354 23.957388 19.336 c
23.617548 18.89459 22.984728 18.816471 22.543287 19.156311 c
15.371388 24.703211 10.070288 32.562309 7.621287 41.28931 c
7.437697 41.937752 7.929877 42.570511 8.593947 42.570511 c
9.031447 42.570511 9.437697 42.277542 9.562697 41.83614 c
11.898598 33.519741 16.945498 26.031139 23.777699 20.74614 c
23.777699 20.746201 l
h
89.675705 42.0042 m
87.238205 32.711201 81.656204 24.4342 73.952705 18.6952 c
73.507393 18.367081 72.878502 18.456921 72.546509 18.902229 c
72.214478 19.34754 72.304321 19.976429 72.75354 20.30843 c
80.085541 25.777229 85.40554 33.663429 87.72654 42.51543 c
87.867172 43.058399 88.429672 43.374809 88.95314 43.23027 c
89.492203 43.093552 89.812523 42.54277 89.675797 42.00367 c
89.675705 42.0042 l
h
92.414001 79.375198 m
62.656002 79.375198 l
62.656002 82.0354 l
92.417999 82.0354 l
92.414001 79.375198 l
h
90.539001 64.086197 m
64.531006 64.086197 l
64.531006 77.363197 l
90.539001 77.363197 l
90.539001 64.086197 l
h
77.530998 58.648697 m
74.390396 58.648697 71.394295 59.902596 69.187195 62.074497 c
85.882195 62.074497 l
83.671295 59.898697 80.679092 58.648697 77.530594 58.648697 c
77.530998 58.648697 l
h
72.241898 51.340096 m
72.241898 54.261997 74.620796 56.636993 77.542694 56.636993 c
80.456795 56.633087 82.831795 54.258095 82.831795 51.340096 c
82.831795 48.422096 80.456795 46.047096 77.538795 46.047096 c
74.616898 46.047096 72.241898 48.422096 72.241898 51.340096 c
h
36.729897 51.054935 m
32.577599 64.226936 l
43.5896 64.226936 l
43.886478 64.226936 44.175541 64.258186 44.456791 64.31678 c
48.640392 51.054779 l
36.729897 51.054935 l
h
21.819897 61.245934 m
30.237896 66.105331 l
30.390236 66.195175 30.562117 66.238144 30.741806 66.238144 c
43.585808 66.238144 l
44.839706 66.238144 45.859207 67.257645 45.859207 68.511543 c
45.859207 69.765442 44.839706 70.784943 43.585808 70.784943 c
30.511806 70.788849 l
29.589926 70.788849 28.941507 70.585732 28.797007 70.519318 c
22.683706 66.99202 l
22.015736 66.609207 21.172007 67.08577 21.172007 67.863113 c
21.172007 82.03511 l
9.152006 82.03511 l
9.152006 63.812111 l
9.152006 62.39801 10.304306 61.245712 11.722306 61.245712 c
21.819897 61.245934 l
h
21.819897 53.406136 m
21.819897 50.195236 19.206596 47.585835 15.995697 47.585835 c
12.784797 47.585835 10.175397 50.195236 10.175397 53.406136 c
10.175397 56.617035 12.784797 59.230335 15.995697 59.230335 c
19.206596 59.230335 21.819897 56.620934 21.819897 53.406136 c
h
55.460896 27.215136 m
54.972614 30.019836 54.074196 33.121334 52.566395 35.281536 c
56.921894 34.144836 60.535194 31.156536 62.527294 27.215137 c
55.460896 27.215136 l
h
43.866898 27.215136 m
53.425499 27.215136 l
52.460659 32.480736 50.476299 35.781536 48.648201 35.781536 c
46.8162 35.781536 44.835701 32.480736 43.867001 27.215137 c
43.866898 27.215136 l
h
43.191116 32.304935 m
42.612995 30.804935 42.159916 29.082235 41.831715 27.215136 c
34.765316 27.215136 l
36.753616 31.156536 40.366917 34.144836 44.722317 35.281536 c
44.159817 34.469036 43.644218 33.476837 43.191116 32.304935 c
h
55.753117 15.281935 m
56.132027 18.488935 56.132027 21.996735 55.753117 25.203835 c
63.366417 25.203835 l
64.456215 21.981134 64.456215 18.504635 63.366417 15.281935 c
55.753117 15.281935 l
h
43.562119 15.281935 m
43.171497 18.485035 43.171497 22.000734 43.562119 25.203835 c
53.730118 25.203835 l
54.124649 22.012434 54.124649 18.473335 53.730118 15.281935 c
43.562119 15.281935 l
h
41.253517 20.242834 m
41.253517 18.539734 41.351173 16.871735 41.538677 15.281935 c
33.921478 15.281935 l
32.835579 18.504635 32.835579 21.981134 33.921478 25.203835 c
41.538677 25.203835 l
41.351177 23.614035 41.253517 21.946033 41.253517 20.242935 c
41.253517 20.242834 l
h
54.101517 8.176834 m
54.679646 9.672934 55.136715 11.399534 55.460918 13.266634 c
62.527317 13.266634 l
60.539017 9.325234 56.925716 6.336934 52.566418 5.200234 c
53.132828 6.012734 53.648418 7.004934 54.101616 8.176834 c
54.101517 8.176834 l
h
48.648415 4.700234 m
50.476513 4.700234 52.460915 8.001034 53.425713 13.266634 c
43.867111 13.266634 l
44.835861 8.001034 46.816311 4.700234 48.648312 4.700234 c
48.648415 4.700234 l
h
f*
Q
q
[13.32825 0 0 13.32825 176.51436 2561.6938] cm
/DeviceRGB {} CS
[0 0 0] SC
/DeviceRGB {} cs
[0 0 0] sc
12.8 9.38 m
12.8 10.14 12.656667 10.85 12.37 11.51 c
12.083333 12.17 11.693333 12.743334 11.2 13.230001 c
10.706667 13.716667 10.126667 14.096667 9.46 14.370001 c
8.793333 14.643334 8.086667 14.780001 7.34 14.780001 c
4.7 14.780001 l
4.7 20 l
1.6 20 l
1.6 4.02 l
7.34 4.02 l
8.086666 4.02 8.793333 4.156667 9.459999 4.43 c
10.126665 4.703333 10.706665 5.08 11.199999 5.56 c
11.693333 6.04 12.083333 6.606667 12.369999 7.26 c
12.656665 7.913333 12.799998 8.62 12.799999 9.38 c
12.8 9.38 l
h
9.72 9.34 m
9.72 8.926667 9.643333 8.54 9.490001 8.18 c
9.336668 7.82 9.126668 7.506667 8.860001 7.24 c
8.593333 6.973333 8.280001 6.76 7.920001 6.6 c
7.560001 6.440001 7.173334 6.360001 6.760001 6.360001 c
4.700001 6.360001 l
4.700001 12.400001 l
6.760001 12.400001 l
7.173334 12.400001 7.56 12.316668 7.920001 12.150001 c
8.280001 11.983334 8.593334 11.76 8.860001 11.480001 c
9.126667 11.200001 9.336667 10.876667 9.490001 10.51 c
9.643334 10.143333 9.720001 9.753333 9.72 9.34 c
h
36.736 20 m
26.175999 20 l
26.175999 4.02 l
36.736 4.02 l
36.736 6.58 l
29.216 6.58 l
29.216 10.400001 l
36.636002 10.400001 l
36.636002 12.900001 l
29.216002 12.900001 l
29.216002 17.300001 l
36.736 17.300001 l
36.736 20.000002 l
36.736 20 l
h
62.551998 20 m
59.131996 20 l
57.991997 16.360001 l
57.871998 15.96 57.721996 15.593333 57.541996 15.26 c
57.361996 14.926667 57.145329 14.64 56.891994 14.400001 c
56.63866 14.160001 56.335327 13.973334 55.981995 13.84 c
55.628662 13.706666 55.211994 13.639999 54.731995 13.64 c
53.571995 13.64 l
53.571995 20 l
50.511993 20 l
50.511993 4.02 l
56.831993 4 l
57.511993 4 58.145329 4.116667 58.731995 4.35 c
59.318661 4.583334 59.825329 4.906667 60.251995 5.320001 c
60.678661 5.733334 61.011993 6.220001 61.251995 6.780001 c
61.491997 7.340001 61.611996 7.946667 61.611996 8.6 c
61.611996 9.066667 61.538662 9.520001 61.391994 9.96 c
61.245327 10.4 61.038662 10.806666 60.771996 11.18 c
60.505329 11.553334 60.188663 11.883334 59.821995 12.17 c
59.455326 12.456666 59.051994 12.673333 58.611996 12.82 c
59.11866 13.006666 59.531994 13.276667 59.851997 13.63 c
60.172001 13.983334 60.425331 14.406667 60.611996 14.9 c
60.70533 15.126666 60.791996 15.353334 60.871994 15.58 c
60.951992 15.806666 61.035328 16.043333 61.121994 16.289999 c
61.20866 16.536665 61.301994 16.803331 61.401993 17.089998 c
61.501991 17.376665 61.611992 17.693333 61.731995 18.039999 c
61.878662 18.48 62.015327 18.856665 62.141994 19.169998 c
62.268661 19.483332 62.405327 19.759998 62.551994 19.999998 c
62.551998 20 l
h
58.492001 8.82 m
58.492001 8.446666 58.422001 8.106667 58.282001 7.8 c
58.142002 7.493333 57.952003 7.226667 57.712002 7 c
57.472 6.773333 57.188667 6.596666 56.862003 6.469999 c
56.535339 6.343333 56.185337 6.28 55.812004 6.279999 c
53.572002 6.279999 l
53.572002 11.259999 l
55.812004 11.259999 l
56.185337 11.259999 56.535339 11.203333 56.862003 11.089999 c
57.188667 10.976666 57.472 10.813333 57.712002 10.599999 c
57.952003 10.386666 58.142002 10.13 58.282001 9.83 c
58.422001 9.53 58.492001 9.193334 58.492001 8.82 c
h
86.508003 15.8 m
86.508003 16.400001 86.378006 16.970001 86.118004 17.51 c
85.858002 18.049999 85.494675 18.526667 85.028008 18.940001 c
84.56134 19.353334 84.008011 19.683334 83.368004 19.93 c
82.727997 20.176666 82.021332 20.299999 81.248001 20.300001 c
80.554665 20.300001 79.931335 20.26 79.377998 20.18 c
78.824661 20.1 78.304665 19.973333 77.818001 19.800001 c
77.331337 19.626669 76.86467 19.403336 76.417999 19.130001 c
75.971329 18.856667 75.507996 18.526667 75.028 18.140001 c
77.227997 15.920001 l
77.867996 16.453335 78.494659 16.830002 79.107994 17.050001 c
79.721329 17.27 80.387993 17.380001 81.107994 17.380001 c
81.401329 17.380001 81.677994 17.336668 81.937996 17.250002 c
82.197998 17.163336 82.42466 17.046669 82.617996 16.900002 c
82.811333 16.753334 82.964661 16.58 83.077995 16.380001 c
83.19133 16.180002 83.247993 15.960002 83.247993 15.720001 c
83.247993 15.466668 83.201324 15.240001 83.107994 15.040001 c
83.014664 14.840001 82.847992 14.646668 82.607994 14.460001 c
82.367996 14.273335 82.03466 14.083335 81.607994 13.890001 c
81.181328 13.696668 80.634659 13.480001 79.967995 13.240002 c
79.381332 13.026669 78.817993 12.783336 78.277992 12.510002 c
77.737991 12.236669 77.264656 11.906669 76.857994 11.520002 c
76.451332 11.133336 76.124664 10.680002 75.877991 10.160003 c
75.631317 9.640003 75.50798 9.02667 75.507988 8.320003 c
75.507988 7.640003 75.644653 7.013336 75.917992 6.440002 c
76.19133 5.866669 76.564659 5.376669 77.037994 4.970002 c
77.51133 4.563335 78.064659 4.246669 78.697998 4.020002 c
79.331337 3.793336 80.014671 3.680003 80.748001 3.680003 c
81.974663 3.680003 83.007996 3.840002 83.848 4.160003 c
84.688004 4.480003 85.434669 4.94667 86.087997 5.560003 c
83.927994 7.740003 l
83.527992 7.353336 83.081329 7.056669 82.587997 6.850003 c
82.094666 6.643336 81.514664 6.540003 80.848 6.540003 c
80.541336 6.540003 80.258003 6.586669 79.998001 6.680003 c
79.737999 6.773336 79.514671 6.896669 79.328003 7.050003 c
79.141335 7.203336 78.991341 7.383336 78.878006 7.590003 c
78.764671 7.796669 78.708008 8.013336 78.708008 8.240003 c
78.708008 8.493336 78.761345 8.723336 78.868011 8.930002 c
78.974678 9.136668 79.154678 9.336669 79.408012 9.530003 c
79.661346 9.723336 79.998009 9.91667 80.418015 10.110003 c
80.83802 10.303335 81.361351 10.513335 81.988014 10.740003 c
82.78801 11.020002 83.474678 11.32667 84.048012 11.660003 c
84.621346 11.993336 85.088013 12.360003 85.448013 12.760003 c
85.808014 13.160004 86.074684 13.610004 86.248016 14.110004 c
86.421349 14.610004 86.508018 15.173337 86.508018 15.800003 c
86.508003 15.8 l
h
116.463997 12 m
116.463997 13.146667 116.240662 14.226667 115.793999 15.24 c
115.347336 16.253332 114.737335 17.133331 113.963997 17.879999 c
113.190659 18.626667 112.290665 19.216667 111.264 19.65 c
110.237335 20.083332 109.144005 20.299999 107.984001 20.299999 c
106.823997 20.299999 105.727333 20.083332 104.694 19.65 c
103.660667 19.216667 102.757339 18.626667 101.984001 17.879999 c
101.210663 17.133331 100.600662 16.256664 100.153999 15.249999 c
99.707336 14.243333 99.484001 13.16 99.484001 11.999999 c
99.484001 10.839998 99.707336 9.753332 100.153999 8.739999 c
100.600662 7.726666 101.210663 6.846666 101.984001 6.099999 c
102.757339 5.353331 103.660667 4.766665 104.694 4.339998 c
105.727333 3.913332 106.823997 3.699999 107.984001 3.699998 c
109.144005 3.699998 110.237335 3.913331 111.264 4.339998 c
112.290665 4.766666 113.190659 5.356666 113.963997 6.109998 c
114.737335 6.863331 115.347336 7.743331 115.793999 8.749998 c
116.240662 9.756665 116.463997 10.839998 116.463997 11.999998 c
116.463997 12 l
h
113.344002 12 m
113.344002 11.266666 113.204002 10.576667 112.924004 9.93 c
112.644005 9.283334 112.260674 8.716667 111.774002 8.23 c
111.287331 7.743333 110.717331 7.356667 110.064003 7.070001 c
109.410675 6.783334 108.717339 6.640001 107.984001 6.640001 c
107.237335 6.640001 106.537331 6.783334 105.884003 7.070001 c
105.230675 7.356667 104.660675 7.743334 104.174004 8.23 c
103.687332 8.716667 103.304001 9.283334 103.024002 9.93 c
102.744003 10.576667 102.604004 11.266666 102.604004 12 c
102.604004 12.72 102.744003 13.406667 103.024002 14.06 c
103.304001 14.713332 103.687332 15.283333 104.174004 15.77 c
104.660675 16.256666 105.230675 16.643333 105.884003 16.93 c
106.537331 17.216667 107.237335 17.360001 107.984001 17.360001 c
108.717331 17.360001 109.410667 17.216667 110.064003 16.93 c
110.717339 16.643333 111.287338 16.256666 111.774002 15.770001 c
112.260666 15.283334 112.643997 14.713334 112.924004 14.06 c
113.20401 13.406667 113.344009 12.72 113.344002 12 c
h
143.539993 20 m
140.5 20 l
133.279999 8.78 l
133.279999 20 l
130.240005 20 l
130.240005 4 l
133.720001 4 l
140.5 14.44 l
140.5 4 l
143.539993 4 l
143.539993 20 l
h
174.056 20 m
170.65601 20 l
169.17601 16.799999 l
161.416016 16.799999 l
159.916016 20 l
156.516022 20 l
164.076019 4 l
166.496017 4 l
174.056 20 l
h
167.95599 14.22 m
165.29599 8.46 l
162.595993 14.22 l
167.95599 14.22 l
h
197.85201 20 m
187.03201 20 l
187.03201 4.02 l
190.19202 4.02 l
190.19202 17 l
197.85202 17 l
197.85202 20 l
197.85201 20 l
h
231.804 20 m
228.70399 20 l
228.70399 4.02 l
231.804 4.02 l
231.804 20 l
h
259.48001 20 m
256.44 20 l
249.22 8.78 l
249.22 20 l
246.18001 20 l
246.18001 4 l
249.66 4 l
256.44 14.44 l
256.44 4 l
259.48001 4 l
259.48001 20 l
h
284.53601 15.8 m
284.53601 16.400001 284.40601 16.970001 284.146 17.51 c
283.88599 18.049999 283.52264 18.526667 283.056 18.940001 c
282.58936 19.353334 282.03601 19.683334 281.396 19.93 c
280.75598 20.176666 280.04932 20.299999 279.276 20.300001 c
278.58267 20.300001 277.95932 20.26 277.40601 20.18 c
276.85269 20.1 276.33267 19.973333 275.84601 19.800001 c
275.35934 19.626669 274.89267 19.403336 274.44601 19.130001 c
273.99936 18.856667 273.53601 18.526667 273.056 18.140001 c
275.25601 15.920001 l
275.896 16.453335 276.52267 16.830002 277.13602 17.050001 c
277.74936 17.27 278.41602 17.380001 279.13602 17.380001 c
279.42935 17.380001 279.70602 17.336668 279.966 17.250002 c
280.22598 17.163336 280.45267 17.046669 280.646 16.900002 c
280.83932 16.753334 280.99268 16.58 281.10599 16.380001 c
281.2193 16.180002 281.27597 15.960002 281.276 15.720001 c
281.276 15.466668 281.22934 15.240001 281.13599 15.040001 c
281.04263 14.840001 280.87598 14.646668 280.63599 14.460001 c
280.396 14.273335 280.06265 14.083335 279.63599 13.890001 c
279.20932 13.696668 278.66263 13.480001 277.99597 13.240002 c
277.4093 13.026669 276.84598 12.783336 276.30597 12.510002 c
275.76596 12.236669 275.29263 11.906669 274.88596 11.520002 c
274.47928 11.133336 274.15262 10.680002 273.90594 10.160003 c
273.65927 9.640003 273.53595 9.02667 273.53595 8.320003 c
273.53595 7.640003 273.67261 7.013336 273.94595 6.440002 c
274.2193 5.866669 274.59262 5.376669 275.06595 4.970002 c
275.53928 4.563335 276.09262 4.246669 276.72595 4.020002 c
277.35928 3.793336 278.04263 3.680003 278.77594 3.680003 c
280.00259 3.680003 281.03595 3.840002 281.87595 4.160003 c
282.71594 4.480003 283.46262 4.94667 284.11594 5.560003 c
281.95593 7.740003 l
281.55594 7.353336 281.10925 7.056669 280.61594 6.850003 c
280.12262 6.643336 279.5426 6.540003 278.87595 6.540003 c
278.56927 6.540003 278.28595 6.586669 278.02594 6.680003 c
277.76593 6.773336 277.5426 6.896669 277.35593 7.050003 c
277.16925 7.203336 277.01926 7.383336 276.90591 7.590003 c
276.79257 7.796669 276.7359 8.013336 276.7359 8.240003 c
276.7359 8.493336 276.78925 8.723336 276.8959 8.930002 c
277.00256 9.136668 277.18259 9.336669 277.43591 9.530003 c
277.68924 9.723336 278.02591 9.91667 278.44592 10.110003 c
278.86594 10.303335 279.38925 10.513335 280.01593 10.740003 c
280.81595 11.020002 281.50259 11.32667 282.07593 11.660003 c
282.64926 11.993336 283.11591 12.360003 283.47592 12.760003 c
283.83594 13.160004 284.1026 13.610004 284.27591 14.110004 c
284.44922 14.610004 284.53589 15.173337 284.53592 15.800003 c
284.53601 15.8 l
h
309.09201 6.78 m
304.672 6.78 l
304.672 20 l
301.53198 20 l
301.53198 6.78 l
297.11197 6.78 l
297.11197 4.02 l
309.09198 4.02 l
309.09198 6.78 l
309.09201 6.78 l
h
336.008 20 m
332.608 20 l
331.12799 16.799999 l
323.36798 16.799999 l
321.86798 20 l
318.46799 20 l
326.02798 4 l
328.448 4 l
336.008 20 l
h
329.90799 14.22 m
327.24799 8.46 l
324.54797 14.22 l
329.90796 14.22 l
329.90799 14.22 l
h
362.284 20 m
359.24399 20 l
352.02399 8.78 l
352.02399 20 l
348.98398 20 l
348.98398 4 l
352.46399 4 l
359.24399 14.44 l
359.24399 4 l
362.284 4 l
362.284 20 l
h
391.29999 17.120001 m
390.49997 18.093334 389.52997 18.866669 388.38998 19.440001 c
387.25 20.013332 385.99332 20.299999 384.62 20.300001 c
383.43332 20.300001 382.32001 20.083334 381.28 19.650002 c
380.23999 19.216669 379.33334 18.626669 378.56 17.880001 c
377.78665 17.133333 377.17667 16.256668 376.73001 15.250001 c
376.28336 14.243335 376.06003 13.160002 376.06 12.000001 c
376.05997 10.84 376.28333 9.756667 376.73001 8.750001 c
377.1767 7.743335 377.78671 6.863335 378.56 6.110001 c
379.33328 5.356667 380.23996 4.766666 381.28 4.340001 c
382.32004 3.913335 383.43338 3.700001 384.62 3.700001 c
385.99332 3.700001 387.25 3.986667 388.38998 4.56 c
389.52997 5.133334 390.47998 5.88 391.23999 6.8 c
389.09998 9 l
388.60666 8.293333 387.96997 7.723333 387.18997 7.29 c
386.40997 6.856667 385.55328 6.64 384.61996 6.64 c
383.87329 6.64 383.16998 6.783333 382.50998 7.07 c
381.84998 7.356666 381.27332 7.743333 380.77997 8.23 c
380.28662 8.716666 379.89661 9.283333 379.60995 9.929999 c
379.3233 10.576666 379.17996 11.266666 379.17996 11.999999 c
379.17996 12.719999 379.3233 13.403333 379.60995 14.049999 c
379.89661 14.696666 380.28662 15.263332 380.77997 15.749999 c
381.27332 16.236666 381.84998 16.623333 382.50998 16.91 c
383.16998 17.196667 383.87329 17.34 384.61996 17.34 c
385.60663 17.34 386.47998 17.116667 387.23996 16.67 c
387.99994 16.223333 388.63327 15.633333 389.13995 14.9 c
391.29999 17.120001 l
h
414.836 20 m
404.276 20 l
404.276 4.02 l
414.836 4.02 l
414.836 6.58 l
407.31601 6.58 l
407.31601 10.400001 l
414.73602 10.400001 l
414.73602 12.900001 l
407.31601 12.900001 l
407.31601 17.300001 l
414.836 17.300001 l
414.836 20.000002 l
414.836 20 l
h
439.29199 15.8 m
439.29199 16.400001 439.16199 16.970001 438.90198 17.51 c
438.64197 18.049999 438.27863 18.526667 437.81198 18.940001 c
437.34534 19.353334 436.79199 19.683334 436.15198 19.93 c
435.51196 20.176666 434.8053 20.299999 434.03198 20.300001 c
433.33865 20.300001 432.7153 20.26 432.16199 20.18 c
431.60867 20.1 431.08865 19.973333 430.60199 19.800001 c
430.11533 19.626669 429.64865 19.403336 429.202 19.130001 c
428.75534 18.856667 428.29199 18.526667 427.81198 18.140001 c
430.01199 15.920001 l
430.65198 16.453335 431.27866 16.830002 431.892 17.050001 c
432.50534 17.27 433.172 17.380001 433.892 17.380001 c
434.18533 17.380001 434.46201 17.336668 434.72198 17.250002 c
434.98196 17.163336 435.20865 17.046669 435.40198 16.900002 c
435.59531 16.753334 435.74866 16.58 435.86197 16.380001 c
435.97528 16.180002 436.03195 15.960002 436.03198 15.720001 c
436.03198 15.466668 435.98532 15.240001 435.89197 15.040001 c
435.79861 14.840001 435.63196 14.646668 435.39197 14.460001 c
435.15198 14.273335 434.81863 14.083335 434.39197 13.890001 c
433.9653 13.696668 433.41861 13.480001 432.75195 13.240002 c
432.16528 13.026669 431.60196 12.783336 431.06195 12.510002 c
430.52194 12.236669 430.04861 11.906669 429.64194 11.520002 c
429.23526 11.133336 428.9086 10.680002 428.66193 10.160003 c
428.41525 9.640003 428.29193 9.02667 428.29193 8.320003 c
428.29193 7.640003 428.42859 7.013336 428.70193 6.440002 c
428.97528 5.866669 429.3486 5.376669 429.82193 4.970002 c
430.29526 4.563335 430.8486 4.246669 431.48193 4.020002 c
432.11526 3.793336 432.79861 3.680003 433.53192 3.680003 c
434.75858 3.680003 435.79193 3.840002 436.63193 4.160003 c
437.47192 4.480003 438.2186 4.94667 438.87192 5.560003 c
436.71191 7.740003 l
436.31192 7.353336 435.86523 7.056669 435.37192 6.850003 c
434.8786 6.643336 434.29858 6.540003 433.63193 6.540003 c
433.32526 6.540003 433.04193 6.586669 432.78192 6.680003 c
432.52191 6.773336 432.29858 6.896669 432.11191 7.050003 c
431.92523 7.203336 431.77524 7.383336 431.6619 7.590003 c
431.54855 7.796669 431.49188 8.013336 431.49188 8.240003 c
431.49188 8.493336 431.54523 8.723336 431.65189 8.930002 c
431.75854 9.136668 431.93857 9.336669 432.19189 9.530003 c
432.44522 9.723336 432.78189 9.91667 433.2019 10.110003 c
433.62192 10.303335 434.14523 10.513335 434.77191 10.740003 c
435.57193 11.020002 436.25858 11.32667 436.83191 11.660003 c
437.40524 11.993336 437.87189 12.360003 438.2319 12.760003 c
438.59192 13.160004 438.85858 13.610004 439.03189 14.110004 c
439.2052 14.610004 439.29187 15.173337 439.2919 15.800003 c
439.29199 15.8 l
h
455.448 20 m
455.448 20.32 455.40134 20.623333 455.30798 20.91 c
455.21463 21.196667 455.07797 21.450001 454.89798 21.67 c
454.71799 21.889999 454.49133 22.063334 454.21799 22.190001 c
453.94464 22.316668 453.62799 22.380001 453.26797 22.380001 c
453.13464 22.380001 453.00464 22.366667 452.87796 22.34 c
452.75128 22.313334 452.63461 22.286667 452.52795 22.26 c
452.52795 22.040001 l
452.91461 21.973333 453.22794 21.793333 453.46796 21.5 c
453.70798 21.206667 453.82797 20.866667 453.82794 20.48 c
453.82794 20.413332 453.82129 20.333332 453.80795 20.24 c
453.79462 20.146667 453.77463 20.066668 453.74796 20 c
452.46796 20 l
452.46796 17.02 l
455.44797 17.02 l
455.44797 20 l
455.448 20 l
h
497.57999 15.8 m
497.57999 16.400001 497.44998 16.970001 497.18997 17.51 c
496.92996 18.049999 496.56662 18.526667 496.09998 18.940001 c
495.63333 19.353334 495.07999 19.683334 494.43997 19.93 c
493.79996 20.176666 493.09329 20.299999 492.31998 20.300001 c
491.62665 20.300001 491.0033 20.26 490.44998 20.18 c
489.89667 20.1 489.37665 19.973333 488.88998 19.800001 c
488.40332 19.626669 487.93665 19.403336 487.48999 19.130001 c
487.04333 18.856667 486.57999 18.526667 486.09998 18.140001 c
488.29999 15.920001 l
488.93997 16.453335 489.56665 16.830002 490.17999 17.050001 c
490.79333 17.27 491.45999 17.380001 492.17999 17.380001 c
492.47333 17.380001 492.75 17.336668 493.00998 17.250002 c
493.26996 17.163336 493.49664 17.046669 493.68997 16.900002 c
493.8833 16.753334 494.03665 16.58 494.14996 16.380001 c
494.26328 16.180002 494.31995 15.960002 494.31998 15.720001 c
494.31998 15.466668 494.27332 15.240001 494.17996 15.040001 c
494.08661 14.840001 493.91995 14.646668 493.67996 14.460001 c
493.43997 14.273335 493.10663 14.083335 492.67996 13.890001 c
492.2533 13.696668 491.7066 13.480001 491.03995 13.240002 c
490.45328 13.026669 489.88995 12.783336 489.34995 12.510002 c
488.80994 12.236669 488.33661 11.906669 487.92993 11.520002 c
487.52325 11.133336 487.19659 10.680002 486.94992 10.160003 c
486.70325 9.640003 486.57993 9.02667 486.57993 8.320003 c
486.57993 7.640003 486.71658 7.013336 486.98993 6.440002 c
487.26328 5.866669 487.6366 5.376669 488.10992 4.970002 c
488.58325 4.563335 489.1366 4.246669 489.76993 4.020002 c
490.40326 3.793336 491.08661 3.680003 491.81992 3.680003 c
493.04657 3.680003 494.07993 3.840002 494.91992 4.160003 c
495.75992 4.480003 496.50659 4.94667 497.15991 5.560003 c
494.99991 7.740003 l
494.59991 7.353336 494.15323 7.056669 493.65991 6.850003 c
493.1666 6.643336 492.58658 6.540003 491.91992 6.540003 c
491.61325 6.540003 491.32993 6.586669 491.06992 6.680003 c
490.80991 6.773336 490.58658 6.896669 490.3999 7.050003 c
490.21323 7.203336 490.06323 7.383336 489.94989 7.590003 c
489.83655 7.796669 489.77988 8.013336 489.77988 8.240003 c
489.77988 8.493336 489.83322 8.723336 489.93988 8.930002 c
490.04654 9.136668 490.22656 9.336669 490.47989 9.530003 c
490.73322 9.723336 491.06989 9.91667 491.4899 10.110003 c
491.90991 10.303335 492.43323 10.513335 493.05991 10.740003 c
493.85992 11.020002 494.54657 11.32667 495.1199 11.660003 c
495.69324 11.993336 496.15988 12.360003 496.5199 12.760003 c
496.87991 13.160004 497.14658 13.610004 497.31989 14.110004 c
497.49319 14.610004 497.57986 15.173337 497.5799 15.800003 c
497.57999 15.8 l
h
514.25598 20 m
511.15598 20 l
511.15598 4.02 l
514.25598 4.02 l
514.25598 20 l
h
544.59198 20 m
541.552 20 l
541.552 9.32 l
536.51202 17.82 l
531.672 9.24 l
531.672 20 l
528.63202 20 l
528.63202 4 l
532.13202 4 l
536.57202 11.940001 l
541.21204 4 l
544.59204 4 l
544.59204 20 l
544.59198 20 l
h
570.16803 9.38 m
570.16803 10.14 570.02472 10.85 569.73804 11.51 c
569.45135 12.17 569.0614 12.743334 568.56805 13.230001 c
568.07471 13.716667 567.49475 14.096667 566.82806 14.370001 c
566.16138 14.643334 565.45471 14.780001 564.70807 14.780001 c
562.06805 14.780001 l
562.06805 20 l
558.96808 20 l
558.96808 4.02 l
564.70807 4.02 l
565.45471 4.02 566.16138 4.156667 566.82806 4.43 c
567.49475 4.703333 568.07471 5.08 568.56805 5.56 c
569.0614 6.04 569.45135 6.606667 569.73804 7.26 c
570.02472 7.913333 570.16803 8.62 570.16803 9.38 c
h
567.08801 9.34 m
567.08801 8.926667 567.01135 8.54 566.85803 8.18 c
566.70471 7.82 566.49469 7.506667 566.22803 7.24 c
565.96136 6.973333 565.64801 6.76 565.28802 6.6 c
564.92804 6.440001 564.54138 6.360001 564.12805 6.360001 c
562.06805 6.360001 l
562.06805 12.400001 l
564.12805 12.400001 l
564.54138 12.400001 564.92804 12.316668 565.28802 12.150001 c
565.64801 11.983334 565.96136 11.76 566.22803 11.480001 c
566.49469 11.200001 566.70471 10.876667 566.85803 10.51 c
567.01135 10.143333 567.08801 9.753333 567.08801 9.34 c
h
594.36401 20 m
583.54401 20 l
583.54401 4.02 l
586.70398 4.02 l
586.70398 17 l
594.36395 17 l
594.36395 20 l
594.36401 20 l
h
610.64001 20 m
607.54004 20 l
607.54004 4.02 l
610.64001 4.02 l
610.64001 20 l
h
635.57599 6.68 m
628.05597 6.68 l
628.05597 10.4 l
635.47595 10.4 l
635.47595 12.92 l
628.05597 12.92 l
628.05597 20 l
625.01599 20 l
625.01599 4.02 l
635.57599 4.02 l
635.57599 6.68 l
635.57599 6.68 l
h
652.052 20 m
648.95203 20 l
648.95203 4.02 l
652.052 4.02 l
652.052 20 l
h
676.98798 20 m
666.42798 20 l
666.42798 4.02 l
676.98798 4.02 l
676.98798 6.58 l
669.46796 6.58 l
669.46796 10.400001 l
676.88794 10.400001 l
676.88794 12.900001 l
669.46796 12.900001 l
669.46796 17.300001 l
676.98798 17.300001 l
676.98798 20.000002 l
676.98798 20 l
h
704.98401 12 m
704.98401 13.106667 704.79736 14.143333 704.42401 15.11 c
704.05066 16.076666 703.5307 16.923332 702.86401 17.65 c
702.19733 18.376667 701.4007 18.949999 700.474 19.369999 c
699.5473 19.789999 698.53729 19.999998 697.44397 19.999998 c
690.76398 19.999998 l
690.76398 3.999998 l
697.44397 3.999998 l
698.53729 3.999998 699.5473 4.213331 700.474 4.639998 c
701.4007 5.066665 702.19733 5.639998 702.86401 6.359998 c
703.5307 7.079998 704.05066 7.926664 704.42401 8.899998 c
704.79736 9.873331 704.98401 10.906665 704.98401 11.999998 c
704.98401 12 l
h
701.84399 11.92 m
701.85736 11.173333 701.74402 10.466667 701.50397 9.8 c
701.26392 9.133333 700.9173 8.55 700.46399 8.05 c
700.01068 7.55 699.45404 7.156667 698.79401 6.87 c
698.13397 6.583333 697.39063 6.44 696.56403 6.44 c
693.86401 6.44 l
693.86401 17.360001 l
696.56403 17.360001 l
697.37732 17.360001 698.10736 17.223333 698.75403 16.950001 c
699.4007 16.676668 699.95074 16.296667 700.40405 15.81 c
700.85736 15.323334 701.2074 14.75 701.45404 14.09 c
701.70068 13.43 701.83069 12.706667 701.84406 11.92 c
701.84399 11.92 l
h
f
Q
q
[32.837711 0 0 32.837711 1555.39697 1751.0275] cm
/DeviceRGB {} CS
[0 0 0] SC
/DeviceRGB {} cs
[0 0 0] sc
4.74 19.26 m
3.54 18.58 2.586667 17.656666 1.88 16.49 c
1.173333 15.323333 0.82 14.053333 0.82 12.68 c
0.82 11.320001 1.173333 10.056667 1.88 8.89 c
2.586666 7.723333 3.54 6.8 4.74 6.12 c
5.94 5.440001 7.253333 5.1 8.68 5.1 c
10.106668 5.1 11.426667 5.440001 12.64 6.12 c
13.853334 6.8 14.813334 7.723333 15.520001 8.89 c
16.226667 10.056667 16.580002 11.320001 16.58 12.68 c
16.58 14.053333 16.226667 15.323333 15.520001 16.49 c
14.813335 17.656666 13.853334 18.58 12.64 19.26 c
11.426666 19.940001 10.106667 20.280001 8.68 20.280001 c
7.253334 20.280001 5.940001 19.940001 4.74 19.26 c
4.74 19.26 l
h
6.32 8.63 m
5.6 9.063334 5.026667 9.64 4.6 10.360001 c
4.173334 11.080001 3.960001 11.853334 3.96 12.68 c
3.96 13.506666 4.173334 14.283333 4.6 15.01 c
5.026667 15.736669 5.600001 16.320002 6.320001 16.76 c
7.04 17.199999 7.826667 17.419998 8.68 17.42 c
9.533334 17.420002 10.323334 17.200001 11.05 16.76 c
11.776667 16.32 12.35 15.736666 12.770001 15.01 c
13.190001 14.283335 13.400001 13.506668 13.400001 12.68 c
13.400001 11.853333 13.190001 11.079999 12.770001 10.360001 c
12.35 9.640002 11.776667 9.063335 11.05 8.630001 c
10.323334 8.196667 9.533334 7.98 8.68 7.980001 c
7.826667 7.980002 7.04 8.196669 6.32 8.630001 c
6.32 8.63 l
h
22.459999 16.870001 m
23.406666 17.25 24.273333 17.440001 25.059999 17.440001 c
25.886665 17.440001 26.543333 17.280001 27.029999 16.960001 c
27.516665 16.640001 27.759998 16.260002 27.759998 15.820001 c
27.759998 15.460001 27.616665 15.166667 27.329998 14.940001 c
27.043331 14.713334 26.679998 14.543334 26.239998 14.43 c
25.799997 14.316667 25.219997 14.193334 24.499998 14.06 c
23.539997 13.900001 22.659998 13.693334 21.859999 13.440001 c
21.059999 13.186667 20.333332 12.746667 19.679998 12.120001 c
19.026665 11.493335 18.699997 10.646668 18.699999 9.580001 c
18.699999 8.006667 19.276665 6.876668 20.429998 6.19 c
21.583332 5.503334 22.939999 5.16 24.499998 5.160001 c
25.699997 5.160001 26.74333 5.323334 27.629997 5.650001 c
28.516665 5.976667 29.399998 6.466667 30.279997 7.120001 c
28.519997 9.520001 l
27.866663 9.053334 27.186663 8.686667 26.479996 8.42 c
25.773329 8.153333 25.073328 8.02 24.379995 8.020001 c
23.766663 8.020001 23.193329 8.13 22.659996 8.35 c
22.126663 8.570001 21.859997 8.940001 21.859997 9.46 c
21.859997 9.780001 21.996664 10.036667 22.269997 10.23 c
22.543329 10.423332 22.84333 10.563333 23.169996 10.65 c
23.496662 10.736667 24.026663 10.860001 24.759996 11.02 c
25.479996 11.16 l
26.586662 11.373333 27.503328 11.61 28.229996 11.87 c
28.956663 12.13 29.586662 12.566667 30.119995 13.18 c
30.653328 13.793334 30.919994 14.646667 30.919994 15.74 c
30.919994 17.219999 30.396662 18.346666 29.349995 19.119999 c
28.303328 19.893332 26.886662 20.279999 25.099995 20.279999 c
22.486662 20.279999 20.286661 19.519999 18.499994 17.999998 c
20.179995 15.579998 l
20.753328 16.059998 21.513329 16.489998 22.459995 16.869999 c
22.459999 16.870001 l
h
33.299999 5.38 m
39.34 5.38 l
41.513332 5.38 43.293331 5.993333 44.68 7.22 c
45.426666 7.873334 45.993332 8.663334 46.380001 9.59 c
46.76667 10.516666 46.960003 11.546666 46.960003 12.68 c
46.960003 13.786667 46.760002 14.816667 46.360004 15.770001 c
45.960007 16.723333 45.400005 17.526667 44.680004 18.18 c
44.013336 18.766666 43.223339 19.216667 42.310005 19.530001 c
41.396671 19.843334 40.406673 20.000002 39.340004 20 c
33.300003 20 l
33.300003 5.38 l
33.299999 5.38 l
h
39.34 17.26 m
40.593334 17.26 41.643333 16.933334 42.490002 16.280001 c
43.33667 15.626668 43.760002 14.433334 43.760002 12.700001 c
43.760002 10.966667 43.333336 9.773334 42.480003 9.120001 c
41.626671 8.466668 40.580006 8.140001 39.340004 8.140001 c
36.460003 8.140001 l
36.460003 17.260002 l
39.340004 17.260002 l
39.34 17.26 l
h
52.740002 19.5 m
51.753334 18.993334 50.990002 18.273333 50.450001 17.34 c
49.91 16.406668 49.639999 15.320001 49.639999 14.08 c
49.639999 5.4 l
52.799999 5.4 l
52.799999 14.08 l
52.799999 14.933333 52.983334 15.616666 53.349998 16.129999 c
53.716663 16.643331 54.156666 17.006664 54.669998 17.219999 c
55.183331 17.433334 55.693333 17.540001 56.199997 17.539999 c
56.693333 17.539999 57.196663 17.433332 57.709995 17.219999 c
58.223328 17.006666 58.659992 16.643333 59.019997 16.129999 c
59.380001 15.616666 59.560001 14.933332 59.559998 14.079999 c
59.559998 5.399999 l
62.719997 5.399999 l
62.719997 14.079999 l
62.719997 15.319999 62.453331 16.406666 61.919998 17.339998 c
61.386665 18.273331 60.626667 18.993332 59.639999 19.499998 c
58.653332 20.006664 57.506668 20.259998 56.200001 20.259998 c
54.880001 20.259998 53.726669 20.006664 52.740002 19.499998 c
52.740002 19.5 l
h
f
Q
q
[32.665565 0 0 32.665565 3768.1091 1751.9054] cm
/DeviceRGB {} CS
[0 0 0] SC
/DeviceRGB {} cs
[0 0 0] sc
7.56 5.38 m
13.6 5.38 l
15.773335 5.38 17.553333 5.993333 18.940001 7.22 c
19.686668 7.873334 20.253334 8.663334 20.640001 9.59 c
21.026669 10.516666 21.220001 11.546666 21.220001 12.68 c
21.220001 13.786667 21.02 14.816667 20.620001 15.770001 c
20.220001 16.723333 19.66 17.526667 18.940001 18.18 c
18.273335 18.766666 17.483334 19.216667 16.57 19.530001 c
15.656666 19.843334 14.666666 20.000002 13.599999 20 c
7.56 20 l
7.56 5.38 l
7.56 5.38 l
h
13.6 17.26 m
14.853334 17.26 15.903334 16.933334 16.75 16.280001 c
17.596666 15.626668 18.02 14.433334 18.02 12.700001 c
18.02 10.966667 17.593334 9.773334 16.74 9.120001 c
15.886666 8.466668 14.839999 8.140001 13.599999 8.140001 c
10.719999 8.140001 l
10.719999 17.260002 l
13.599999 17.260002 l
13.6 17.26 l
h
26.4 11.38 m
33.400002 11.38 l
33.400002 14.14 l
26.400002 14.14 l
26.400002 17.26 l
34.32 17.26 l
34.32 20 l
23.24 20 l
23.24 5.38 l
34.32 5.38 l
34.32 8.12 l
26.4 8.12 l
26.4 11.38 l
h
43.18 20.360001 m
35.799999 5.400001 l
39.279999 5.400001 l
43.18 13.480001 l
47.099998 5.400001 l
50.599998 5.400001 l
43.18 20.360001 l
h
55.400002 11.38 m
62.400002 11.38 l
62.400002 14.14 l
55.400002 14.14 l
55.400002 17.26 l
63.32 17.26 l
63.32 20 l
52.239998 20 l
52.239998 5.38 l
63.32 5.38 l
63.32 8.12 l
55.400002 8.12 l
55.400002 11.38 l
h
77.080002 20 m
66.240005 20 l
66.240005 5.38 l
69.420006 5.38 l
69.420006 17.26 l
77.080002 17.26 l
77.080002 20 l
h
81.339996 19.26 m
80.139992 18.58 79.186661 17.656666 78.479996 16.49 c
77.773331 15.323333 77.419998 14.053333 77.419998 12.68 c
77.419998 11.320001 77.773331 10.056667 78.479996 8.89 c
79.186661 7.723333 80.139992 6.8 81.339996 6.12 c
82.540001 5.440001 83.853333 5.1 85.279999 5.1 c
86.706665 5.1 88.026665 5.440001 89.239998 6.12 c
90.453331 6.8 91.41333 7.723333 92.119995 8.89 c
92.82666 10.056667 93.179993 11.320001 93.179993 12.68 c
93.179993 14.053333 92.82666 15.323333 92.119995 16.49 c
91.41333 17.656666 90.453331 18.58 89.239998 19.26 c
88.026665 19.940001 86.706665 20.280001 85.279999 20.280001 c
83.853333 20.280001 82.540001 19.940001 81.339996 19.26 c
h
82.919998 8.63 m
82.199997 9.063334 81.626663 9.64 81.199997 10.360001 c
80.773331 11.080001 80.559998 11.853334 80.559998 12.68 c
80.559998 13.506666 80.773331 14.283333 81.199997 15.01 c
81.626663 15.736669 82.199997 16.320002 82.919998 16.76 c
83.639999 17.199999 84.426666 17.419998 85.279999 17.42 c
86.133331 17.420002 86.923332 17.200001 87.650002 16.76 c
88.376671 16.32 88.950005 15.736666 89.370003 15.01 c
89.790001 14.283335 90 13.506668 90 12.68 c
90 11.853333 89.790001 11.079999 89.370003 10.360001 c
88.950005 9.640002 88.376671 9.063335 87.650002 8.630001 c
86.923332 8.196667 86.133331 7.98 85.279999 7.980001 c
84.426666 7.980002 83.639999 8.196669 82.919998 8.630001 c
82.919998 8.63 l
h
104.830002 6.08 m
105.716667 6.546667 106.400002 7.176666 106.880005 7.97 c
107.360008 8.763333 107.600006 9.646667 107.600006 10.62 c
107.600006 11.593333 107.376671 12.466666 106.930008 13.24 c
106.483345 14.013333 105.813339 14.623333 104.920006 15.07 c
104.026672 15.516666 102.946671 15.74 101.680008 15.74 c
98.920006 15.74 l
98.920006 20 l
95.760002 20 l
95.760002 5.38 l
101.700005 5.38 l
102.900009 5.38 103.943336 5.613333 104.830002 6.08 c
h
103.839996 12.3 m
104.226662 11.833334 104.419998 11.273334 104.419998 10.62 c
104.419998 10.193333 104.32 9.79 104.119995 9.41 c
103.919991 9.03 103.623329 8.72 103.229996 8.48 c
102.836662 8.239999 102.366661 8.119999 101.819992 8.12 c
98.919991 8.12 l
98.919991 13 l
102.139992 13 l
102.886658 13 103.453323 12.766666 103.839989 12.3 c
103.839996 12.3 l
h
112.620003 11.38 m
119.620003 11.38 l
119.620003 14.14 l
112.620003 14.14 l
112.620003 17.26 l
120.540001 17.26 l
120.540001 20 l
109.459999 20 l
109.459999 5.38 l
120.540001 5.38 l
120.540001 8.12 l
112.620003 8.12 l
112.620003 11.38 l
h
123.480003 20 m
123.480003 5.38 l
129.980011 5.38 l
131.020004 5.38 131.940002 5.593333 132.740005 6.02 c
133.540009 6.446667 134.160004 7.046667 134.600006 7.82 c
135.040009 8.593333 135.26001 9.473333 135.26001 10.46 c
135.26001 11.513333 134.993347 12.453333 134.460007 13.28 c
133.926666 14.106667 133.200012 14.713333 132.280014 15.099999 c
133.226685 16.299999 134.486679 17.933332 136.060013 20 c
132.280014 20 l
131.426682 18.933332 130.26001 17.413334 128.780014 15.440001 c
126.62001 15.440001 l
126.62001 20 l
123.480011 20 l
123.480003 20 l
h
129.979996 12.7 m
130.526672 12.7 131.020004 12.503333 131.459991 12.11 c
131.899979 11.716666 132.11998 11.166666 132.119995 10.459999 c
132.119995 9.886666 131.96666 9.353333 131.659988 8.859999 c
131.353317 8.366665 130.79332 8.119998 129.979996 8.119999 c
126.619995 8.119999 l
126.619995 12.699999 l
129.979996 12.699999 l
129.979996 12.7 l
h
f
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%EOF
</file>

<file path="src/images/branding/Logo Files/For Print/eps/Color logo - no background.eps">
%!PS-Adobe-3.0 EPSF-3.0
%Produced by poppler pdftops version: 22.05.0 (http://poppler.freedesktop.org)
%%Creator: Chromium
%%LanguageLevel: 3
%%DocumentSuppliedResources: (atend)
%%BoundingBox: 0 0 2346 736
%%HiResBoundingBox: 0 0 2346 735.12
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.00 0
%%Copyright: Copyright 1996-2011, 2022 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  /setpagedevice where {
    pop 2 dict begin
      /Policies 1 dict dup begin /PageSize 6 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop
  } ifelse
} def
/pdfSetupPaper {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfOPM false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfPatternCS false def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/opm { dup /pdfOPM exch def
      /setoverprintmode where{pop setoverprintmode}{pop}ifelse  } def
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16L3 {
  1 index /CIDFont resourcestatus {
    pop pop 1 index /CIDFont findresource /CIDFontType known
  } {
    false
  } ifelse
  {
    0 eq { /Identity-H } { /Identity-V } ifelse
    exch 1 array astore composefont pop
  } {
    pdfMakeFont16
  } ifelse
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
  /pdfOPM where {
    pop
    pdfOPM /setoverprintmode where{pop setoverprintmode}{pop}ifelse 
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Tp { /pdfPatternCS exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/xyshow where {
  pop
  /xyshow2 {
    dup length array
    0 2 2 index length 1 sub {
      2 index 1 index 2 copy get 3 1 roll 1 add get
      pdfTextMat dtransform
      4 2 roll 2 copy 6 5 roll put 1 add 3 1 roll dup 4 2 roll put
    } for
    exch pop
    xyshow
  } def
}{
  /xyshow2 {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval show moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval show moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/cshow where {
  pop
  /xycp {
    0 3 2 roll
    {
      pop pop currentpoint 3 2 roll
      1 string dup 0 4 3 roll put false charpath moveto
      2 copy get 2 index 2 index 1 add get
      pdfTextMat dtransform rmoveto
      2 add
    } exch cshow
    pop pop
  } def
}{
  /xycp {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval false charpath moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval false charpath moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/Tj {
  fCol
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 4 2 roll
  pdfTextRender 1 and 0 eq {
    2 copy xyshow2
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    3 index 3 index moveto
    2 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    xycp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    4 2 roll moveto xycp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    pop pop pop pop
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { 0.001 mul pdfFontSize mul pdfHorizScaling mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { 0.001 mul pdfFontSize mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
/Tclip* { pdfTextClipPath cvx exec eoclip newpath
         /pdfTextClipPath [] def } def
% Level 2/3 image operators
/pdfImBuf 100 string def
/pdfImStr {
  2 copy exch length lt {
    2 copy get exch 1 add exch
  } {
    ()
  } ifelse
} def
/skipEOD {
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfIm { image skipEOD } def
/pdfMask {
  /ReusableStreamDecode filter
  skipEOD
  /maskStream exch def
} def
/pdfMaskEnd { maskStream closefile } def
/pdfMaskInit {
  /maskArray exch def
  /maskIdx 0 def
} def
/pdfMaskSrc {
  maskIdx maskArray length lt {
    maskArray maskIdx get
    /maskIdx maskIdx 1 add def
  } {
    ()
  } ifelse
} def
/pdfImM { fCol imagemask skipEOD } def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
/CIDInit /ProcSet findresource begin
10 dict begin
  begincmap
  /CMapType 1 def
  /CMapName /Identity-H def
  /CIDSystemInfo 3 dict dup begin
    /Registry (Adobe) def
    /Ordering (Identity) def
    /Supplement 0 def
  end def
  1 begincodespacerange
    <0000> <ffff>
  endcodespacerange
  0 usefont
  1 begincidrange
    <0000> <ffff> 0
  endcidrange
  endcmap
  currentdict CMapName exch /CMap defineresource pop
end
10 dict begin
  begincmap
  /CMapType 1 def
  /CMapName /Identity-V def
  /CIDSystemInfo 3 dict dup begin
    /Registry (Adobe) def
    /Ordering (Identity) def
    /Supplement 0 def
  end def
  /WMode 1 def
  1 begincodespacerange
    <0000> <ffff>
  endcodespacerange
  0 usefont
  1 begincidrange
    <0000> <ffff> 0
  endcidrange
  endcmap
  currentdict CMapName exch /CMap defineresource pop
end
end
%%EndProlog
%%BeginSetup
xpdf begin
%%EndSetup
pdfStartPage
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
0 0 2346 735.12 re
W
q
[0.24 0 0 -0.24 0 735.12] cm
q
0 0 9771.875 3056.25 re
W*
q
[14.689504 0 0 14.689504 4160.7959 128.73938] cm
/DeviceRGB {} CS
[0.0039 0.4118 0.4314] SC
/DeviceRGB {} cs
[0.0039 0.4118 0.4314] sc
44.723 5.1992 m
40.3675 6.3359 36.7542 9.3242 34.765999 13.2656 c
41.832397 13.2656 l
42.324589 10.4453 43.211296 7.375 44.722996 5.199201 c
44.723 5.1992 l
h
27.140999 87.1642 m
26.668339 86.871231 26.047199 87.015762 25.754299 87.484512 c
25.461329 87.957169 25.60586 88.578316 26.07852 88.871216 c
40.160519 97.65242 58.078522 97.418114 71.949516 88.277466 c
72.41436 87.972778 72.543266 87.347778 72.238579 86.882965 c
71.933891 86.418121 71.308891 86.289215 70.844078 86.597809 c
57.606079 95.308708 40.578079 95.527512 27.141079 87.164215 c
27.140999 87.1642 l
h
23.777699 20.746201 m
24.215199 20.406361 24.297228 19.77354 23.957388 19.336 c
23.617548 18.89459 22.984728 18.816471 22.543287 19.156311 c
15.371388 24.703211 10.070288 32.562309 7.621287 41.28931 c
7.437697 41.937752 7.929877 42.570511 8.593947 42.570511 c
9.031447 42.570511 9.437697 42.277542 9.562697 41.83614 c
11.898598 33.519741 16.945498 26.031139 23.777699 20.74614 c
23.777699 20.746201 l
h
89.675705 42.0042 m
87.238205 32.711201 81.656204 24.4342 73.952705 18.6952 c
73.507393 18.367081 72.878502 18.456921 72.546509 18.902229 c
72.214478 19.34754 72.304321 19.976429 72.75354 20.30843 c
80.085541 25.777229 85.40554 33.663429 87.72654 42.51543 c
87.867172 43.058399 88.429672 43.374809 88.95314 43.23027 c
89.492203 43.093552 89.812523 42.54277 89.675797 42.00367 c
89.675705 42.0042 l
h
92.414001 79.375198 m
62.656002 79.375198 l
62.656002 82.0354 l
92.417999 82.0354 l
92.414001 79.375198 l
h
90.539001 64.086197 m
64.531006 64.086197 l
64.531006 77.363197 l
90.539001 77.363197 l
90.539001 64.086197 l
h
77.530998 58.648697 m
74.390396 58.648697 71.394295 59.902596 69.187195 62.074497 c
85.882195 62.074497 l
83.671295 59.898697 80.679092 58.648697 77.530594 58.648697 c
77.530998 58.648697 l
h
72.241898 51.340096 m
72.241898 54.261997 74.620796 56.636993 77.542694 56.636993 c
80.456795 56.633087 82.831795 54.258095 82.831795 51.340096 c
82.831795 48.422096 80.456795 46.047096 77.538795 46.047096 c
74.616898 46.047096 72.241898 48.422096 72.241898 51.340096 c
h
36.729897 51.054935 m
32.577599 64.226936 l
43.5896 64.226936 l
43.886478 64.226936 44.175541 64.258186 44.456791 64.31678 c
48.640392 51.054779 l
36.729897 51.054935 l
h
21.819897 61.245934 m
30.237896 66.105331 l
30.390236 66.195175 30.562117 66.238144 30.741806 66.238144 c
43.585808 66.238144 l
44.839706 66.238144 45.859207 67.257645 45.859207 68.511543 c
45.859207 69.765442 44.839706 70.784943 43.585808 70.784943 c
30.511806 70.788849 l
29.589926 70.788849 28.941507 70.585732 28.797007 70.519318 c
22.683706 66.99202 l
22.015736 66.609207 21.172007 67.08577 21.172007 67.863113 c
21.172007 82.03511 l
9.152006 82.03511 l
9.152006 63.812111 l
9.152006 62.39801 10.304306 61.245712 11.722306 61.245712 c
21.819897 61.245934 l
h
21.819897 53.406136 m
21.819897 50.195236 19.206596 47.585835 15.995697 47.585835 c
12.784797 47.585835 10.175397 50.195236 10.175397 53.406136 c
10.175397 56.617035 12.784797 59.230335 15.995697 59.230335 c
19.206596 59.230335 21.819897 56.620934 21.819897 53.406136 c
h
55.460896 27.215136 m
54.972614 30.019836 54.074196 33.121334 52.566395 35.281536 c
56.921894 34.144836 60.535194 31.156536 62.527294 27.215137 c
55.460896 27.215136 l
h
43.866898 27.215136 m
53.425499 27.215136 l
52.460659 32.480736 50.476299 35.781536 48.648201 35.781536 c
46.8162 35.781536 44.835701 32.480736 43.867001 27.215137 c
43.866898 27.215136 l
h
43.191116 32.304935 m
42.612995 30.804935 42.159916 29.082235 41.831715 27.215136 c
34.765316 27.215136 l
36.753616 31.156536 40.366917 34.144836 44.722317 35.281536 c
44.159817 34.469036 43.644218 33.476837 43.191116 32.304935 c
h
55.753117 15.281935 m
56.132027 18.488935 56.132027 21.996735 55.753117 25.203835 c
63.366417 25.203835 l
64.456215 21.981134 64.456215 18.504635 63.366417 15.281935 c
55.753117 15.281935 l
h
43.562119 15.281935 m
43.171497 18.485035 43.171497 22.000734 43.562119 25.203835 c
53.730118 25.203835 l
54.124649 22.012434 54.124649 18.473335 53.730118 15.281935 c
43.562119 15.281935 l
h
41.253517 20.242834 m
41.253517 18.539734 41.351173 16.871735 41.538677 15.281935 c
33.921478 15.281935 l
32.835579 18.504635 32.835579 21.981134 33.921478 25.203835 c
41.538677 25.203835 l
41.351177 23.614035 41.253517 21.946033 41.253517 20.242935 c
41.253517 20.242834 l
h
54.101517 8.176834 m
54.679646 9.672934 55.136715 11.399534 55.460918 13.266634 c
62.527317 13.266634 l
60.539017 9.325234 56.925716 6.336934 52.566418 5.200234 c
53.132828 6.012734 53.648418 7.004934 54.101616 8.176834 c
54.101517 8.176834 l
h
48.648415 4.700234 m
50.476513 4.700234 52.460915 8.001034 53.425713 13.266634 c
43.867111 13.266634 l
44.835861 8.001034 46.816311 4.700234 48.648312 4.700234 c
48.648415 4.700234 l
h
f*
Q
q
[13.32825 0 0 13.32825 176.51436 2561.6938] cm
/DeviceRGB {} CS
[0.0039 0.4118 0.4314] SC
/DeviceRGB {} cs
[0.0039 0.4118 0.4314] sc
12.8 9.38 m
12.8 10.14 12.656667 10.85 12.37 11.51 c
12.083333 12.17 11.693333 12.743334 11.2 13.230001 c
10.706667 13.716667 10.126667 14.096667 9.46 14.370001 c
8.793333 14.643334 8.086667 14.780001 7.34 14.780001 c
4.7 14.780001 l
4.7 20 l
1.6 20 l
1.6 4.02 l
7.34 4.02 l
8.086666 4.02 8.793333 4.156667 9.459999 4.43 c
10.126665 4.703333 10.706665 5.08 11.199999 5.56 c
11.693333 6.04 12.083333 6.606667 12.369999 7.26 c
12.656665 7.913333 12.799998 8.62 12.799999 9.38 c
12.8 9.38 l
h
9.72 9.34 m
9.72 8.926667 9.643333 8.54 9.490001 8.18 c
9.336668 7.82 9.126668 7.506667 8.860001 7.24 c
8.593333 6.973333 8.280001 6.76 7.920001 6.6 c
7.560001 6.440001 7.173334 6.360001 6.760001 6.360001 c
4.700001 6.360001 l
4.700001 12.400001 l
6.760001 12.400001 l
7.173334 12.400001 7.56 12.316668 7.920001 12.150001 c
8.280001 11.983334 8.593334 11.76 8.860001 11.480001 c
9.126667 11.200001 9.336667 10.876667 9.490001 10.51 c
9.643334 10.143333 9.720001 9.753333 9.72 9.34 c
h
36.736 20 m
26.175999 20 l
26.175999 4.02 l
36.736 4.02 l
36.736 6.58 l
29.216 6.58 l
29.216 10.400001 l
36.636002 10.400001 l
36.636002 12.900001 l
29.216002 12.900001 l
29.216002 17.300001 l
36.736 17.300001 l
36.736 20.000002 l
36.736 20 l
h
62.551998 20 m
59.131996 20 l
57.991997 16.360001 l
57.871998 15.96 57.721996 15.593333 57.541996 15.26 c
57.361996 14.926667 57.145329 14.64 56.891994 14.400001 c
56.63866 14.160001 56.335327 13.973334 55.981995 13.84 c
55.628662 13.706666 55.211994 13.639999 54.731995 13.64 c
53.571995 13.64 l
53.571995 20 l
50.511993 20 l
50.511993 4.02 l
56.831993 4 l
57.511993 4 58.145329 4.116667 58.731995 4.35 c
59.318661 4.583334 59.825329 4.906667 60.251995 5.320001 c
60.678661 5.733334 61.011993 6.220001 61.251995 6.780001 c
61.491997 7.340001 61.611996 7.946667 61.611996 8.6 c
61.611996 9.066667 61.538662 9.520001 61.391994 9.96 c
61.245327 10.4 61.038662 10.806666 60.771996 11.18 c
60.505329 11.553334 60.188663 11.883334 59.821995 12.17 c
59.455326 12.456666 59.051994 12.673333 58.611996 12.82 c
59.11866 13.006666 59.531994 13.276667 59.851997 13.63 c
60.172001 13.983334 60.425331 14.406667 60.611996 14.9 c
60.70533 15.126666 60.791996 15.353334 60.871994 15.58 c
60.951992 15.806666 61.035328 16.043333 61.121994 16.289999 c
61.20866 16.536665 61.301994 16.803331 61.401993 17.089998 c
61.501991 17.376665 61.611992 17.693333 61.731995 18.039999 c
61.878662 18.48 62.015327 18.856665 62.141994 19.169998 c
62.268661 19.483332 62.405327 19.759998 62.551994 19.999998 c
62.551998 20 l
h
58.492001 8.82 m
58.492001 8.446666 58.422001 8.106667 58.282001 7.8 c
58.142002 7.493333 57.952003 7.226667 57.712002 7 c
57.472 6.773333 57.188667 6.596666 56.862003 6.469999 c
56.535339 6.343333 56.185337 6.28 55.812004 6.279999 c
53.572002 6.279999 l
53.572002 11.259999 l
55.812004 11.259999 l
56.185337 11.259999 56.535339 11.203333 56.862003 11.089999 c
57.188667 10.976666 57.472 10.813333 57.712002 10.599999 c
57.952003 10.386666 58.142002 10.13 58.282001 9.83 c
58.422001 9.53 58.492001 9.193334 58.492001 8.82 c
h
86.508003 15.8 m
86.508003 16.400001 86.378006 16.970001 86.118004 17.51 c
85.858002 18.049999 85.494675 18.526667 85.028008 18.940001 c
84.56134 19.353334 84.008011 19.683334 83.368004 19.93 c
82.727997 20.176666 82.021332 20.299999 81.248001 20.300001 c
80.554665 20.300001 79.931335 20.26 79.377998 20.18 c
78.824661 20.1 78.304665 19.973333 77.818001 19.800001 c
77.331337 19.626669 76.86467 19.403336 76.417999 19.130001 c
75.971329 18.856667 75.507996 18.526667 75.028 18.140001 c
77.227997 15.920001 l
77.867996 16.453335 78.494659 16.830002 79.107994 17.050001 c
79.721329 17.27 80.387993 17.380001 81.107994 17.380001 c
81.401329 17.380001 81.677994 17.336668 81.937996 17.250002 c
82.197998 17.163336 82.42466 17.046669 82.617996 16.900002 c
82.811333 16.753334 82.964661 16.58 83.077995 16.380001 c
83.19133 16.180002 83.247993 15.960002 83.247993 15.720001 c
83.247993 15.466668 83.201324 15.240001 83.107994 15.040001 c
83.014664 14.840001 82.847992 14.646668 82.607994 14.460001 c
82.367996 14.273335 82.03466 14.083335 81.607994 13.890001 c
81.181328 13.696668 80.634659 13.480001 79.967995 13.240002 c
79.381332 13.026669 78.817993 12.783336 78.277992 12.510002 c
77.737991 12.236669 77.264656 11.906669 76.857994 11.520002 c
76.451332 11.133336 76.124664 10.680002 75.877991 10.160003 c
75.631317 9.640003 75.50798 9.02667 75.507988 8.320003 c
75.507988 7.640003 75.644653 7.013336 75.917992 6.440002 c
76.19133 5.866669 76.564659 5.376669 77.037994 4.970002 c
77.51133 4.563335 78.064659 4.246669 78.697998 4.020002 c
79.331337 3.793336 80.014671 3.680003 80.748001 3.680003 c
81.974663 3.680003 83.007996 3.840002 83.848 4.160003 c
84.688004 4.480003 85.434669 4.94667 86.087997 5.560003 c
83.927994 7.740003 l
83.527992 7.353336 83.081329 7.056669 82.587997 6.850003 c
82.094666 6.643336 81.514664 6.540003 80.848 6.540003 c
80.541336 6.540003 80.258003 6.586669 79.998001 6.680003 c
79.737999 6.773336 79.514671 6.896669 79.328003 7.050003 c
79.141335 7.203336 78.991341 7.383336 78.878006 7.590003 c
78.764671 7.796669 78.708008 8.013336 78.708008 8.240003 c
78.708008 8.493336 78.761345 8.723336 78.868011 8.930002 c
78.974678 9.136668 79.154678 9.336669 79.408012 9.530003 c
79.661346 9.723336 79.998009 9.91667 80.418015 10.110003 c
80.83802 10.303335 81.361351 10.513335 81.988014 10.740003 c
82.78801 11.020002 83.474678 11.32667 84.048012 11.660003 c
84.621346 11.993336 85.088013 12.360003 85.448013 12.760003 c
85.808014 13.160004 86.074684 13.610004 86.248016 14.110004 c
86.421349 14.610004 86.508018 15.173337 86.508018 15.800003 c
86.508003 15.8 l
h
116.463997 12 m
116.463997 13.146667 116.240662 14.226667 115.793999 15.24 c
115.347336 16.253332 114.737335 17.133331 113.963997 17.879999 c
113.190659 18.626667 112.290665 19.216667 111.264 19.65 c
110.237335 20.083332 109.144005 20.299999 107.984001 20.299999 c
106.823997 20.299999 105.727333 20.083332 104.694 19.65 c
103.660667 19.216667 102.757339 18.626667 101.984001 17.879999 c
101.210663 17.133331 100.600662 16.256664 100.153999 15.249999 c
99.707336 14.243333 99.484001 13.16 99.484001 11.999999 c
99.484001 10.839998 99.707336 9.753332 100.153999 8.739999 c
100.600662 7.726666 101.210663 6.846666 101.984001 6.099999 c
102.757339 5.353331 103.660667 4.766665 104.694 4.339998 c
105.727333 3.913332 106.823997 3.699999 107.984001 3.699998 c
109.144005 3.699998 110.237335 3.913331 111.264 4.339998 c
112.290665 4.766666 113.190659 5.356666 113.963997 6.109998 c
114.737335 6.863331 115.347336 7.743331 115.793999 8.749998 c
116.240662 9.756665 116.463997 10.839998 116.463997 11.999998 c
116.463997 12 l
h
113.344002 12 m
113.344002 11.266666 113.204002 10.576667 112.924004 9.93 c
112.644005 9.283334 112.260674 8.716667 111.774002 8.23 c
111.287331 7.743333 110.717331 7.356667 110.064003 7.070001 c
109.410675 6.783334 108.717339 6.640001 107.984001 6.640001 c
107.237335 6.640001 106.537331 6.783334 105.884003 7.070001 c
105.230675 7.356667 104.660675 7.743334 104.174004 8.23 c
103.687332 8.716667 103.304001 9.283334 103.024002 9.93 c
102.744003 10.576667 102.604004 11.266666 102.604004 12 c
102.604004 12.72 102.744003 13.406667 103.024002 14.06 c
103.304001 14.713332 103.687332 15.283333 104.174004 15.77 c
104.660675 16.256666 105.230675 16.643333 105.884003 16.93 c
106.537331 17.216667 107.237335 17.360001 107.984001 17.360001 c
108.717331 17.360001 109.410667 17.216667 110.064003 16.93 c
110.717339 16.643333 111.287338 16.256666 111.774002 15.770001 c
112.260666 15.283334 112.643997 14.713334 112.924004 14.06 c
113.20401 13.406667 113.344009 12.72 113.344002 12 c
h
143.539993 20 m
140.5 20 l
133.279999 8.78 l
133.279999 20 l
130.240005 20 l
130.240005 4 l
133.720001 4 l
140.5 14.44 l
140.5 4 l
143.539993 4 l
143.539993 20 l
h
174.056 20 m
170.65601 20 l
169.17601 16.799999 l
161.416016 16.799999 l
159.916016 20 l
156.516022 20 l
164.076019 4 l
166.496017 4 l
174.056 20 l
h
167.95599 14.22 m
165.29599 8.46 l
162.595993 14.22 l
167.95599 14.22 l
h
197.85201 20 m
187.03201 20 l
187.03201 4.02 l
190.19202 4.02 l
190.19202 17 l
197.85202 17 l
197.85202 20 l
197.85201 20 l
h
231.804 20 m
228.70399 20 l
228.70399 4.02 l
231.804 4.02 l
231.804 20 l
h
259.48001 20 m
256.44 20 l
249.22 8.78 l
249.22 20 l
246.18001 20 l
246.18001 4 l
249.66 4 l
256.44 14.44 l
256.44 4 l
259.48001 4 l
259.48001 20 l
h
284.53601 15.8 m
284.53601 16.400001 284.40601 16.970001 284.146 17.51 c
283.88599 18.049999 283.52264 18.526667 283.056 18.940001 c
282.58936 19.353334 282.03601 19.683334 281.396 19.93 c
280.75598 20.176666 280.04932 20.299999 279.276 20.300001 c
278.58267 20.300001 277.95932 20.26 277.40601 20.18 c
276.85269 20.1 276.33267 19.973333 275.84601 19.800001 c
275.35934 19.626669 274.89267 19.403336 274.44601 19.130001 c
273.99936 18.856667 273.53601 18.526667 273.056 18.140001 c
275.25601 15.920001 l
275.896 16.453335 276.52267 16.830002 277.13602 17.050001 c
277.74936 17.27 278.41602 17.380001 279.13602 17.380001 c
279.42935 17.380001 279.70602 17.336668 279.966 17.250002 c
280.22598 17.163336 280.45267 17.046669 280.646 16.900002 c
280.83932 16.753334 280.99268 16.58 281.10599 16.380001 c
281.2193 16.180002 281.27597 15.960002 281.276 15.720001 c
281.276 15.466668 281.22934 15.240001 281.13599 15.040001 c
281.04263 14.840001 280.87598 14.646668 280.63599 14.460001 c
280.396 14.273335 280.06265 14.083335 279.63599 13.890001 c
279.20932 13.696668 278.66263 13.480001 277.99597 13.240002 c
277.4093 13.026669 276.84598 12.783336 276.30597 12.510002 c
275.76596 12.236669 275.29263 11.906669 274.88596 11.520002 c
274.47928 11.133336 274.15262 10.680002 273.90594 10.160003 c
273.65927 9.640003 273.53595 9.02667 273.53595 8.320003 c
273.53595 7.640003 273.67261 7.013336 273.94595 6.440002 c
274.2193 5.866669 274.59262 5.376669 275.06595 4.970002 c
275.53928 4.563335 276.09262 4.246669 276.72595 4.020002 c
277.35928 3.793336 278.04263 3.680003 278.77594 3.680003 c
280.00259 3.680003 281.03595 3.840002 281.87595 4.160003 c
282.71594 4.480003 283.46262 4.94667 284.11594 5.560003 c
281.95593 7.740003 l
281.55594 7.353336 281.10925 7.056669 280.61594 6.850003 c
280.12262 6.643336 279.5426 6.540003 278.87595 6.540003 c
278.56927 6.540003 278.28595 6.586669 278.02594 6.680003 c
277.76593 6.773336 277.5426 6.896669 277.35593 7.050003 c
277.16925 7.203336 277.01926 7.383336 276.90591 7.590003 c
276.79257 7.796669 276.7359 8.013336 276.7359 8.240003 c
276.7359 8.493336 276.78925 8.723336 276.8959 8.930002 c
277.00256 9.136668 277.18259 9.336669 277.43591 9.530003 c
277.68924 9.723336 278.02591 9.91667 278.44592 10.110003 c
278.86594 10.303335 279.38925 10.513335 280.01593 10.740003 c
280.81595 11.020002 281.50259 11.32667 282.07593 11.660003 c
282.64926 11.993336 283.11591 12.360003 283.47592 12.760003 c
283.83594 13.160004 284.1026 13.610004 284.27591 14.110004 c
284.44922 14.610004 284.53589 15.173337 284.53592 15.800003 c
284.53601 15.8 l
h
309.09201 6.78 m
304.672 6.78 l
304.672 20 l
301.53198 20 l
301.53198 6.78 l
297.11197 6.78 l
297.11197 4.02 l
309.09198 4.02 l
309.09198 6.78 l
309.09201 6.78 l
h
336.008 20 m
332.608 20 l
331.12799 16.799999 l
323.36798 16.799999 l
321.86798 20 l
318.46799 20 l
326.02798 4 l
328.448 4 l
336.008 20 l
h
329.90799 14.22 m
327.24799 8.46 l
324.54797 14.22 l
329.90796 14.22 l
329.90799 14.22 l
h
362.284 20 m
359.24399 20 l
352.02399 8.78 l
352.02399 20 l
348.98398 20 l
348.98398 4 l
352.46399 4 l
359.24399 14.44 l
359.24399 4 l
362.284 4 l
362.284 20 l
h
391.29999 17.120001 m
390.49997 18.093334 389.52997 18.866669 388.38998 19.440001 c
387.25 20.013332 385.99332 20.299999 384.62 20.300001 c
383.43332 20.300001 382.32001 20.083334 381.28 19.650002 c
380.23999 19.216669 379.33334 18.626669 378.56 17.880001 c
377.78665 17.133333 377.17667 16.256668 376.73001 15.250001 c
376.28336 14.243335 376.06003 13.160002 376.06 12.000001 c
376.05997 10.84 376.28333 9.756667 376.73001 8.750001 c
377.1767 7.743335 377.78671 6.863335 378.56 6.110001 c
379.33328 5.356667 380.23996 4.766666 381.28 4.340001 c
382.32004 3.913335 383.43338 3.700001 384.62 3.700001 c
385.99332 3.700001 387.25 3.986667 388.38998 4.56 c
389.52997 5.133334 390.47998 5.88 391.23999 6.8 c
389.09998 9 l
388.60666 8.293333 387.96997 7.723333 387.18997 7.29 c
386.40997 6.856667 385.55328 6.64 384.61996 6.64 c
383.87329 6.64 383.16998 6.783333 382.50998 7.07 c
381.84998 7.356666 381.27332 7.743333 380.77997 8.23 c
380.28662 8.716666 379.89661 9.283333 379.60995 9.929999 c
379.3233 10.576666 379.17996 11.266666 379.17996 11.999999 c
379.17996 12.719999 379.3233 13.403333 379.60995 14.049999 c
379.89661 14.696666 380.28662 15.263332 380.77997 15.749999 c
381.27332 16.236666 381.84998 16.623333 382.50998 16.91 c
383.16998 17.196667 383.87329 17.34 384.61996 17.34 c
385.60663 17.34 386.47998 17.116667 387.23996 16.67 c
387.99994 16.223333 388.63327 15.633333 389.13995 14.9 c
391.29999 17.120001 l
h
414.836 20 m
404.276 20 l
404.276 4.02 l
414.836 4.02 l
414.836 6.58 l
407.31601 6.58 l
407.31601 10.400001 l
414.73602 10.400001 l
414.73602 12.900001 l
407.31601 12.900001 l
407.31601 17.300001 l
414.836 17.300001 l
414.836 20.000002 l
414.836 20 l
h
439.29199 15.8 m
439.29199 16.400001 439.16199 16.970001 438.90198 17.51 c
438.64197 18.049999 438.27863 18.526667 437.81198 18.940001 c
437.34534 19.353334 436.79199 19.683334 436.15198 19.93 c
435.51196 20.176666 434.8053 20.299999 434.03198 20.300001 c
433.33865 20.300001 432.7153 20.26 432.16199 20.18 c
431.60867 20.1 431.08865 19.973333 430.60199 19.800001 c
430.11533 19.626669 429.64865 19.403336 429.202 19.130001 c
428.75534 18.856667 428.29199 18.526667 427.81198 18.140001 c
430.01199 15.920001 l
430.65198 16.453335 431.27866 16.830002 431.892 17.050001 c
432.50534 17.27 433.172 17.380001 433.892 17.380001 c
434.18533 17.380001 434.46201 17.336668 434.72198 17.250002 c
434.98196 17.163336 435.20865 17.046669 435.40198 16.900002 c
435.59531 16.753334 435.74866 16.58 435.86197 16.380001 c
435.97528 16.180002 436.03195 15.960002 436.03198 15.720001 c
436.03198 15.466668 435.98532 15.240001 435.89197 15.040001 c
435.79861 14.840001 435.63196 14.646668 435.39197 14.460001 c
435.15198 14.273335 434.81863 14.083335 434.39197 13.890001 c
433.9653 13.696668 433.41861 13.480001 432.75195 13.240002 c
432.16528 13.026669 431.60196 12.783336 431.06195 12.510002 c
430.52194 12.236669 430.04861 11.906669 429.64194 11.520002 c
429.23526 11.133336 428.9086 10.680002 428.66193 10.160003 c
428.41525 9.640003 428.29193 9.02667 428.29193 8.320003 c
428.29193 7.640003 428.42859 7.013336 428.70193 6.440002 c
428.97528 5.866669 429.3486 5.376669 429.82193 4.970002 c
430.29526 4.563335 430.8486 4.246669 431.48193 4.020002 c
432.11526 3.793336 432.79861 3.680003 433.53192 3.680003 c
434.75858 3.680003 435.79193 3.840002 436.63193 4.160003 c
437.47192 4.480003 438.2186 4.94667 438.87192 5.560003 c
436.71191 7.740003 l
436.31192 7.353336 435.86523 7.056669 435.37192 6.850003 c
434.8786 6.643336 434.29858 6.540003 433.63193 6.540003 c
433.32526 6.540003 433.04193 6.586669 432.78192 6.680003 c
432.52191 6.773336 432.29858 6.896669 432.11191 7.050003 c
431.92523 7.203336 431.77524 7.383336 431.6619 7.590003 c
431.54855 7.796669 431.49188 8.013336 431.49188 8.240003 c
431.49188 8.493336 431.54523 8.723336 431.65189 8.930002 c
431.75854 9.136668 431.93857 9.336669 432.19189 9.530003 c
432.44522 9.723336 432.78189 9.91667 433.2019 10.110003 c
433.62192 10.303335 434.14523 10.513335 434.77191 10.740003 c
435.57193 11.020002 436.25858 11.32667 436.83191 11.660003 c
437.40524 11.993336 437.87189 12.360003 438.2319 12.760003 c
438.59192 13.160004 438.85858 13.610004 439.03189 14.110004 c
439.2052 14.610004 439.29187 15.173337 439.2919 15.800003 c
439.29199 15.8 l
h
455.448 20 m
455.448 20.32 455.40134 20.623333 455.30798 20.91 c
455.21463 21.196667 455.07797 21.450001 454.89798 21.67 c
454.71799 21.889999 454.49133 22.063334 454.21799 22.190001 c
453.94464 22.316668 453.62799 22.380001 453.26797 22.380001 c
453.13464 22.380001 453.00464 22.366667 452.87796 22.34 c
452.75128 22.313334 452.63461 22.286667 452.52795 22.26 c
452.52795 22.040001 l
452.91461 21.973333 453.22794 21.793333 453.46796 21.5 c
453.70798 21.206667 453.82797 20.866667 453.82794 20.48 c
453.82794 20.413332 453.82129 20.333332 453.80795 20.24 c
453.79462 20.146667 453.77463 20.066668 453.74796 20 c
452.46796 20 l
452.46796 17.02 l
455.44797 17.02 l
455.44797 20 l
455.448 20 l
h
497.57999 15.8 m
497.57999 16.400001 497.44998 16.970001 497.18997 17.51 c
496.92996 18.049999 496.56662 18.526667 496.09998 18.940001 c
495.63333 19.353334 495.07999 19.683334 494.43997 19.93 c
493.79996 20.176666 493.09329 20.299999 492.31998 20.300001 c
491.62665 20.300001 491.0033 20.26 490.44998 20.18 c
489.89667 20.1 489.37665 19.973333 488.88998 19.800001 c
488.40332 19.626669 487.93665 19.403336 487.48999 19.130001 c
487.04333 18.856667 486.57999 18.526667 486.09998 18.140001 c
488.29999 15.920001 l
488.93997 16.453335 489.56665 16.830002 490.17999 17.050001 c
490.79333 17.27 491.45999 17.380001 492.17999 17.380001 c
492.47333 17.380001 492.75 17.336668 493.00998 17.250002 c
493.26996 17.163336 493.49664 17.046669 493.68997 16.900002 c
493.8833 16.753334 494.03665 16.58 494.14996 16.380001 c
494.26328 16.180002 494.31995 15.960002 494.31998 15.720001 c
494.31998 15.466668 494.27332 15.240001 494.17996 15.040001 c
494.08661 14.840001 493.91995 14.646668 493.67996 14.460001 c
493.43997 14.273335 493.10663 14.083335 492.67996 13.890001 c
492.2533 13.696668 491.7066 13.480001 491.03995 13.240002 c
490.45328 13.026669 489.88995 12.783336 489.34995 12.510002 c
488.80994 12.236669 488.33661 11.906669 487.92993 11.520002 c
487.52325 11.133336 487.19659 10.680002 486.94992 10.160003 c
486.70325 9.640003 486.57993 9.02667 486.57993 8.320003 c
486.57993 7.640003 486.71658 7.013336 486.98993 6.440002 c
487.26328 5.866669 487.6366 5.376669 488.10992 4.970002 c
488.58325 4.563335 489.1366 4.246669 489.76993 4.020002 c
490.40326 3.793336 491.08661 3.680003 491.81992 3.680003 c
493.04657 3.680003 494.07993 3.840002 494.91992 4.160003 c
495.75992 4.480003 496.50659 4.94667 497.15991 5.560003 c
494.99991 7.740003 l
494.59991 7.353336 494.15323 7.056669 493.65991 6.850003 c
493.1666 6.643336 492.58658 6.540003 491.91992 6.540003 c
491.61325 6.540003 491.32993 6.586669 491.06992 6.680003 c
490.80991 6.773336 490.58658 6.896669 490.3999 7.050003 c
490.21323 7.203336 490.06323 7.383336 489.94989 7.590003 c
489.83655 7.796669 489.77988 8.013336 489.77988 8.240003 c
489.77988 8.493336 489.83322 8.723336 489.93988 8.930002 c
490.04654 9.136668 490.22656 9.336669 490.47989 9.530003 c
490.73322 9.723336 491.06989 9.91667 491.4899 10.110003 c
491.90991 10.303335 492.43323 10.513335 493.05991 10.740003 c
493.85992 11.020002 494.54657 11.32667 495.1199 11.660003 c
495.69324 11.993336 496.15988 12.360003 496.5199 12.760003 c
496.87991 13.160004 497.14658 13.610004 497.31989 14.110004 c
497.49319 14.610004 497.57986 15.173337 497.5799 15.800003 c
497.57999 15.8 l
h
514.25598 20 m
511.15598 20 l
511.15598 4.02 l
514.25598 4.02 l
514.25598 20 l
h
544.59198 20 m
541.552 20 l
541.552 9.32 l
536.51202 17.82 l
531.672 9.24 l
531.672 20 l
528.63202 20 l
528.63202 4 l
532.13202 4 l
536.57202 11.940001 l
541.21204 4 l
544.59204 4 l
544.59204 20 l
544.59198 20 l
h
570.16803 9.38 m
570.16803 10.14 570.02472 10.85 569.73804 11.51 c
569.45135 12.17 569.0614 12.743334 568.56805 13.230001 c
568.07471 13.716667 567.49475 14.096667 566.82806 14.370001 c
566.16138 14.643334 565.45471 14.780001 564.70807 14.780001 c
562.06805 14.780001 l
562.06805 20 l
558.96808 20 l
558.96808 4.02 l
564.70807 4.02 l
565.45471 4.02 566.16138 4.156667 566.82806 4.43 c
567.49475 4.703333 568.07471 5.08 568.56805 5.56 c
569.0614 6.04 569.45135 6.606667 569.73804 7.26 c
570.02472 7.913333 570.16803 8.62 570.16803 9.38 c
h
567.08801 9.34 m
567.08801 8.926667 567.01135 8.54 566.85803 8.18 c
566.70471 7.82 566.49469 7.506667 566.22803 7.24 c
565.96136 6.973333 565.64801 6.76 565.28802 6.6 c
564.92804 6.440001 564.54138 6.360001 564.12805 6.360001 c
562.06805 6.360001 l
562.06805 12.400001 l
564.12805 12.400001 l
564.54138 12.400001 564.92804 12.316668 565.28802 12.150001 c
565.64801 11.983334 565.96136 11.76 566.22803 11.480001 c
566.49469 11.200001 566.70471 10.876667 566.85803 10.51 c
567.01135 10.143333 567.08801 9.753333 567.08801 9.34 c
h
594.36401 20 m
583.54401 20 l
583.54401 4.02 l
586.70398 4.02 l
586.70398 17 l
594.36395 17 l
594.36395 20 l
594.36401 20 l
h
610.64001 20 m
607.54004 20 l
607.54004 4.02 l
610.64001 4.02 l
610.64001 20 l
h
635.57599 6.68 m
628.05597 6.68 l
628.05597 10.4 l
635.47595 10.4 l
635.47595 12.92 l
628.05597 12.92 l
628.05597 20 l
625.01599 20 l
625.01599 4.02 l
635.57599 4.02 l
635.57599 6.68 l
635.57599 6.68 l
h
652.052 20 m
648.95203 20 l
648.95203 4.02 l
652.052 4.02 l
652.052 20 l
h
676.98798 20 m
666.42798 20 l
666.42798 4.02 l
676.98798 4.02 l
676.98798 6.58 l
669.46796 6.58 l
669.46796 10.400001 l
676.88794 10.400001 l
676.88794 12.900001 l
669.46796 12.900001 l
669.46796 17.300001 l
676.98798 17.300001 l
676.98798 20.000002 l
676.98798 20 l
h
704.98401 12 m
704.98401 13.106667 704.79736 14.143333 704.42401 15.11 c
704.05066 16.076666 703.5307 16.923332 702.86401 17.65 c
702.19733 18.376667 701.4007 18.949999 700.474 19.369999 c
699.5473 19.789999 698.53729 19.999998 697.44397 19.999998 c
690.76398 19.999998 l
690.76398 3.999998 l
697.44397 3.999998 l
698.53729 3.999998 699.5473 4.213331 700.474 4.639998 c
701.4007 5.066665 702.19733 5.639998 702.86401 6.359998 c
703.5307 7.079998 704.05066 7.926664 704.42401 8.899998 c
704.79736 9.873331 704.98401 10.906665 704.98401 11.999998 c
704.98401 12 l
h
701.84399 11.92 m
701.85736 11.173333 701.74402 10.466667 701.50397 9.8 c
701.26392 9.133333 700.9173 8.55 700.46399 8.05 c
700.01068 7.55 699.45404 7.156667 698.79401 6.87 c
698.13397 6.583333 697.39063 6.44 696.56403 6.44 c
693.86401 6.44 l
693.86401 17.360001 l
696.56403 17.360001 l
697.37732 17.360001 698.10736 17.223333 698.75403 16.950001 c
699.4007 16.676668 699.95074 16.296667 700.40405 15.81 c
700.85736 15.323334 701.2074 14.75 701.45404 14.09 c
701.70068 13.43 701.83069 12.706667 701.84406 11.92 c
701.84399 11.92 l
h
f
Q
q
[32.837711 0 0 32.837711 1555.39697 1751.0275] cm
/DeviceRGB {} CS
[0.0039 0.4118 0.4314] SC
/DeviceRGB {} cs
[0.0039 0.4118 0.4314] sc
4.74 19.26 m
3.54 18.58 2.586667 17.656666 1.88 16.49 c
1.173333 15.323333 0.82 14.053333 0.82 12.68 c
0.82 11.320001 1.173333 10.056667 1.88 8.89 c
2.586666 7.723333 3.54 6.8 4.74 6.12 c
5.94 5.440001 7.253333 5.1 8.68 5.1 c
10.106668 5.1 11.426667 5.440001 12.64 6.12 c
13.853334 6.8 14.813334 7.723333 15.520001 8.89 c
16.226667 10.056667 16.580002 11.320001 16.58 12.68 c
16.58 14.053333 16.226667 15.323333 15.520001 16.49 c
14.813335 17.656666 13.853334 18.58 12.64 19.26 c
11.426666 19.940001 10.106667 20.280001 8.68 20.280001 c
7.253334 20.280001 5.940001 19.940001 4.74 19.26 c
4.74 19.26 l
h
6.32 8.63 m
5.6 9.063334 5.026667 9.64 4.6 10.360001 c
4.173334 11.080001 3.960001 11.853334 3.96 12.68 c
3.96 13.506666 4.173334 14.283333 4.6 15.01 c
5.026667 15.736669 5.600001 16.320002 6.320001 16.76 c
7.04 17.199999 7.826667 17.419998 8.68 17.42 c
9.533334 17.420002 10.323334 17.200001 11.05 16.76 c
11.776667 16.32 12.35 15.736666 12.770001 15.01 c
13.190001 14.283335 13.400001 13.506668 13.400001 12.68 c
13.400001 11.853333 13.190001 11.079999 12.770001 10.360001 c
12.35 9.640002 11.776667 9.063335 11.05 8.630001 c
10.323334 8.196667 9.533334 7.98 8.68 7.980001 c
7.826667 7.980002 7.04 8.196669 6.32 8.630001 c
6.32 8.63 l
h
22.459999 16.870001 m
23.406666 17.25 24.273333 17.440001 25.059999 17.440001 c
25.886665 17.440001 26.543333 17.280001 27.029999 16.960001 c
27.516665 16.640001 27.759998 16.260002 27.759998 15.820001 c
27.759998 15.460001 27.616665 15.166667 27.329998 14.940001 c
27.043331 14.713334 26.679998 14.543334 26.239998 14.43 c
25.799997 14.316667 25.219997 14.193334 24.499998 14.06 c
23.539997 13.900001 22.659998 13.693334 21.859999 13.440001 c
21.059999 13.186667 20.333332 12.746667 19.679998 12.120001 c
19.026665 11.493335 18.699997 10.646668 18.699999 9.580001 c
18.699999 8.006667 19.276665 6.876668 20.429998 6.19 c
21.583332 5.503334 22.939999 5.16 24.499998 5.160001 c
25.699997 5.160001 26.74333 5.323334 27.629997 5.650001 c
28.516665 5.976667 29.399998 6.466667 30.279997 7.120001 c
28.519997 9.520001 l
27.866663 9.053334 27.186663 8.686667 26.479996 8.42 c
25.773329 8.153333 25.073328 8.02 24.379995 8.020001 c
23.766663 8.020001 23.193329 8.13 22.659996 8.35 c
22.126663 8.570001 21.859997 8.940001 21.859997 9.46 c
21.859997 9.780001 21.996664 10.036667 22.269997 10.23 c
22.543329 10.423332 22.84333 10.563333 23.169996 10.65 c
23.496662 10.736667 24.026663 10.860001 24.759996 11.02 c
25.479996 11.16 l
26.586662 11.373333 27.503328 11.61 28.229996 11.87 c
28.956663 12.13 29.586662 12.566667 30.119995 13.18 c
30.653328 13.793334 30.919994 14.646667 30.919994 15.74 c
30.919994 17.219999 30.396662 18.346666 29.349995 19.119999 c
28.303328 19.893332 26.886662 20.279999 25.099995 20.279999 c
22.486662 20.279999 20.286661 19.519999 18.499994 17.999998 c
20.179995 15.579998 l
20.753328 16.059998 21.513329 16.489998 22.459995 16.869999 c
22.459999 16.870001 l
h
33.299999 5.38 m
39.34 5.38 l
41.513332 5.38 43.293331 5.993333 44.68 7.22 c
45.426666 7.873334 45.993332 8.663334 46.380001 9.59 c
46.76667 10.516666 46.960003 11.546666 46.960003 12.68 c
46.960003 13.786667 46.760002 14.816667 46.360004 15.770001 c
45.960007 16.723333 45.400005 17.526667 44.680004 18.18 c
44.013336 18.766666 43.223339 19.216667 42.310005 19.530001 c
41.396671 19.843334 40.406673 20.000002 39.340004 20 c
33.300003 20 l
33.300003 5.38 l
33.299999 5.38 l
h
39.34 17.26 m
40.593334 17.26 41.643333 16.933334 42.490002 16.280001 c
43.33667 15.626668 43.760002 14.433334 43.760002 12.700001 c
43.760002 10.966667 43.333336 9.773334 42.480003 9.120001 c
41.626671 8.466668 40.580006 8.140001 39.340004 8.140001 c
36.460003 8.140001 l
36.460003 17.260002 l
39.340004 17.260002 l
39.34 17.26 l
h
52.740002 19.5 m
51.753334 18.993334 50.990002 18.273333 50.450001 17.34 c
49.91 16.406668 49.639999 15.320001 49.639999 14.08 c
49.639999 5.4 l
52.799999 5.4 l
52.799999 14.08 l
52.799999 14.933333 52.983334 15.616666 53.349998 16.129999 c
53.716663 16.643331 54.156666 17.006664 54.669998 17.219999 c
55.183331 17.433334 55.693333 17.540001 56.199997 17.539999 c
56.693333 17.539999 57.196663 17.433332 57.709995 17.219999 c
58.223328 17.006666 58.659992 16.643333 59.019997 16.129999 c
59.380001 15.616666 59.560001 14.933332 59.559998 14.079999 c
59.559998 5.399999 l
62.719997 5.399999 l
62.719997 14.079999 l
62.719997 15.319999 62.453331 16.406666 61.919998 17.339998 c
61.386665 18.273331 60.626667 18.993332 59.639999 19.499998 c
58.653332 20.006664 57.506668 20.259998 56.200001 20.259998 c
54.880001 20.259998 53.726669 20.006664 52.740002 19.499998 c
52.740002 19.5 l
h
f
Q
q
[32.665565 0 0 32.665565 3768.1091 1751.9054] cm
/DeviceRGB {} CS
[0.0039 0.4118 0.4314] SC
/DeviceRGB {} cs
[0.0039 0.4118 0.4314] sc
7.56 5.38 m
13.6 5.38 l
15.773335 5.38 17.553333 5.993333 18.940001 7.22 c
19.686668 7.873334 20.253334 8.663334 20.640001 9.59 c
21.026669 10.516666 21.220001 11.546666 21.220001 12.68 c
21.220001 13.786667 21.02 14.816667 20.620001 15.770001 c
20.220001 16.723333 19.66 17.526667 18.940001 18.18 c
18.273335 18.766666 17.483334 19.216667 16.57 19.530001 c
15.656666 19.843334 14.666666 20.000002 13.599999 20 c
7.56 20 l
7.56 5.38 l
7.56 5.38 l
h
13.6 17.26 m
14.853334 17.26 15.903334 16.933334 16.75 16.280001 c
17.596666 15.626668 18.02 14.433334 18.02 12.700001 c
18.02 10.966667 17.593334 9.773334 16.74 9.120001 c
15.886666 8.466668 14.839999 8.140001 13.599999 8.140001 c
10.719999 8.140001 l
10.719999 17.260002 l
13.599999 17.260002 l
13.6 17.26 l
h
26.4 11.38 m
33.400002 11.38 l
33.400002 14.14 l
26.400002 14.14 l
26.400002 17.26 l
34.32 17.26 l
34.32 20 l
23.24 20 l
23.24 5.38 l
34.32 5.38 l
34.32 8.12 l
26.4 8.12 l
26.4 11.38 l
h
43.18 20.360001 m
35.799999 5.400001 l
39.279999 5.400001 l
43.18 13.480001 l
47.099998 5.400001 l
50.599998 5.400001 l
43.18 20.360001 l
h
55.400002 11.38 m
62.400002 11.38 l
62.400002 14.14 l
55.400002 14.14 l
55.400002 17.26 l
63.32 17.26 l
63.32 20 l
52.239998 20 l
52.239998 5.38 l
63.32 5.38 l
63.32 8.12 l
55.400002 8.12 l
55.400002 11.38 l
h
77.080002 20 m
66.240005 20 l
66.240005 5.38 l
69.420006 5.38 l
69.420006 17.26 l
77.080002 17.26 l
77.080002 20 l
h
81.339996 19.26 m
80.139992 18.58 79.186661 17.656666 78.479996 16.49 c
77.773331 15.323333 77.419998 14.053333 77.419998 12.68 c
77.419998 11.320001 77.773331 10.056667 78.479996 8.89 c
79.186661 7.723333 80.139992 6.8 81.339996 6.12 c
82.540001 5.440001 83.853333 5.1 85.279999 5.1 c
86.706665 5.1 88.026665 5.440001 89.239998 6.12 c
90.453331 6.8 91.41333 7.723333 92.119995 8.89 c
92.82666 10.056667 93.179993 11.320001 93.179993 12.68 c
93.179993 14.053333 92.82666 15.323333 92.119995 16.49 c
91.41333 17.656666 90.453331 18.58 89.239998 19.26 c
88.026665 19.940001 86.706665 20.280001 85.279999 20.280001 c
83.853333 20.280001 82.540001 19.940001 81.339996 19.26 c
h
82.919998 8.63 m
82.199997 9.063334 81.626663 9.64 81.199997 10.360001 c
80.773331 11.080001 80.559998 11.853334 80.559998 12.68 c
80.559998 13.506666 80.773331 14.283333 81.199997 15.01 c
81.626663 15.736669 82.199997 16.320002 82.919998 16.76 c
83.639999 17.199999 84.426666 17.419998 85.279999 17.42 c
86.133331 17.420002 86.923332 17.200001 87.650002 16.76 c
88.376671 16.32 88.950005 15.736666 89.370003 15.01 c
89.790001 14.283335 90 13.506668 90 12.68 c
90 11.853333 89.790001 11.079999 89.370003 10.360001 c
88.950005 9.640002 88.376671 9.063335 87.650002 8.630001 c
86.923332 8.196667 86.133331 7.98 85.279999 7.980001 c
84.426666 7.980002 83.639999 8.196669 82.919998 8.630001 c
82.919998 8.63 l
h
104.830002 6.08 m
105.716667 6.546667 106.400002 7.176666 106.880005 7.97 c
107.360008 8.763333 107.600006 9.646667 107.600006 10.62 c
107.600006 11.593333 107.376671 12.466666 106.930008 13.24 c
106.483345 14.013333 105.813339 14.623333 104.920006 15.07 c
104.026672 15.516666 102.946671 15.74 101.680008 15.74 c
98.920006 15.74 l
98.920006 20 l
95.760002 20 l
95.760002 5.38 l
101.700005 5.38 l
102.900009 5.38 103.943336 5.613333 104.830002 6.08 c
h
103.839996 12.3 m
104.226662 11.833334 104.419998 11.273334 104.419998 10.62 c
104.419998 10.193333 104.32 9.79 104.119995 9.41 c
103.919991 9.03 103.623329 8.72 103.229996 8.48 c
102.836662 8.239999 102.366661 8.119999 101.819992 8.12 c
98.919991 8.12 l
98.919991 13 l
102.139992 13 l
102.886658 13 103.453323 12.766666 103.839989 12.3 c
103.839996 12.3 l
h
112.620003 11.38 m
119.620003 11.38 l
119.620003 14.14 l
112.620003 14.14 l
112.620003 17.26 l
120.540001 17.26 l
120.540001 20 l
109.459999 20 l
109.459999 5.38 l
120.540001 5.38 l
120.540001 8.12 l
112.620003 8.12 l
112.620003 11.38 l
h
123.480003 20 m
123.480003 5.38 l
129.980011 5.38 l
131.020004 5.38 131.940002 5.593333 132.740005 6.02 c
133.540009 6.446667 134.160004 7.046667 134.600006 7.82 c
135.040009 8.593333 135.26001 9.473333 135.26001 10.46 c
135.26001 11.513333 134.993347 12.453333 134.460007 13.28 c
133.926666 14.106667 133.200012 14.713333 132.280014 15.099999 c
133.226685 16.299999 134.486679 17.933332 136.060013 20 c
132.280014 20 l
131.426682 18.933332 130.26001 17.413334 128.780014 15.440001 c
126.62001 15.440001 l
126.62001 20 l
123.480011 20 l
123.480003 20 l
h
129.979996 12.7 m
130.526672 12.7 131.020004 12.503333 131.459991 12.11 c
131.899979 11.716666 132.11998 11.166666 132.119995 10.459999 c
132.119995 9.886666 131.96666 9.353333 131.659988 8.859999 c
131.353317 8.366665 130.79332 8.119998 129.979996 8.119999 c
126.619995 8.119999 l
126.619995 12.699999 l
129.979996 12.699999 l
129.979996 12.7 l
h
f
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%EOF
</file>

<file path="src/images/branding/Logo Files/For Print/eps/Color logo with background.eps">
%!PS-Adobe-3.0 EPSF-3.0
%Produced by poppler pdftops version: 22.05.0 (http://poppler.freedesktop.org)
%%Creator: Chromium
%%LanguageLevel: 3
%%DocumentSuppliedResources: (atend)
%%BoundingBox: 0 0 2346 736
%%HiResBoundingBox: 0 0 2346 735.12
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.00 0
%%Copyright: Copyright 1996-2011, 2022 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  /setpagedevice where {
    pop 2 dict begin
      /Policies 1 dict dup begin /PageSize 6 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop
  } ifelse
} def
/pdfSetupPaper {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfOPM false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfPatternCS false def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/opm { dup /pdfOPM exch def
      /setoverprintmode where{pop setoverprintmode}{pop}ifelse  } def
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16L3 {
  1 index /CIDFont resourcestatus {
    pop pop 1 index /CIDFont findresource /CIDFontType known
  } {
    false
  } ifelse
  {
    0 eq { /Identity-H } { /Identity-V } ifelse
    exch 1 array astore composefont pop
  } {
    pdfMakeFont16
  } ifelse
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
  /pdfOPM where {
    pop
    pdfOPM /setoverprintmode where{pop setoverprintmode}{pop}ifelse 
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Tp { /pdfPatternCS exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/xyshow where {
  pop
  /xyshow2 {
    dup length array
    0 2 2 index length 1 sub {
      2 index 1 index 2 copy get 3 1 roll 1 add get
      pdfTextMat dtransform
      4 2 roll 2 copy 6 5 roll put 1 add 3 1 roll dup 4 2 roll put
    } for
    exch pop
    xyshow
  } def
}{
  /xyshow2 {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval show moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval show moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/cshow where {
  pop
  /xycp {
    0 3 2 roll
    {
      pop pop currentpoint 3 2 roll
      1 string dup 0 4 3 roll put false charpath moveto
      2 copy get 2 index 2 index 1 add get
      pdfTextMat dtransform rmoveto
      2 add
    } exch cshow
    pop pop
  } def
}{
  /xycp {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval false charpath moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval false charpath moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/Tj {
  fCol
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 4 2 roll
  pdfTextRender 1 and 0 eq {
    2 copy xyshow2
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    3 index 3 index moveto
    2 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    xycp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    4 2 roll moveto xycp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    pop pop pop pop
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { 0.001 mul pdfFontSize mul pdfHorizScaling mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { 0.001 mul pdfFontSize mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
/Tclip* { pdfTextClipPath cvx exec eoclip newpath
         /pdfTextClipPath [] def } def
% Level 2/3 image operators
/pdfImBuf 100 string def
/pdfImStr {
  2 copy exch length lt {
    2 copy get exch 1 add exch
  } {
    ()
  } ifelse
} def
/skipEOD {
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfIm { image skipEOD } def
/pdfMask {
  /ReusableStreamDecode filter
  skipEOD
  /maskStream exch def
} def
/pdfMaskEnd { maskStream closefile } def
/pdfMaskInit {
  /maskArray exch def
  /maskIdx 0 def
} def
/pdfMaskSrc {
  maskIdx maskArray length lt {
    maskArray maskIdx get
    /maskIdx maskIdx 1 add def
  } {
    ()
  } ifelse
} def
/pdfImM { fCol imagemask skipEOD } def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
/CIDInit /ProcSet findresource begin
10 dict begin
  begincmap
  /CMapType 1 def
  /CMapName /Identity-H def
  /CIDSystemInfo 3 dict dup begin
    /Registry (Adobe) def
    /Ordering (Identity) def
    /Supplement 0 def
  end def
  1 begincodespacerange
    <0000> <ffff>
  endcodespacerange
  0 usefont
  1 begincidrange
    <0000> <ffff> 0
  endcidrange
  endcmap
  currentdict CMapName exch /CMap defineresource pop
end
10 dict begin
  begincmap
  /CMapType 1 def
  /CMapName /Identity-V def
  /CIDSystemInfo 3 dict dup begin
    /Registry (Adobe) def
    /Ordering (Identity) def
    /Supplement 0 def
  end def
  /WMode 1 def
  1 begincodespacerange
    <0000> <ffff>
  endcodespacerange
  0 usefont
  1 begincidrange
    <0000> <ffff> 0
  endcidrange
  endcmap
  currentdict CMapName exch /CMap defineresource pop
end
end
%%EndProlog
%%BeginSetup
xpdf begin
%%EndSetup
pdfStartPage
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
0 0 2346 735.12 re
W
q
[0.24 0 0 -0.24 0 735.12] cm
q
0 0 9771.875 3056.25 re
W*
q
[3.124959 0 0 3.124959 0.0560585 0] cm
/DeviceRGB {} CS
[1 1 1] SC
/DeviceRGB {} cs
[1 1 1] sc
0 0 3126.583 978.49713 re
f
Q
q
[14.689504 0 0 14.689504 4160.7959 128.73938] cm
/DeviceRGB {} CS
[0.0039 0.4118 0.4314] SC
/DeviceRGB {} cs
[0.0039 0.4118 0.4314] sc
44.723 5.1992 m
40.3675 6.3359 36.7542 9.3242 34.765999 13.2656 c
41.832397 13.2656 l
42.324589 10.4453 43.211296 7.375 44.722996 5.199201 c
44.723 5.1992 l
h
27.140999 87.1642 m
26.668339 86.871231 26.047199 87.015762 25.754299 87.484512 c
25.461329 87.957169 25.60586 88.578316 26.07852 88.871216 c
40.160519 97.65242 58.078522 97.418114 71.949516 88.277466 c
72.41436 87.972778 72.543266 87.347778 72.238579 86.882965 c
71.933891 86.418121 71.308891 86.289215 70.844078 86.597809 c
57.606079 95.308708 40.578079 95.527512 27.141079 87.164215 c
27.140999 87.1642 l
h
23.777699 20.746201 m
24.215199 20.406361 24.297228 19.77354 23.957388 19.336 c
23.617548 18.89459 22.984728 18.816471 22.543287 19.156311 c
15.371388 24.703211 10.070288 32.562309 7.621287 41.28931 c
7.437697 41.937752 7.929877 42.570511 8.593947 42.570511 c
9.031447 42.570511 9.437697 42.277542 9.562697 41.83614 c
11.898598 33.519741 16.945498 26.031139 23.777699 20.74614 c
23.777699 20.746201 l
h
89.675705 42.0042 m
87.238205 32.711201 81.656204 24.4342 73.952705 18.6952 c
73.507393 18.367081 72.878502 18.456921 72.546509 18.902229 c
72.214478 19.34754 72.304321 19.976429 72.75354 20.30843 c
80.085541 25.777229 85.40554 33.663429 87.72654 42.51543 c
87.867172 43.058399 88.429672 43.374809 88.95314 43.23027 c
89.492203 43.093552 89.812523 42.54277 89.675797 42.00367 c
89.675705 42.0042 l
h
92.414001 79.375198 m
62.656002 79.375198 l
62.656002 82.0354 l
92.417999 82.0354 l
92.414001 79.375198 l
h
90.539001 64.086197 m
64.531006 64.086197 l
64.531006 77.363197 l
90.539001 77.363197 l
90.539001 64.086197 l
h
77.530998 58.648697 m
74.390396 58.648697 71.394295 59.902596 69.187195 62.074497 c
85.882195 62.074497 l
83.671295 59.898697 80.679092 58.648697 77.530594 58.648697 c
77.530998 58.648697 l
h
72.241898 51.340096 m
72.241898 54.261997 74.620796 56.636993 77.542694 56.636993 c
80.456795 56.633087 82.831795 54.258095 82.831795 51.340096 c
82.831795 48.422096 80.456795 46.047096 77.538795 46.047096 c
74.616898 46.047096 72.241898 48.422096 72.241898 51.340096 c
h
36.729897 51.054935 m
32.577599 64.226936 l
43.5896 64.226936 l
43.886478 64.226936 44.175541 64.258186 44.456791 64.31678 c
48.640392 51.054779 l
36.729897 51.054935 l
h
21.819897 61.245934 m
30.237896 66.105331 l
30.390236 66.195175 30.562117 66.238144 30.741806 66.238144 c
43.585808 66.238144 l
44.839706 66.238144 45.859207 67.257645 45.859207 68.511543 c
45.859207 69.765442 44.839706 70.784943 43.585808 70.784943 c
30.511806 70.788849 l
29.589926 70.788849 28.941507 70.585732 28.797007 70.519318 c
22.683706 66.99202 l
22.015736 66.609207 21.172007 67.08577 21.172007 67.863113 c
21.172007 82.03511 l
9.152006 82.03511 l
9.152006 63.812111 l
9.152006 62.39801 10.304306 61.245712 11.722306 61.245712 c
21.819897 61.245934 l
h
21.819897 53.406136 m
21.819897 50.195236 19.206596 47.585835 15.995697 47.585835 c
12.784797 47.585835 10.175397 50.195236 10.175397 53.406136 c
10.175397 56.617035 12.784797 59.230335 15.995697 59.230335 c
19.206596 59.230335 21.819897 56.620934 21.819897 53.406136 c
h
55.460896 27.215136 m
54.972614 30.019836 54.074196 33.121334 52.566395 35.281536 c
56.921894 34.144836 60.535194 31.156536 62.527294 27.215137 c
55.460896 27.215136 l
h
43.866898 27.215136 m
53.425499 27.215136 l
52.460659 32.480736 50.476299 35.781536 48.648201 35.781536 c
46.8162 35.781536 44.835701 32.480736 43.867001 27.215137 c
43.866898 27.215136 l
h
43.191116 32.304935 m
42.612995 30.804935 42.159916 29.082235 41.831715 27.215136 c
34.765316 27.215136 l
36.753616 31.156536 40.366917 34.144836 44.722317 35.281536 c
44.159817 34.469036 43.644218 33.476837 43.191116 32.304935 c
h
55.753117 15.281935 m
56.132027 18.488935 56.132027 21.996735 55.753117 25.203835 c
63.366417 25.203835 l
64.456215 21.981134 64.456215 18.504635 63.366417 15.281935 c
55.753117 15.281935 l
h
43.562119 15.281935 m
43.171497 18.485035 43.171497 22.000734 43.562119 25.203835 c
53.730118 25.203835 l
54.124649 22.012434 54.124649 18.473335 53.730118 15.281935 c
43.562119 15.281935 l
h
41.253517 20.242834 m
41.253517 18.539734 41.351173 16.871735 41.538677 15.281935 c
33.921478 15.281935 l
32.835579 18.504635 32.835579 21.981134 33.921478 25.203835 c
41.538677 25.203835 l
41.351177 23.614035 41.253517 21.946033 41.253517 20.242935 c
41.253517 20.242834 l
h
54.101517 8.176834 m
54.679646 9.672934 55.136715 11.399534 55.460918 13.266634 c
62.527317 13.266634 l
60.539017 9.325234 56.925716 6.336934 52.566418 5.200234 c
53.132828 6.012734 53.648418 7.004934 54.101616 8.176834 c
54.101517 8.176834 l
h
48.648415 4.700234 m
50.476513 4.700234 52.460915 8.001034 53.425713 13.266634 c
43.867111 13.266634 l
44.835861 8.001034 46.816311 4.700234 48.648312 4.700234 c
48.648415 4.700234 l
h
f*
Q
q
[13.32825 0 0 13.32825 176.51436 2561.6938] cm
/DeviceRGB {} CS
[0.0039 0.4118 0.4314] SC
/DeviceRGB {} cs
[0.0039 0.4118 0.4314] sc
12.8 9.38 m
12.8 10.14 12.656667 10.85 12.37 11.51 c
12.083333 12.17 11.693333 12.743334 11.2 13.230001 c
10.706667 13.716667 10.126667 14.096667 9.46 14.370001 c
8.793333 14.643334 8.086667 14.780001 7.34 14.780001 c
4.7 14.780001 l
4.7 20 l
1.6 20 l
1.6 4.02 l
7.34 4.02 l
8.086666 4.02 8.793333 4.156667 9.459999 4.43 c
10.126665 4.703333 10.706665 5.08 11.199999 5.56 c
11.693333 6.04 12.083333 6.606667 12.369999 7.26 c
12.656665 7.913333 12.799998 8.62 12.799999 9.38 c
12.8 9.38 l
h
9.72 9.34 m
9.72 8.926667 9.643333 8.54 9.490001 8.18 c
9.336668 7.82 9.126668 7.506667 8.860001 7.24 c
8.593333 6.973333 8.280001 6.76 7.920001 6.6 c
7.560001 6.440001 7.173334 6.360001 6.760001 6.360001 c
4.700001 6.360001 l
4.700001 12.400001 l
6.760001 12.400001 l
7.173334 12.400001 7.56 12.316668 7.920001 12.150001 c
8.280001 11.983334 8.593334 11.76 8.860001 11.480001 c
9.126667 11.200001 9.336667 10.876667 9.490001 10.51 c
9.643334 10.143333 9.720001 9.753333 9.72 9.34 c
h
36.736 20 m
26.175999 20 l
26.175999 4.02 l
36.736 4.02 l
36.736 6.58 l
29.216 6.58 l
29.216 10.400001 l
36.636002 10.400001 l
36.636002 12.900001 l
29.216002 12.900001 l
29.216002 17.300001 l
36.736 17.300001 l
36.736 20.000002 l
36.736 20 l
h
62.551998 20 m
59.131996 20 l
57.991997 16.360001 l
57.871998 15.96 57.721996 15.593333 57.541996 15.26 c
57.361996 14.926667 57.145329 14.64 56.891994 14.400001 c
56.63866 14.160001 56.335327 13.973334 55.981995 13.84 c
55.628662 13.706666 55.211994 13.639999 54.731995 13.64 c
53.571995 13.64 l
53.571995 20 l
50.511993 20 l
50.511993 4.02 l
56.831993 4 l
57.511993 4 58.145329 4.116667 58.731995 4.35 c
59.318661 4.583334 59.825329 4.906667 60.251995 5.320001 c
60.678661 5.733334 61.011993 6.220001 61.251995 6.780001 c
61.491997 7.340001 61.611996 7.946667 61.611996 8.6 c
61.611996 9.066667 61.538662 9.520001 61.391994 9.96 c
61.245327 10.4 61.038662 10.806666 60.771996 11.18 c
60.505329 11.553334 60.188663 11.883334 59.821995 12.17 c
59.455326 12.456666 59.051994 12.673333 58.611996 12.82 c
59.11866 13.006666 59.531994 13.276667 59.851997 13.63 c
60.172001 13.983334 60.425331 14.406667 60.611996 14.9 c
60.70533 15.126666 60.791996 15.353334 60.871994 15.58 c
60.951992 15.806666 61.035328 16.043333 61.121994 16.289999 c
61.20866 16.536665 61.301994 16.803331 61.401993 17.089998 c
61.501991 17.376665 61.611992 17.693333 61.731995 18.039999 c
61.878662 18.48 62.015327 18.856665 62.141994 19.169998 c
62.268661 19.483332 62.405327 19.759998 62.551994 19.999998 c
62.551998 20 l
h
58.492001 8.82 m
58.492001 8.446666 58.422001 8.106667 58.282001 7.8 c
58.142002 7.493333 57.952003 7.226667 57.712002 7 c
57.472 6.773333 57.188667 6.596666 56.862003 6.469999 c
56.535339 6.343333 56.185337 6.28 55.812004 6.279999 c
53.572002 6.279999 l
53.572002 11.259999 l
55.812004 11.259999 l
56.185337 11.259999 56.535339 11.203333 56.862003 11.089999 c
57.188667 10.976666 57.472 10.813333 57.712002 10.599999 c
57.952003 10.386666 58.142002 10.13 58.282001 9.83 c
58.422001 9.53 58.492001 9.193334 58.492001 8.82 c
h
86.508003 15.8 m
86.508003 16.400001 86.378006 16.970001 86.118004 17.51 c
85.858002 18.049999 85.494675 18.526667 85.028008 18.940001 c
84.56134 19.353334 84.008011 19.683334 83.368004 19.93 c
82.727997 20.176666 82.021332 20.299999 81.248001 20.300001 c
80.554665 20.300001 79.931335 20.26 79.377998 20.18 c
78.824661 20.1 78.304665 19.973333 77.818001 19.800001 c
77.331337 19.626669 76.86467 19.403336 76.417999 19.130001 c
75.971329 18.856667 75.507996 18.526667 75.028 18.140001 c
77.227997 15.920001 l
77.867996 16.453335 78.494659 16.830002 79.107994 17.050001 c
79.721329 17.27 80.387993 17.380001 81.107994 17.380001 c
81.401329 17.380001 81.677994 17.336668 81.937996 17.250002 c
82.197998 17.163336 82.42466 17.046669 82.617996 16.900002 c
82.811333 16.753334 82.964661 16.58 83.077995 16.380001 c
83.19133 16.180002 83.247993 15.960002 83.247993 15.720001 c
83.247993 15.466668 83.201324 15.240001 83.107994 15.040001 c
83.014664 14.840001 82.847992 14.646668 82.607994 14.460001 c
82.367996 14.273335 82.03466 14.083335 81.607994 13.890001 c
81.181328 13.696668 80.634659 13.480001 79.967995 13.240002 c
79.381332 13.026669 78.817993 12.783336 78.277992 12.510002 c
77.737991 12.236669 77.264656 11.906669 76.857994 11.520002 c
76.451332 11.133336 76.124664 10.680002 75.877991 10.160003 c
75.631317 9.640003 75.50798 9.02667 75.507988 8.320003 c
75.507988 7.640003 75.644653 7.013336 75.917992 6.440002 c
76.19133 5.866669 76.564659 5.376669 77.037994 4.970002 c
77.51133 4.563335 78.064659 4.246669 78.697998 4.020002 c
79.331337 3.793336 80.014671 3.680003 80.748001 3.680003 c
81.974663 3.680003 83.007996 3.840002 83.848 4.160003 c
84.688004 4.480003 85.434669 4.94667 86.087997 5.560003 c
83.927994 7.740003 l
83.527992 7.353336 83.081329 7.056669 82.587997 6.850003 c
82.094666 6.643336 81.514664 6.540003 80.848 6.540003 c
80.541336 6.540003 80.258003 6.586669 79.998001 6.680003 c
79.737999 6.773336 79.514671 6.896669 79.328003 7.050003 c
79.141335 7.203336 78.991341 7.383336 78.878006 7.590003 c
78.764671 7.796669 78.708008 8.013336 78.708008 8.240003 c
78.708008 8.493336 78.761345 8.723336 78.868011 8.930002 c
78.974678 9.136668 79.154678 9.336669 79.408012 9.530003 c
79.661346 9.723336 79.998009 9.91667 80.418015 10.110003 c
80.83802 10.303335 81.361351 10.513335 81.988014 10.740003 c
82.78801 11.020002 83.474678 11.32667 84.048012 11.660003 c
84.621346 11.993336 85.088013 12.360003 85.448013 12.760003 c
85.808014 13.160004 86.074684 13.610004 86.248016 14.110004 c
86.421349 14.610004 86.508018 15.173337 86.508018 15.800003 c
86.508003 15.8 l
h
116.463997 12 m
116.463997 13.146667 116.240662 14.226667 115.793999 15.24 c
115.347336 16.253332 114.737335 17.133331 113.963997 17.879999 c
113.190659 18.626667 112.290665 19.216667 111.264 19.65 c
110.237335 20.083332 109.144005 20.299999 107.984001 20.299999 c
106.823997 20.299999 105.727333 20.083332 104.694 19.65 c
103.660667 19.216667 102.757339 18.626667 101.984001 17.879999 c
101.210663 17.133331 100.600662 16.256664 100.153999 15.249999 c
99.707336 14.243333 99.484001 13.16 99.484001 11.999999 c
99.484001 10.839998 99.707336 9.753332 100.153999 8.739999 c
100.600662 7.726666 101.210663 6.846666 101.984001 6.099999 c
102.757339 5.353331 103.660667 4.766665 104.694 4.339998 c
105.727333 3.913332 106.823997 3.699999 107.984001 3.699998 c
109.144005 3.699998 110.237335 3.913331 111.264 4.339998 c
112.290665 4.766666 113.190659 5.356666 113.963997 6.109998 c
114.737335 6.863331 115.347336 7.743331 115.793999 8.749998 c
116.240662 9.756665 116.463997 10.839998 116.463997 11.999998 c
116.463997 12 l
h
113.344002 12 m
113.344002 11.266666 113.204002 10.576667 112.924004 9.93 c
112.644005 9.283334 112.260674 8.716667 111.774002 8.23 c
111.287331 7.743333 110.717331 7.356667 110.064003 7.070001 c
109.410675 6.783334 108.717339 6.640001 107.984001 6.640001 c
107.237335 6.640001 106.537331 6.783334 105.884003 7.070001 c
105.230675 7.356667 104.660675 7.743334 104.174004 8.23 c
103.687332 8.716667 103.304001 9.283334 103.024002 9.93 c
102.744003 10.576667 102.604004 11.266666 102.604004 12 c
102.604004 12.72 102.744003 13.406667 103.024002 14.06 c
103.304001 14.713332 103.687332 15.283333 104.174004 15.77 c
104.660675 16.256666 105.230675 16.643333 105.884003 16.93 c
106.537331 17.216667 107.237335 17.360001 107.984001 17.360001 c
108.717331 17.360001 109.410667 17.216667 110.064003 16.93 c
110.717339 16.643333 111.287338 16.256666 111.774002 15.770001 c
112.260666 15.283334 112.643997 14.713334 112.924004 14.06 c
113.20401 13.406667 113.344009 12.72 113.344002 12 c
h
143.539993 20 m
140.5 20 l
133.279999 8.78 l
133.279999 20 l
130.240005 20 l
130.240005 4 l
133.720001 4 l
140.5 14.44 l
140.5 4 l
143.539993 4 l
143.539993 20 l
h
174.056 20 m
170.65601 20 l
169.17601 16.799999 l
161.416016 16.799999 l
159.916016 20 l
156.516022 20 l
164.076019 4 l
166.496017 4 l
174.056 20 l
h
167.95599 14.22 m
165.29599 8.46 l
162.595993 14.22 l
167.95599 14.22 l
h
197.85201 20 m
187.03201 20 l
187.03201 4.02 l
190.19202 4.02 l
190.19202 17 l
197.85202 17 l
197.85202 20 l
197.85201 20 l
h
231.804 20 m
228.70399 20 l
228.70399 4.02 l
231.804 4.02 l
231.804 20 l
h
259.48001 20 m
256.44 20 l
249.22 8.78 l
249.22 20 l
246.18001 20 l
246.18001 4 l
249.66 4 l
256.44 14.44 l
256.44 4 l
259.48001 4 l
259.48001 20 l
h
284.53601 15.8 m
284.53601 16.400001 284.40601 16.970001 284.146 17.51 c
283.88599 18.049999 283.52264 18.526667 283.056 18.940001 c
282.58936 19.353334 282.03601 19.683334 281.396 19.93 c
280.75598 20.176666 280.04932 20.299999 279.276 20.300001 c
278.58267 20.300001 277.95932 20.26 277.40601 20.18 c
276.85269 20.1 276.33267 19.973333 275.84601 19.800001 c
275.35934 19.626669 274.89267 19.403336 274.44601 19.130001 c
273.99936 18.856667 273.53601 18.526667 273.056 18.140001 c
275.25601 15.920001 l
275.896 16.453335 276.52267 16.830002 277.13602 17.050001 c
277.74936 17.27 278.41602 17.380001 279.13602 17.380001 c
279.42935 17.380001 279.70602 17.336668 279.966 17.250002 c
280.22598 17.163336 280.45267 17.046669 280.646 16.900002 c
280.83932 16.753334 280.99268 16.58 281.10599 16.380001 c
281.2193 16.180002 281.27597 15.960002 281.276 15.720001 c
281.276 15.466668 281.22934 15.240001 281.13599 15.040001 c
281.04263 14.840001 280.87598 14.646668 280.63599 14.460001 c
280.396 14.273335 280.06265 14.083335 279.63599 13.890001 c
279.20932 13.696668 278.66263 13.480001 277.99597 13.240002 c
277.4093 13.026669 276.84598 12.783336 276.30597 12.510002 c
275.76596 12.236669 275.29263 11.906669 274.88596 11.520002 c
274.47928 11.133336 274.15262 10.680002 273.90594 10.160003 c
273.65927 9.640003 273.53595 9.02667 273.53595 8.320003 c
273.53595 7.640003 273.67261 7.013336 273.94595 6.440002 c
274.2193 5.866669 274.59262 5.376669 275.06595 4.970002 c
275.53928 4.563335 276.09262 4.246669 276.72595 4.020002 c
277.35928 3.793336 278.04263 3.680003 278.77594 3.680003 c
280.00259 3.680003 281.03595 3.840002 281.87595 4.160003 c
282.71594 4.480003 283.46262 4.94667 284.11594 5.560003 c
281.95593 7.740003 l
281.55594 7.353336 281.10925 7.056669 280.61594 6.850003 c
280.12262 6.643336 279.5426 6.540003 278.87595 6.540003 c
278.56927 6.540003 278.28595 6.586669 278.02594 6.680003 c
277.76593 6.773336 277.5426 6.896669 277.35593 7.050003 c
277.16925 7.203336 277.01926 7.383336 276.90591 7.590003 c
276.79257 7.796669 276.7359 8.013336 276.7359 8.240003 c
276.7359 8.493336 276.78925 8.723336 276.8959 8.930002 c
277.00256 9.136668 277.18259 9.336669 277.43591 9.530003 c
277.68924 9.723336 278.02591 9.91667 278.44592 10.110003 c
278.86594 10.303335 279.38925 10.513335 280.01593 10.740003 c
280.81595 11.020002 281.50259 11.32667 282.07593 11.660003 c
282.64926 11.993336 283.11591 12.360003 283.47592 12.760003 c
283.83594 13.160004 284.1026 13.610004 284.27591 14.110004 c
284.44922 14.610004 284.53589 15.173337 284.53592 15.800003 c
284.53601 15.8 l
h
309.09201 6.78 m
304.672 6.78 l
304.672 20 l
301.53198 20 l
301.53198 6.78 l
297.11197 6.78 l
297.11197 4.02 l
309.09198 4.02 l
309.09198 6.78 l
309.09201 6.78 l
h
336.008 20 m
332.608 20 l
331.12799 16.799999 l
323.36798 16.799999 l
321.86798 20 l
318.46799 20 l
326.02798 4 l
328.448 4 l
336.008 20 l
h
329.90799 14.22 m
327.24799 8.46 l
324.54797 14.22 l
329.90796 14.22 l
329.90799 14.22 l
h
362.284 20 m
359.24399 20 l
352.02399 8.78 l
352.02399 20 l
348.98398 20 l
348.98398 4 l
352.46399 4 l
359.24399 14.44 l
359.24399 4 l
362.284 4 l
362.284 20 l
h
391.29999 17.120001 m
390.49997 18.093334 389.52997 18.866669 388.38998 19.440001 c
387.25 20.013332 385.99332 20.299999 384.62 20.300001 c
383.43332 20.300001 382.32001 20.083334 381.28 19.650002 c
380.23999 19.216669 379.33334 18.626669 378.56 17.880001 c
377.78665 17.133333 377.17667 16.256668 376.73001 15.250001 c
376.28336 14.243335 376.06003 13.160002 376.06 12.000001 c
376.05997 10.84 376.28333 9.756667 376.73001 8.750001 c
377.1767 7.743335 377.78671 6.863335 378.56 6.110001 c
379.33328 5.356667 380.23996 4.766666 381.28 4.340001 c
382.32004 3.913335 383.43338 3.700001 384.62 3.700001 c
385.99332 3.700001 387.25 3.986667 388.38998 4.56 c
389.52997 5.133334 390.47998 5.88 391.23999 6.8 c
389.09998 9 l
388.60666 8.293333 387.96997 7.723333 387.18997 7.29 c
386.40997 6.856667 385.55328 6.64 384.61996 6.64 c
383.87329 6.64 383.16998 6.783333 382.50998 7.07 c
381.84998 7.356666 381.27332 7.743333 380.77997 8.23 c
380.28662 8.716666 379.89661 9.283333 379.60995 9.929999 c
379.3233 10.576666 379.17996 11.266666 379.17996 11.999999 c
379.17996 12.719999 379.3233 13.403333 379.60995 14.049999 c
379.89661 14.696666 380.28662 15.263332 380.77997 15.749999 c
381.27332 16.236666 381.84998 16.623333 382.50998 16.91 c
383.16998 17.196667 383.87329 17.34 384.61996 17.34 c
385.60663 17.34 386.47998 17.116667 387.23996 16.67 c
387.99994 16.223333 388.63327 15.633333 389.13995 14.9 c
391.29999 17.120001 l
h
414.836 20 m
404.276 20 l
404.276 4.02 l
414.836 4.02 l
414.836 6.58 l
407.31601 6.58 l
407.31601 10.400001 l
414.73602 10.400001 l
414.73602 12.900001 l
407.31601 12.900001 l
407.31601 17.300001 l
414.836 17.300001 l
414.836 20.000002 l
414.836 20 l
h
439.29199 15.8 m
439.29199 16.400001 439.16199 16.970001 438.90198 17.51 c
438.64197 18.049999 438.27863 18.526667 437.81198 18.940001 c
437.34534 19.353334 436.79199 19.683334 436.15198 19.93 c
435.51196 20.176666 434.8053 20.299999 434.03198 20.300001 c
433.33865 20.300001 432.7153 20.26 432.16199 20.18 c
431.60867 20.1 431.08865 19.973333 430.60199 19.800001 c
430.11533 19.626669 429.64865 19.403336 429.202 19.130001 c
428.75534 18.856667 428.29199 18.526667 427.81198 18.140001 c
430.01199 15.920001 l
430.65198 16.453335 431.27866 16.830002 431.892 17.050001 c
432.50534 17.27 433.172 17.380001 433.892 17.380001 c
434.18533 17.380001 434.46201 17.336668 434.72198 17.250002 c
434.98196 17.163336 435.20865 17.046669 435.40198 16.900002 c
435.59531 16.753334 435.74866 16.58 435.86197 16.380001 c
435.97528 16.180002 436.03195 15.960002 436.03198 15.720001 c
436.03198 15.466668 435.98532 15.240001 435.89197 15.040001 c
435.79861 14.840001 435.63196 14.646668 435.39197 14.460001 c
435.15198 14.273335 434.81863 14.083335 434.39197 13.890001 c
433.9653 13.696668 433.41861 13.480001 432.75195 13.240002 c
432.16528 13.026669 431.60196 12.783336 431.06195 12.510002 c
430.52194 12.236669 430.04861 11.906669 429.64194 11.520002 c
429.23526 11.133336 428.9086 10.680002 428.66193 10.160003 c
428.41525 9.640003 428.29193 9.02667 428.29193 8.320003 c
428.29193 7.640003 428.42859 7.013336 428.70193 6.440002 c
428.97528 5.866669 429.3486 5.376669 429.82193 4.970002 c
430.29526 4.563335 430.8486 4.246669 431.48193 4.020002 c
432.11526 3.793336 432.79861 3.680003 433.53192 3.680003 c
434.75858 3.680003 435.79193 3.840002 436.63193 4.160003 c
437.47192 4.480003 438.2186 4.94667 438.87192 5.560003 c
436.71191 7.740003 l
436.31192 7.353336 435.86523 7.056669 435.37192 6.850003 c
434.8786 6.643336 434.29858 6.540003 433.63193 6.540003 c
433.32526 6.540003 433.04193 6.586669 432.78192 6.680003 c
432.52191 6.773336 432.29858 6.896669 432.11191 7.050003 c
431.92523 7.203336 431.77524 7.383336 431.6619 7.590003 c
431.54855 7.796669 431.49188 8.013336 431.49188 8.240003 c
431.49188 8.493336 431.54523 8.723336 431.65189 8.930002 c
431.75854 9.136668 431.93857 9.336669 432.19189 9.530003 c
432.44522 9.723336 432.78189 9.91667 433.2019 10.110003 c
433.62192 10.303335 434.14523 10.513335 434.77191 10.740003 c
435.57193 11.020002 436.25858 11.32667 436.83191 11.660003 c
437.40524 11.993336 437.87189 12.360003 438.2319 12.760003 c
438.59192 13.160004 438.85858 13.610004 439.03189 14.110004 c
439.2052 14.610004 439.29187 15.173337 439.2919 15.800003 c
439.29199 15.8 l
h
455.448 20 m
455.448 20.32 455.40134 20.623333 455.30798 20.91 c
455.21463 21.196667 455.07797 21.450001 454.89798 21.67 c
454.71799 21.889999 454.49133 22.063334 454.21799 22.190001 c
453.94464 22.316668 453.62799 22.380001 453.26797 22.380001 c
453.13464 22.380001 453.00464 22.366667 452.87796 22.34 c
452.75128 22.313334 452.63461 22.286667 452.52795 22.26 c
452.52795 22.040001 l
452.91461 21.973333 453.22794 21.793333 453.46796 21.5 c
453.70798 21.206667 453.82797 20.866667 453.82794 20.48 c
453.82794 20.413332 453.82129 20.333332 453.80795 20.24 c
453.79462 20.146667 453.77463 20.066668 453.74796 20 c
452.46796 20 l
452.46796 17.02 l
455.44797 17.02 l
455.44797 20 l
455.448 20 l
h
497.57999 15.8 m
497.57999 16.400001 497.44998 16.970001 497.18997 17.51 c
496.92996 18.049999 496.56662 18.526667 496.09998 18.940001 c
495.63333 19.353334 495.07999 19.683334 494.43997 19.93 c
493.79996 20.176666 493.09329 20.299999 492.31998 20.300001 c
491.62665 20.300001 491.0033 20.26 490.44998 20.18 c
489.89667 20.1 489.37665 19.973333 488.88998 19.800001 c
488.40332 19.626669 487.93665 19.403336 487.48999 19.130001 c
487.04333 18.856667 486.57999 18.526667 486.09998 18.140001 c
488.29999 15.920001 l
488.93997 16.453335 489.56665 16.830002 490.17999 17.050001 c
490.79333 17.27 491.45999 17.380001 492.17999 17.380001 c
492.47333 17.380001 492.75 17.336668 493.00998 17.250002 c
493.26996 17.163336 493.49664 17.046669 493.68997 16.900002 c
493.8833 16.753334 494.03665 16.58 494.14996 16.380001 c
494.26328 16.180002 494.31995 15.960002 494.31998 15.720001 c
494.31998 15.466668 494.27332 15.240001 494.17996 15.040001 c
494.08661 14.840001 493.91995 14.646668 493.67996 14.460001 c
493.43997 14.273335 493.10663 14.083335 492.67996 13.890001 c
492.2533 13.696668 491.7066 13.480001 491.03995 13.240002 c
490.45328 13.026669 489.88995 12.783336 489.34995 12.510002 c
488.80994 12.236669 488.33661 11.906669 487.92993 11.520002 c
487.52325 11.133336 487.19659 10.680002 486.94992 10.160003 c
486.70325 9.640003 486.57993 9.02667 486.57993 8.320003 c
486.57993 7.640003 486.71658 7.013336 486.98993 6.440002 c
487.26328 5.866669 487.6366 5.376669 488.10992 4.970002 c
488.58325 4.563335 489.1366 4.246669 489.76993 4.020002 c
490.40326 3.793336 491.08661 3.680003 491.81992 3.680003 c
493.04657 3.680003 494.07993 3.840002 494.91992 4.160003 c
495.75992 4.480003 496.50659 4.94667 497.15991 5.560003 c
494.99991 7.740003 l
494.59991 7.353336 494.15323 7.056669 493.65991 6.850003 c
493.1666 6.643336 492.58658 6.540003 491.91992 6.540003 c
491.61325 6.540003 491.32993 6.586669 491.06992 6.680003 c
490.80991 6.773336 490.58658 6.896669 490.3999 7.050003 c
490.21323 7.203336 490.06323 7.383336 489.94989 7.590003 c
489.83655 7.796669 489.77988 8.013336 489.77988 8.240003 c
489.77988 8.493336 489.83322 8.723336 489.93988 8.930002 c
490.04654 9.136668 490.22656 9.336669 490.47989 9.530003 c
490.73322 9.723336 491.06989 9.91667 491.4899 10.110003 c
491.90991 10.303335 492.43323 10.513335 493.05991 10.740003 c
493.85992 11.020002 494.54657 11.32667 495.1199 11.660003 c
495.69324 11.993336 496.15988 12.360003 496.5199 12.760003 c
496.87991 13.160004 497.14658 13.610004 497.31989 14.110004 c
497.49319 14.610004 497.57986 15.173337 497.5799 15.800003 c
497.57999 15.8 l
h
514.25598 20 m
511.15598 20 l
511.15598 4.02 l
514.25598 4.02 l
514.25598 20 l
h
544.59198 20 m
541.552 20 l
541.552 9.32 l
536.51202 17.82 l
531.672 9.24 l
531.672 20 l
528.63202 20 l
528.63202 4 l
532.13202 4 l
536.57202 11.940001 l
541.21204 4 l
544.59204 4 l
544.59204 20 l
544.59198 20 l
h
570.16803 9.38 m
570.16803 10.14 570.02472 10.85 569.73804 11.51 c
569.45135 12.17 569.0614 12.743334 568.56805 13.230001 c
568.07471 13.716667 567.49475 14.096667 566.82806 14.370001 c
566.16138 14.643334 565.45471 14.780001 564.70807 14.780001 c
562.06805 14.780001 l
562.06805 20 l
558.96808 20 l
558.96808 4.02 l
564.70807 4.02 l
565.45471 4.02 566.16138 4.156667 566.82806 4.43 c
567.49475 4.703333 568.07471 5.08 568.56805 5.56 c
569.0614 6.04 569.45135 6.606667 569.73804 7.26 c
570.02472 7.913333 570.16803 8.62 570.16803 9.38 c
h
567.08801 9.34 m
567.08801 8.926667 567.01135 8.54 566.85803 8.18 c
566.70471 7.82 566.49469 7.506667 566.22803 7.24 c
565.96136 6.973333 565.64801 6.76 565.28802 6.6 c
564.92804 6.440001 564.54138 6.360001 564.12805 6.360001 c
562.06805 6.360001 l
562.06805 12.400001 l
564.12805 12.400001 l
564.54138 12.400001 564.92804 12.316668 565.28802 12.150001 c
565.64801 11.983334 565.96136 11.76 566.22803 11.480001 c
566.49469 11.200001 566.70471 10.876667 566.85803 10.51 c
567.01135 10.143333 567.08801 9.753333 567.08801 9.34 c
h
594.36401 20 m
583.54401 20 l
583.54401 4.02 l
586.70398 4.02 l
586.70398 17 l
594.36395 17 l
594.36395 20 l
594.36401 20 l
h
610.64001 20 m
607.54004 20 l
607.54004 4.02 l
610.64001 4.02 l
610.64001 20 l
h
635.57599 6.68 m
628.05597 6.68 l
628.05597 10.4 l
635.47595 10.4 l
635.47595 12.92 l
628.05597 12.92 l
628.05597 20 l
625.01599 20 l
625.01599 4.02 l
635.57599 4.02 l
635.57599 6.68 l
635.57599 6.68 l
h
652.052 20 m
648.95203 20 l
648.95203 4.02 l
652.052 4.02 l
652.052 20 l
h
676.98798 20 m
666.42798 20 l
666.42798 4.02 l
676.98798 4.02 l
676.98798 6.58 l
669.46796 6.58 l
669.46796 10.400001 l
676.88794 10.400001 l
676.88794 12.900001 l
669.46796 12.900001 l
669.46796 17.300001 l
676.98798 17.300001 l
676.98798 20.000002 l
676.98798 20 l
h
704.98401 12 m
704.98401 13.106667 704.79736 14.143333 704.42401 15.11 c
704.05066 16.076666 703.5307 16.923332 702.86401 17.65 c
702.19733 18.376667 701.4007 18.949999 700.474 19.369999 c
699.5473 19.789999 698.53729 19.999998 697.44397 19.999998 c
690.76398 19.999998 l
690.76398 3.999998 l
697.44397 3.999998 l
698.53729 3.999998 699.5473 4.213331 700.474 4.639998 c
701.4007 5.066665 702.19733 5.639998 702.86401 6.359998 c
703.5307 7.079998 704.05066 7.926664 704.42401 8.899998 c
704.79736 9.873331 704.98401 10.906665 704.98401 11.999998 c
704.98401 12 l
h
701.84399 11.92 m
701.85736 11.173333 701.74402 10.466667 701.50397 9.8 c
701.26392 9.133333 700.9173 8.55 700.46399 8.05 c
700.01068 7.55 699.45404 7.156667 698.79401 6.87 c
698.13397 6.583333 697.39063 6.44 696.56403 6.44 c
693.86401 6.44 l
693.86401 17.360001 l
696.56403 17.360001 l
697.37732 17.360001 698.10736 17.223333 698.75403 16.950001 c
699.4007 16.676668 699.95074 16.296667 700.40405 15.81 c
700.85736 15.323334 701.2074 14.75 701.45404 14.09 c
701.70068 13.43 701.83069 12.706667 701.84406 11.92 c
701.84399 11.92 l
h
f
Q
q
[32.837711 0 0 32.837711 1555.39697 1751.0275] cm
/DeviceRGB {} CS
[0.0039 0.4118 0.4314] SC
/DeviceRGB {} cs
[0.0039 0.4118 0.4314] sc
4.74 19.26 m
3.54 18.58 2.586667 17.656666 1.88 16.49 c
1.173333 15.323333 0.82 14.053333 0.82 12.68 c
0.82 11.320001 1.173333 10.056667 1.88 8.89 c
2.586666 7.723333 3.54 6.8 4.74 6.12 c
5.94 5.440001 7.253333 5.1 8.68 5.1 c
10.106668 5.1 11.426667 5.440001 12.64 6.12 c
13.853334 6.8 14.813334 7.723333 15.520001 8.89 c
16.226667 10.056667 16.580002 11.320001 16.58 12.68 c
16.58 14.053333 16.226667 15.323333 15.520001 16.49 c
14.813335 17.656666 13.853334 18.58 12.64 19.26 c
11.426666 19.940001 10.106667 20.280001 8.68 20.280001 c
7.253334 20.280001 5.940001 19.940001 4.74 19.26 c
4.74 19.26 l
h
6.32 8.63 m
5.6 9.063334 5.026667 9.64 4.6 10.360001 c
4.173334 11.080001 3.960001 11.853334 3.96 12.68 c
3.96 13.506666 4.173334 14.283333 4.6 15.01 c
5.026667 15.736669 5.600001 16.320002 6.320001 16.76 c
7.04 17.199999 7.826667 17.419998 8.68 17.42 c
9.533334 17.420002 10.323334 17.200001 11.05 16.76 c
11.776667 16.32 12.35 15.736666 12.770001 15.01 c
13.190001 14.283335 13.400001 13.506668 13.400001 12.68 c
13.400001 11.853333 13.190001 11.079999 12.770001 10.360001 c
12.35 9.640002 11.776667 9.063335 11.05 8.630001 c
10.323334 8.196667 9.533334 7.98 8.68 7.980001 c
7.826667 7.980002 7.04 8.196669 6.32 8.630001 c
6.32 8.63 l
h
22.459999 16.870001 m
23.406666 17.25 24.273333 17.440001 25.059999 17.440001 c
25.886665 17.440001 26.543333 17.280001 27.029999 16.960001 c
27.516665 16.640001 27.759998 16.260002 27.759998 15.820001 c
27.759998 15.460001 27.616665 15.166667 27.329998 14.940001 c
27.043331 14.713334 26.679998 14.543334 26.239998 14.43 c
25.799997 14.316667 25.219997 14.193334 24.499998 14.06 c
23.539997 13.900001 22.659998 13.693334 21.859999 13.440001 c
21.059999 13.186667 20.333332 12.746667 19.679998 12.120001 c
19.026665 11.493335 18.699997 10.646668 18.699999 9.580001 c
18.699999 8.006667 19.276665 6.876668 20.429998 6.19 c
21.583332 5.503334 22.939999 5.16 24.499998 5.160001 c
25.699997 5.160001 26.74333 5.323334 27.629997 5.650001 c
28.516665 5.976667 29.399998 6.466667 30.279997 7.120001 c
28.519997 9.520001 l
27.866663 9.053334 27.186663 8.686667 26.479996 8.42 c
25.773329 8.153333 25.073328 8.02 24.379995 8.020001 c
23.766663 8.020001 23.193329 8.13 22.659996 8.35 c
22.126663 8.570001 21.859997 8.940001 21.859997 9.46 c
21.859997 9.780001 21.996664 10.036667 22.269997 10.23 c
22.543329 10.423332 22.84333 10.563333 23.169996 10.65 c
23.496662 10.736667 24.026663 10.860001 24.759996 11.02 c
25.479996 11.16 l
26.586662 11.373333 27.503328 11.61 28.229996 11.87 c
28.956663 12.13 29.586662 12.566667 30.119995 13.18 c
30.653328 13.793334 30.919994 14.646667 30.919994 15.74 c
30.919994 17.219999 30.396662 18.346666 29.349995 19.119999 c
28.303328 19.893332 26.886662 20.279999 25.099995 20.279999 c
22.486662 20.279999 20.286661 19.519999 18.499994 17.999998 c
20.179995 15.579998 l
20.753328 16.059998 21.513329 16.489998 22.459995 16.869999 c
22.459999 16.870001 l
h
33.299999 5.38 m
39.34 5.38 l
41.513332 5.38 43.293331 5.993333 44.68 7.22 c
45.426666 7.873334 45.993332 8.663334 46.380001 9.59 c
46.76667 10.516666 46.960003 11.546666 46.960003 12.68 c
46.960003 13.786667 46.760002 14.816667 46.360004 15.770001 c
45.960007 16.723333 45.400005 17.526667 44.680004 18.18 c
44.013336 18.766666 43.223339 19.216667 42.310005 19.530001 c
41.396671 19.843334 40.406673 20.000002 39.340004 20 c
33.300003 20 l
33.300003 5.38 l
33.299999 5.38 l
h
39.34 17.26 m
40.593334 17.26 41.643333 16.933334 42.490002 16.280001 c
43.33667 15.626668 43.760002 14.433334 43.760002 12.700001 c
43.760002 10.966667 43.333336 9.773334 42.480003 9.120001 c
41.626671 8.466668 40.580006 8.140001 39.340004 8.140001 c
36.460003 8.140001 l
36.460003 17.260002 l
39.340004 17.260002 l
39.34 17.26 l
h
52.740002 19.5 m
51.753334 18.993334 50.990002 18.273333 50.450001 17.34 c
49.91 16.406668 49.639999 15.320001 49.639999 14.08 c
49.639999 5.4 l
52.799999 5.4 l
52.799999 14.08 l
52.799999 14.933333 52.983334 15.616666 53.349998 16.129999 c
53.716663 16.643331 54.156666 17.006664 54.669998 17.219999 c
55.183331 17.433334 55.693333 17.540001 56.199997 17.539999 c
56.693333 17.539999 57.196663 17.433332 57.709995 17.219999 c
58.223328 17.006666 58.659992 16.643333 59.019997 16.129999 c
59.380001 15.616666 59.560001 14.933332 59.559998 14.079999 c
59.559998 5.399999 l
62.719997 5.399999 l
62.719997 14.079999 l
62.719997 15.319999 62.453331 16.406666 61.919998 17.339998 c
61.386665 18.273331 60.626667 18.993332 59.639999 19.499998 c
58.653332 20.006664 57.506668 20.259998 56.200001 20.259998 c
54.880001 20.259998 53.726669 20.006664 52.740002 19.499998 c
52.740002 19.5 l
h
f
Q
q
[32.665565 0 0 32.665565 3768.1091 1751.9054] cm
/DeviceRGB {} CS
[0.0039 0.4118 0.4314] SC
/DeviceRGB {} cs
[0.0039 0.4118 0.4314] sc
7.56 5.38 m
13.6 5.38 l
15.773335 5.38 17.553333 5.993333 18.940001 7.22 c
19.686668 7.873334 20.253334 8.663334 20.640001 9.59 c
21.026669 10.516666 21.220001 11.546666 21.220001 12.68 c
21.220001 13.786667 21.02 14.816667 20.620001 15.770001 c
20.220001 16.723333 19.66 17.526667 18.940001 18.18 c
18.273335 18.766666 17.483334 19.216667 16.57 19.530001 c
15.656666 19.843334 14.666666 20.000002 13.599999 20 c
7.56 20 l
7.56 5.38 l
7.56 5.38 l
h
13.6 17.26 m
14.853334 17.26 15.903334 16.933334 16.75 16.280001 c
17.596666 15.626668 18.02 14.433334 18.02 12.700001 c
18.02 10.966667 17.593334 9.773334 16.74 9.120001 c
15.886666 8.466668 14.839999 8.140001 13.599999 8.140001 c
10.719999 8.140001 l
10.719999 17.260002 l
13.599999 17.260002 l
13.6 17.26 l
h
26.4 11.38 m
33.400002 11.38 l
33.400002 14.14 l
26.400002 14.14 l
26.400002 17.26 l
34.32 17.26 l
34.32 20 l
23.24 20 l
23.24 5.38 l
34.32 5.38 l
34.32 8.12 l
26.4 8.12 l
26.4 11.38 l
h
43.18 20.360001 m
35.799999 5.400001 l
39.279999 5.400001 l
43.18 13.480001 l
47.099998 5.400001 l
50.599998 5.400001 l
43.18 20.360001 l
h
55.400002 11.38 m
62.400002 11.38 l
62.400002 14.14 l
55.400002 14.14 l
55.400002 17.26 l
63.32 17.26 l
63.32 20 l
52.239998 20 l
52.239998 5.38 l
63.32 5.38 l
63.32 8.12 l
55.400002 8.12 l
55.400002 11.38 l
h
77.080002 20 m
66.240005 20 l
66.240005 5.38 l
69.420006 5.38 l
69.420006 17.26 l
77.080002 17.26 l
77.080002 20 l
h
81.339996 19.26 m
80.139992 18.58 79.186661 17.656666 78.479996 16.49 c
77.773331 15.323333 77.419998 14.053333 77.419998 12.68 c
77.419998 11.320001 77.773331 10.056667 78.479996 8.89 c
79.186661 7.723333 80.139992 6.8 81.339996 6.12 c
82.540001 5.440001 83.853333 5.1 85.279999 5.1 c
86.706665 5.1 88.026665 5.440001 89.239998 6.12 c
90.453331 6.8 91.41333 7.723333 92.119995 8.89 c
92.82666 10.056667 93.179993 11.320001 93.179993 12.68 c
93.179993 14.053333 92.82666 15.323333 92.119995 16.49 c
91.41333 17.656666 90.453331 18.58 89.239998 19.26 c
88.026665 19.940001 86.706665 20.280001 85.279999 20.280001 c
83.853333 20.280001 82.540001 19.940001 81.339996 19.26 c
h
82.919998 8.63 m
82.199997 9.063334 81.626663 9.64 81.199997 10.360001 c
80.773331 11.080001 80.559998 11.853334 80.559998 12.68 c
80.559998 13.506666 80.773331 14.283333 81.199997 15.01 c
81.626663 15.736669 82.199997 16.320002 82.919998 16.76 c
83.639999 17.199999 84.426666 17.419998 85.279999 17.42 c
86.133331 17.420002 86.923332 17.200001 87.650002 16.76 c
88.376671 16.32 88.950005 15.736666 89.370003 15.01 c
89.790001 14.283335 90 13.506668 90 12.68 c
90 11.853333 89.790001 11.079999 89.370003 10.360001 c
88.950005 9.640002 88.376671 9.063335 87.650002 8.630001 c
86.923332 8.196667 86.133331 7.98 85.279999 7.980001 c
84.426666 7.980002 83.639999 8.196669 82.919998 8.630001 c
82.919998 8.63 l
h
104.830002 6.08 m
105.716667 6.546667 106.400002 7.176666 106.880005 7.97 c
107.360008 8.763333 107.600006 9.646667 107.600006 10.62 c
107.600006 11.593333 107.376671 12.466666 106.930008 13.24 c
106.483345 14.013333 105.813339 14.623333 104.920006 15.07 c
104.026672 15.516666 102.946671 15.74 101.680008 15.74 c
98.920006 15.74 l
98.920006 20 l
95.760002 20 l
95.760002 5.38 l
101.700005 5.38 l
102.900009 5.38 103.943336 5.613333 104.830002 6.08 c
h
103.839996 12.3 m
104.226662 11.833334 104.419998 11.273334 104.419998 10.62 c
104.419998 10.193333 104.32 9.79 104.119995 9.41 c
103.919991 9.03 103.623329 8.72 103.229996 8.48 c
102.836662 8.239999 102.366661 8.119999 101.819992 8.12 c
98.919991 8.12 l
98.919991 13 l
102.139992 13 l
102.886658 13 103.453323 12.766666 103.839989 12.3 c
103.839996 12.3 l
h
112.620003 11.38 m
119.620003 11.38 l
119.620003 14.14 l
112.620003 14.14 l
112.620003 17.26 l
120.540001 17.26 l
120.540001 20 l
109.459999 20 l
109.459999 5.38 l
120.540001 5.38 l
120.540001 8.12 l
112.620003 8.12 l
112.620003 11.38 l
h
123.480003 20 m
123.480003 5.38 l
129.980011 5.38 l
131.020004 5.38 131.940002 5.593333 132.740005 6.02 c
133.540009 6.446667 134.160004 7.046667 134.600006 7.82 c
135.040009 8.593333 135.26001 9.473333 135.26001 10.46 c
135.26001 11.513333 134.993347 12.453333 134.460007 13.28 c
133.926666 14.106667 133.200012 14.713333 132.280014 15.099999 c
133.226685 16.299999 134.486679 17.933332 136.060013 20 c
132.280014 20 l
131.426682 18.933332 130.26001 17.413334 128.780014 15.440001 c
126.62001 15.440001 l
126.62001 20 l
123.480011 20 l
123.480003 20 l
h
129.979996 12.7 m
130.526672 12.7 131.020004 12.503333 131.459991 12.11 c
131.899979 11.716666 132.11998 11.166666 132.119995 10.459999 c
132.119995 9.886666 131.96666 9.353333 131.659988 8.859999 c
131.353317 8.366665 130.79332 8.119998 129.979996 8.119999 c
126.619995 8.119999 l
126.619995 12.699999 l
129.979996 12.699999 l
129.979996 12.7 l
h
f
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%EOF
</file>

<file path="src/images/branding/Logo Files/For Print/eps/White logo - no background.eps">
%!PS-Adobe-3.0 EPSF-3.0
%Produced by poppler pdftops version: 22.05.0 (http://poppler.freedesktop.org)
%%Creator: Chromium
%%LanguageLevel: 3
%%DocumentSuppliedResources: (atend)
%%BoundingBox: 0 0 2346 736
%%HiResBoundingBox: 0 0 2346 735.12
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.00 0
%%Copyright: Copyright 1996-2011, 2022 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  /setpagedevice where {
    pop 2 dict begin
      /Policies 1 dict dup begin /PageSize 6 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop
  } ifelse
} def
/pdfSetupPaper {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfOPM false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfPatternCS false def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/opm { dup /pdfOPM exch def
      /setoverprintmode where{pop setoverprintmode}{pop}ifelse  } def
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16L3 {
  1 index /CIDFont resourcestatus {
    pop pop 1 index /CIDFont findresource /CIDFontType known
  } {
    false
  } ifelse
  {
    0 eq { /Identity-H } { /Identity-V } ifelse
    exch 1 array astore composefont pop
  } {
    pdfMakeFont16
  } ifelse
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
  /pdfOPM where {
    pop
    pdfOPM /setoverprintmode where{pop setoverprintmode}{pop}ifelse 
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Tp { /pdfPatternCS exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/xyshow where {
  pop
  /xyshow2 {
    dup length array
    0 2 2 index length 1 sub {
      2 index 1 index 2 copy get 3 1 roll 1 add get
      pdfTextMat dtransform
      4 2 roll 2 copy 6 5 roll put 1 add 3 1 roll dup 4 2 roll put
    } for
    exch pop
    xyshow
  } def
}{
  /xyshow2 {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval show moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval show moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/cshow where {
  pop
  /xycp {
    0 3 2 roll
    {
      pop pop currentpoint 3 2 roll
      1 string dup 0 4 3 roll put false charpath moveto
      2 copy get 2 index 2 index 1 add get
      pdfTextMat dtransform rmoveto
      2 add
    } exch cshow
    pop pop
  } def
}{
  /xycp {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval false charpath moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval false charpath moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/Tj {
  fCol
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 4 2 roll
  pdfTextRender 1 and 0 eq {
    2 copy xyshow2
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    3 index 3 index moveto
    2 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    xycp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    4 2 roll moveto xycp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    pop pop pop pop
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { 0.001 mul pdfFontSize mul pdfHorizScaling mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { 0.001 mul pdfFontSize mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
/Tclip* { pdfTextClipPath cvx exec eoclip newpath
         /pdfTextClipPath [] def } def
% Level 2/3 image operators
/pdfImBuf 100 string def
/pdfImStr {
  2 copy exch length lt {
    2 copy get exch 1 add exch
  } {
    ()
  } ifelse
} def
/skipEOD {
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfIm { image skipEOD } def
/pdfMask {
  /ReusableStreamDecode filter
  skipEOD
  /maskStream exch def
} def
/pdfMaskEnd { maskStream closefile } def
/pdfMaskInit {
  /maskArray exch def
  /maskIdx 0 def
} def
/pdfMaskSrc {
  maskIdx maskArray length lt {
    maskArray maskIdx get
    /maskIdx maskIdx 1 add def
  } {
    ()
  } ifelse
} def
/pdfImM { fCol imagemask skipEOD } def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
/CIDInit /ProcSet findresource begin
10 dict begin
  begincmap
  /CMapType 1 def
  /CMapName /Identity-H def
  /CIDSystemInfo 3 dict dup begin
    /Registry (Adobe) def
    /Ordering (Identity) def
    /Supplement 0 def
  end def
  1 begincodespacerange
    <0000> <ffff>
  endcodespacerange
  0 usefont
  1 begincidrange
    <0000> <ffff> 0
  endcidrange
  endcmap
  currentdict CMapName exch /CMap defineresource pop
end
10 dict begin
  begincmap
  /CMapType 1 def
  /CMapName /Identity-V def
  /CIDSystemInfo 3 dict dup begin
    /Registry (Adobe) def
    /Ordering (Identity) def
    /Supplement 0 def
  end def
  /WMode 1 def
  1 begincodespacerange
    <0000> <ffff>
  endcodespacerange
  0 usefont
  1 begincidrange
    <0000> <ffff> 0
  endcidrange
  endcmap
  currentdict CMapName exch /CMap defineresource pop
end
end
%%EndProlog
%%BeginSetup
xpdf begin
%%EndSetup
pdfStartPage
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
0 0 2346 735.12 re
W
q
[0.24 0 0 -0.24 0 735.12] cm
q
0 0 9771.875 3056.25 re
W*
q
[14.689504 0 0 14.689504 4160.7959 128.73938] cm
/DeviceRGB {} CS
[1 1 1] SC
/DeviceRGB {} cs
[1 1 1] sc
44.723 5.1992 m
40.3675 6.3359 36.7542 9.3242 34.765999 13.2656 c
41.832397 13.2656 l
42.324589 10.4453 43.211296 7.375 44.722996 5.199201 c
44.723 5.1992 l
h
27.140999 87.1642 m
26.668339 86.871231 26.047199 87.015762 25.754299 87.484512 c
25.461329 87.957169 25.60586 88.578316 26.07852 88.871216 c
40.160519 97.65242 58.078522 97.418114 71.949516 88.277466 c
72.41436 87.972778 72.543266 87.347778 72.238579 86.882965 c
71.933891 86.418121 71.308891 86.289215 70.844078 86.597809 c
57.606079 95.308708 40.578079 95.527512 27.141079 87.164215 c
27.140999 87.1642 l
h
23.777699 20.746201 m
24.215199 20.406361 24.297228 19.77354 23.957388 19.336 c
23.617548 18.89459 22.984728 18.816471 22.543287 19.156311 c
15.371388 24.703211 10.070288 32.562309 7.621287 41.28931 c
7.437697 41.937752 7.929877 42.570511 8.593947 42.570511 c
9.031447 42.570511 9.437697 42.277542 9.562697 41.83614 c
11.898598 33.519741 16.945498 26.031139 23.777699 20.74614 c
23.777699 20.746201 l
h
89.675705 42.0042 m
87.238205 32.711201 81.656204 24.4342 73.952705 18.6952 c
73.507393 18.367081 72.878502 18.456921 72.546509 18.902229 c
72.214478 19.34754 72.304321 19.976429 72.75354 20.30843 c
80.085541 25.777229 85.40554 33.663429 87.72654 42.51543 c
87.867172 43.058399 88.429672 43.374809 88.95314 43.23027 c
89.492203 43.093552 89.812523 42.54277 89.675797 42.00367 c
89.675705 42.0042 l
h
92.414001 79.375198 m
62.656002 79.375198 l
62.656002 82.0354 l
92.417999 82.0354 l
92.414001 79.375198 l
h
90.539001 64.086197 m
64.531006 64.086197 l
64.531006 77.363197 l
90.539001 77.363197 l
90.539001 64.086197 l
h
77.530998 58.648697 m
74.390396 58.648697 71.394295 59.902596 69.187195 62.074497 c
85.882195 62.074497 l
83.671295 59.898697 80.679092 58.648697 77.530594 58.648697 c
77.530998 58.648697 l
h
72.241898 51.340096 m
72.241898 54.261997 74.620796 56.636993 77.542694 56.636993 c
80.456795 56.633087 82.831795 54.258095 82.831795 51.340096 c
82.831795 48.422096 80.456795 46.047096 77.538795 46.047096 c
74.616898 46.047096 72.241898 48.422096 72.241898 51.340096 c
h
36.729897 51.054935 m
32.577599 64.226936 l
43.5896 64.226936 l
43.886478 64.226936 44.175541 64.258186 44.456791 64.31678 c
48.640392 51.054779 l
36.729897 51.054935 l
h
21.819897 61.245934 m
30.237896 66.105331 l
30.390236 66.195175 30.562117 66.238144 30.741806 66.238144 c
43.585808 66.238144 l
44.839706 66.238144 45.859207 67.257645 45.859207 68.511543 c
45.859207 69.765442 44.839706 70.784943 43.585808 70.784943 c
30.511806 70.788849 l
29.589926 70.788849 28.941507 70.585732 28.797007 70.519318 c
22.683706 66.99202 l
22.015736 66.609207 21.172007 67.08577 21.172007 67.863113 c
21.172007 82.03511 l
9.152006 82.03511 l
9.152006 63.812111 l
9.152006 62.39801 10.304306 61.245712 11.722306 61.245712 c
21.819897 61.245934 l
h
21.819897 53.406136 m
21.819897 50.195236 19.206596 47.585835 15.995697 47.585835 c
12.784797 47.585835 10.175397 50.195236 10.175397 53.406136 c
10.175397 56.617035 12.784797 59.230335 15.995697 59.230335 c
19.206596 59.230335 21.819897 56.620934 21.819897 53.406136 c
h
55.460896 27.215136 m
54.972614 30.019836 54.074196 33.121334 52.566395 35.281536 c
56.921894 34.144836 60.535194 31.156536 62.527294 27.215137 c
55.460896 27.215136 l
h
43.866898 27.215136 m
53.425499 27.215136 l
52.460659 32.480736 50.476299 35.781536 48.648201 35.781536 c
46.8162 35.781536 44.835701 32.480736 43.867001 27.215137 c
43.866898 27.215136 l
h
43.191116 32.304935 m
42.612995 30.804935 42.159916 29.082235 41.831715 27.215136 c
34.765316 27.215136 l
36.753616 31.156536 40.366917 34.144836 44.722317 35.281536 c
44.159817 34.469036 43.644218 33.476837 43.191116 32.304935 c
h
55.753117 15.281935 m
56.132027 18.488935 56.132027 21.996735 55.753117 25.203835 c
63.366417 25.203835 l
64.456215 21.981134 64.456215 18.504635 63.366417 15.281935 c
55.753117 15.281935 l
h
43.562119 15.281935 m
43.171497 18.485035 43.171497 22.000734 43.562119 25.203835 c
53.730118 25.203835 l
54.124649 22.012434 54.124649 18.473335 53.730118 15.281935 c
43.562119 15.281935 l
h
41.253517 20.242834 m
41.253517 18.539734 41.351173 16.871735 41.538677 15.281935 c
33.921478 15.281935 l
32.835579 18.504635 32.835579 21.981134 33.921478 25.203835 c
41.538677 25.203835 l
41.351177 23.614035 41.253517 21.946033 41.253517 20.242935 c
41.253517 20.242834 l
h
54.101517 8.176834 m
54.679646 9.672934 55.136715 11.399534 55.460918 13.266634 c
62.527317 13.266634 l
60.539017 9.325234 56.925716 6.336934 52.566418 5.200234 c
53.132828 6.012734 53.648418 7.004934 54.101616 8.176834 c
54.101517 8.176834 l
h
48.648415 4.700234 m
50.476513 4.700234 52.460915 8.001034 53.425713 13.266634 c
43.867111 13.266634 l
44.835861 8.001034 46.816311 4.700234 48.648312 4.700234 c
48.648415 4.700234 l
h
f*
Q
q
[13.32825 0 0 13.32825 176.51436 2561.6938] cm
/DeviceRGB {} CS
[1 1 1] SC
/DeviceRGB {} cs
[1 1 1] sc
12.8 9.38 m
12.8 10.14 12.656667 10.85 12.37 11.51 c
12.083333 12.17 11.693333 12.743334 11.2 13.230001 c
10.706667 13.716667 10.126667 14.096667 9.46 14.370001 c
8.793333 14.643334 8.086667 14.780001 7.34 14.780001 c
4.7 14.780001 l
4.7 20 l
1.6 20 l
1.6 4.02 l
7.34 4.02 l
8.086666 4.02 8.793333 4.156667 9.459999 4.43 c
10.126665 4.703333 10.706665 5.08 11.199999 5.56 c
11.693333 6.04 12.083333 6.606667 12.369999 7.26 c
12.656665 7.913333 12.799998 8.62 12.799999 9.38 c
12.8 9.38 l
h
9.72 9.34 m
9.72 8.926667 9.643333 8.54 9.490001 8.18 c
9.336668 7.82 9.126668 7.506667 8.860001 7.24 c
8.593333 6.973333 8.280001 6.76 7.920001 6.6 c
7.560001 6.440001 7.173334 6.360001 6.760001 6.360001 c
4.700001 6.360001 l
4.700001 12.400001 l
6.760001 12.400001 l
7.173334 12.400001 7.56 12.316668 7.920001 12.150001 c
8.280001 11.983334 8.593334 11.76 8.860001 11.480001 c
9.126667 11.200001 9.336667 10.876667 9.490001 10.51 c
9.643334 10.143333 9.720001 9.753333 9.72 9.34 c
h
36.736 20 m
26.175999 20 l
26.175999 4.02 l
36.736 4.02 l
36.736 6.58 l
29.216 6.58 l
29.216 10.400001 l
36.636002 10.400001 l
36.636002 12.900001 l
29.216002 12.900001 l
29.216002 17.300001 l
36.736 17.300001 l
36.736 20.000002 l
36.736 20 l
h
62.551998 20 m
59.131996 20 l
57.991997 16.360001 l
57.871998 15.96 57.721996 15.593333 57.541996 15.26 c
57.361996 14.926667 57.145329 14.64 56.891994 14.400001 c
56.63866 14.160001 56.335327 13.973334 55.981995 13.84 c
55.628662 13.706666 55.211994 13.639999 54.731995 13.64 c
53.571995 13.64 l
53.571995 20 l
50.511993 20 l
50.511993 4.02 l
56.831993 4 l
57.511993 4 58.145329 4.116667 58.731995 4.35 c
59.318661 4.583334 59.825329 4.906667 60.251995 5.320001 c
60.678661 5.733334 61.011993 6.220001 61.251995 6.780001 c
61.491997 7.340001 61.611996 7.946667 61.611996 8.6 c
61.611996 9.066667 61.538662 9.520001 61.391994 9.96 c
61.245327 10.4 61.038662 10.806666 60.771996 11.18 c
60.505329 11.553334 60.188663 11.883334 59.821995 12.17 c
59.455326 12.456666 59.051994 12.673333 58.611996 12.82 c
59.11866 13.006666 59.531994 13.276667 59.851997 13.63 c
60.172001 13.983334 60.425331 14.406667 60.611996 14.9 c
60.70533 15.126666 60.791996 15.353334 60.871994 15.58 c
60.951992 15.806666 61.035328 16.043333 61.121994 16.289999 c
61.20866 16.536665 61.301994 16.803331 61.401993 17.089998 c
61.501991 17.376665 61.611992 17.693333 61.731995 18.039999 c
61.878662 18.48 62.015327 18.856665 62.141994 19.169998 c
62.268661 19.483332 62.405327 19.759998 62.551994 19.999998 c
62.551998 20 l
h
58.492001 8.82 m
58.492001 8.446666 58.422001 8.106667 58.282001 7.8 c
58.142002 7.493333 57.952003 7.226667 57.712002 7 c
57.472 6.773333 57.188667 6.596666 56.862003 6.469999 c
56.535339 6.343333 56.185337 6.28 55.812004 6.279999 c
53.572002 6.279999 l
53.572002 11.259999 l
55.812004 11.259999 l
56.185337 11.259999 56.535339 11.203333 56.862003 11.089999 c
57.188667 10.976666 57.472 10.813333 57.712002 10.599999 c
57.952003 10.386666 58.142002 10.13 58.282001 9.83 c
58.422001 9.53 58.492001 9.193334 58.492001 8.82 c
h
86.508003 15.8 m
86.508003 16.400001 86.378006 16.970001 86.118004 17.51 c
85.858002 18.049999 85.494675 18.526667 85.028008 18.940001 c
84.56134 19.353334 84.008011 19.683334 83.368004 19.93 c
82.727997 20.176666 82.021332 20.299999 81.248001 20.300001 c
80.554665 20.300001 79.931335 20.26 79.377998 20.18 c
78.824661 20.1 78.304665 19.973333 77.818001 19.800001 c
77.331337 19.626669 76.86467 19.403336 76.417999 19.130001 c
75.971329 18.856667 75.507996 18.526667 75.028 18.140001 c
77.227997 15.920001 l
77.867996 16.453335 78.494659 16.830002 79.107994 17.050001 c
79.721329 17.27 80.387993 17.380001 81.107994 17.380001 c
81.401329 17.380001 81.677994 17.336668 81.937996 17.250002 c
82.197998 17.163336 82.42466 17.046669 82.617996 16.900002 c
82.811333 16.753334 82.964661 16.58 83.077995 16.380001 c
83.19133 16.180002 83.247993 15.960002 83.247993 15.720001 c
83.247993 15.466668 83.201324 15.240001 83.107994 15.040001 c
83.014664 14.840001 82.847992 14.646668 82.607994 14.460001 c
82.367996 14.273335 82.03466 14.083335 81.607994 13.890001 c
81.181328 13.696668 80.634659 13.480001 79.967995 13.240002 c
79.381332 13.026669 78.817993 12.783336 78.277992 12.510002 c
77.737991 12.236669 77.264656 11.906669 76.857994 11.520002 c
76.451332 11.133336 76.124664 10.680002 75.877991 10.160003 c
75.631317 9.640003 75.50798 9.02667 75.507988 8.320003 c
75.507988 7.640003 75.644653 7.013336 75.917992 6.440002 c
76.19133 5.866669 76.564659 5.376669 77.037994 4.970002 c
77.51133 4.563335 78.064659 4.246669 78.697998 4.020002 c
79.331337 3.793336 80.014671 3.680003 80.748001 3.680003 c
81.974663 3.680003 83.007996 3.840002 83.848 4.160003 c
84.688004 4.480003 85.434669 4.94667 86.087997 5.560003 c
83.927994 7.740003 l
83.527992 7.353336 83.081329 7.056669 82.587997 6.850003 c
82.094666 6.643336 81.514664 6.540003 80.848 6.540003 c
80.541336 6.540003 80.258003 6.586669 79.998001 6.680003 c
79.737999 6.773336 79.514671 6.896669 79.328003 7.050003 c
79.141335 7.203336 78.991341 7.383336 78.878006 7.590003 c
78.764671 7.796669 78.708008 8.013336 78.708008 8.240003 c
78.708008 8.493336 78.761345 8.723336 78.868011 8.930002 c
78.974678 9.136668 79.154678 9.336669 79.408012 9.530003 c
79.661346 9.723336 79.998009 9.91667 80.418015 10.110003 c
80.83802 10.303335 81.361351 10.513335 81.988014 10.740003 c
82.78801 11.020002 83.474678 11.32667 84.048012 11.660003 c
84.621346 11.993336 85.088013 12.360003 85.448013 12.760003 c
85.808014 13.160004 86.074684 13.610004 86.248016 14.110004 c
86.421349 14.610004 86.508018 15.173337 86.508018 15.800003 c
86.508003 15.8 l
h
116.463997 12 m
116.463997 13.146667 116.240662 14.226667 115.793999 15.24 c
115.347336 16.253332 114.737335 17.133331 113.963997 17.879999 c
113.190659 18.626667 112.290665 19.216667 111.264 19.65 c
110.237335 20.083332 109.144005 20.299999 107.984001 20.299999 c
106.823997 20.299999 105.727333 20.083332 104.694 19.65 c
103.660667 19.216667 102.757339 18.626667 101.984001 17.879999 c
101.210663 17.133331 100.600662 16.256664 100.153999 15.249999 c
99.707336 14.243333 99.484001 13.16 99.484001 11.999999 c
99.484001 10.839998 99.707336 9.753332 100.153999 8.739999 c
100.600662 7.726666 101.210663 6.846666 101.984001 6.099999 c
102.757339 5.353331 103.660667 4.766665 104.694 4.339998 c
105.727333 3.913332 106.823997 3.699999 107.984001 3.699998 c
109.144005 3.699998 110.237335 3.913331 111.264 4.339998 c
112.290665 4.766666 113.190659 5.356666 113.963997 6.109998 c
114.737335 6.863331 115.347336 7.743331 115.793999 8.749998 c
116.240662 9.756665 116.463997 10.839998 116.463997 11.999998 c
116.463997 12 l
h
113.344002 12 m
113.344002 11.266666 113.204002 10.576667 112.924004 9.93 c
112.644005 9.283334 112.260674 8.716667 111.774002 8.23 c
111.287331 7.743333 110.717331 7.356667 110.064003 7.070001 c
109.410675 6.783334 108.717339 6.640001 107.984001 6.640001 c
107.237335 6.640001 106.537331 6.783334 105.884003 7.070001 c
105.230675 7.356667 104.660675 7.743334 104.174004 8.23 c
103.687332 8.716667 103.304001 9.283334 103.024002 9.93 c
102.744003 10.576667 102.604004 11.266666 102.604004 12 c
102.604004 12.72 102.744003 13.406667 103.024002 14.06 c
103.304001 14.713332 103.687332 15.283333 104.174004 15.77 c
104.660675 16.256666 105.230675 16.643333 105.884003 16.93 c
106.537331 17.216667 107.237335 17.360001 107.984001 17.360001 c
108.717331 17.360001 109.410667 17.216667 110.064003 16.93 c
110.717339 16.643333 111.287338 16.256666 111.774002 15.770001 c
112.260666 15.283334 112.643997 14.713334 112.924004 14.06 c
113.20401 13.406667 113.344009 12.72 113.344002 12 c
h
143.539993 20 m
140.5 20 l
133.279999 8.78 l
133.279999 20 l
130.240005 20 l
130.240005 4 l
133.720001 4 l
140.5 14.44 l
140.5 4 l
143.539993 4 l
143.539993 20 l
h
174.056 20 m
170.65601 20 l
169.17601 16.799999 l
161.416016 16.799999 l
159.916016 20 l
156.516022 20 l
164.076019 4 l
166.496017 4 l
174.056 20 l
h
167.95599 14.22 m
165.29599 8.46 l
162.595993 14.22 l
167.95599 14.22 l
h
197.85201 20 m
187.03201 20 l
187.03201 4.02 l
190.19202 4.02 l
190.19202 17 l
197.85202 17 l
197.85202 20 l
197.85201 20 l
h
231.804 20 m
228.70399 20 l
228.70399 4.02 l
231.804 4.02 l
231.804 20 l
h
259.48001 20 m
256.44 20 l
249.22 8.78 l
249.22 20 l
246.18001 20 l
246.18001 4 l
249.66 4 l
256.44 14.44 l
256.44 4 l
259.48001 4 l
259.48001 20 l
h
284.53601 15.8 m
284.53601 16.400001 284.40601 16.970001 284.146 17.51 c
283.88599 18.049999 283.52264 18.526667 283.056 18.940001 c
282.58936 19.353334 282.03601 19.683334 281.396 19.93 c
280.75598 20.176666 280.04932 20.299999 279.276 20.300001 c
278.58267 20.300001 277.95932 20.26 277.40601 20.18 c
276.85269 20.1 276.33267 19.973333 275.84601 19.800001 c
275.35934 19.626669 274.89267 19.403336 274.44601 19.130001 c
273.99936 18.856667 273.53601 18.526667 273.056 18.140001 c
275.25601 15.920001 l
275.896 16.453335 276.52267 16.830002 277.13602 17.050001 c
277.74936 17.27 278.41602 17.380001 279.13602 17.380001 c
279.42935 17.380001 279.70602 17.336668 279.966 17.250002 c
280.22598 17.163336 280.45267 17.046669 280.646 16.900002 c
280.83932 16.753334 280.99268 16.58 281.10599 16.380001 c
281.2193 16.180002 281.27597 15.960002 281.276 15.720001 c
281.276 15.466668 281.22934 15.240001 281.13599 15.040001 c
281.04263 14.840001 280.87598 14.646668 280.63599 14.460001 c
280.396 14.273335 280.06265 14.083335 279.63599 13.890001 c
279.20932 13.696668 278.66263 13.480001 277.99597 13.240002 c
277.4093 13.026669 276.84598 12.783336 276.30597 12.510002 c
275.76596 12.236669 275.29263 11.906669 274.88596 11.520002 c
274.47928 11.133336 274.15262 10.680002 273.90594 10.160003 c
273.65927 9.640003 273.53595 9.02667 273.53595 8.320003 c
273.53595 7.640003 273.67261 7.013336 273.94595 6.440002 c
274.2193 5.866669 274.59262 5.376669 275.06595 4.970002 c
275.53928 4.563335 276.09262 4.246669 276.72595 4.020002 c
277.35928 3.793336 278.04263 3.680003 278.77594 3.680003 c
280.00259 3.680003 281.03595 3.840002 281.87595 4.160003 c
282.71594 4.480003 283.46262 4.94667 284.11594 5.560003 c
281.95593 7.740003 l
281.55594 7.353336 281.10925 7.056669 280.61594 6.850003 c
280.12262 6.643336 279.5426 6.540003 278.87595 6.540003 c
278.56927 6.540003 278.28595 6.586669 278.02594 6.680003 c
277.76593 6.773336 277.5426 6.896669 277.35593 7.050003 c
277.16925 7.203336 277.01926 7.383336 276.90591 7.590003 c
276.79257 7.796669 276.7359 8.013336 276.7359 8.240003 c
276.7359 8.493336 276.78925 8.723336 276.8959 8.930002 c
277.00256 9.136668 277.18259 9.336669 277.43591 9.530003 c
277.68924 9.723336 278.02591 9.91667 278.44592 10.110003 c
278.86594 10.303335 279.38925 10.513335 280.01593 10.740003 c
280.81595 11.020002 281.50259 11.32667 282.07593 11.660003 c
282.64926 11.993336 283.11591 12.360003 283.47592 12.760003 c
283.83594 13.160004 284.1026 13.610004 284.27591 14.110004 c
284.44922 14.610004 284.53589 15.173337 284.53592 15.800003 c
284.53601 15.8 l
h
309.09201 6.78 m
304.672 6.78 l
304.672 20 l
301.53198 20 l
301.53198 6.78 l
297.11197 6.78 l
297.11197 4.02 l
309.09198 4.02 l
309.09198 6.78 l
309.09201 6.78 l
h
336.008 20 m
332.608 20 l
331.12799 16.799999 l
323.36798 16.799999 l
321.86798 20 l
318.46799 20 l
326.02798 4 l
328.448 4 l
336.008 20 l
h
329.90799 14.22 m
327.24799 8.46 l
324.54797 14.22 l
329.90796 14.22 l
329.90799 14.22 l
h
362.284 20 m
359.24399 20 l
352.02399 8.78 l
352.02399 20 l
348.98398 20 l
348.98398 4 l
352.46399 4 l
359.24399 14.44 l
359.24399 4 l
362.284 4 l
362.284 20 l
h
391.29999 17.120001 m
390.49997 18.093334 389.52997 18.866669 388.38998 19.440001 c
387.25 20.013332 385.99332 20.299999 384.62 20.300001 c
383.43332 20.300001 382.32001 20.083334 381.28 19.650002 c
380.23999 19.216669 379.33334 18.626669 378.56 17.880001 c
377.78665 17.133333 377.17667 16.256668 376.73001 15.250001 c
376.28336 14.243335 376.06003 13.160002 376.06 12.000001 c
376.05997 10.84 376.28333 9.756667 376.73001 8.750001 c
377.1767 7.743335 377.78671 6.863335 378.56 6.110001 c
379.33328 5.356667 380.23996 4.766666 381.28 4.340001 c
382.32004 3.913335 383.43338 3.700001 384.62 3.700001 c
385.99332 3.700001 387.25 3.986667 388.38998 4.56 c
389.52997 5.133334 390.47998 5.88 391.23999 6.8 c
389.09998 9 l
388.60666 8.293333 387.96997 7.723333 387.18997 7.29 c
386.40997 6.856667 385.55328 6.64 384.61996 6.64 c
383.87329 6.64 383.16998 6.783333 382.50998 7.07 c
381.84998 7.356666 381.27332 7.743333 380.77997 8.23 c
380.28662 8.716666 379.89661 9.283333 379.60995 9.929999 c
379.3233 10.576666 379.17996 11.266666 379.17996 11.999999 c
379.17996 12.719999 379.3233 13.403333 379.60995 14.049999 c
379.89661 14.696666 380.28662 15.263332 380.77997 15.749999 c
381.27332 16.236666 381.84998 16.623333 382.50998 16.91 c
383.16998 17.196667 383.87329 17.34 384.61996 17.34 c
385.60663 17.34 386.47998 17.116667 387.23996 16.67 c
387.99994 16.223333 388.63327 15.633333 389.13995 14.9 c
391.29999 17.120001 l
h
414.836 20 m
404.276 20 l
404.276 4.02 l
414.836 4.02 l
414.836 6.58 l
407.31601 6.58 l
407.31601 10.400001 l
414.73602 10.400001 l
414.73602 12.900001 l
407.31601 12.900001 l
407.31601 17.300001 l
414.836 17.300001 l
414.836 20.000002 l
414.836 20 l
h
439.29199 15.8 m
439.29199 16.400001 439.16199 16.970001 438.90198 17.51 c
438.64197 18.049999 438.27863 18.526667 437.81198 18.940001 c
437.34534 19.353334 436.79199 19.683334 436.15198 19.93 c
435.51196 20.176666 434.8053 20.299999 434.03198 20.300001 c
433.33865 20.300001 432.7153 20.26 432.16199 20.18 c
431.60867 20.1 431.08865 19.973333 430.60199 19.800001 c
430.11533 19.626669 429.64865 19.403336 429.202 19.130001 c
428.75534 18.856667 428.29199 18.526667 427.81198 18.140001 c
430.01199 15.920001 l
430.65198 16.453335 431.27866 16.830002 431.892 17.050001 c
432.50534 17.27 433.172 17.380001 433.892 17.380001 c
434.18533 17.380001 434.46201 17.336668 434.72198 17.250002 c
434.98196 17.163336 435.20865 17.046669 435.40198 16.900002 c
435.59531 16.753334 435.74866 16.58 435.86197 16.380001 c
435.97528 16.180002 436.03195 15.960002 436.03198 15.720001 c
436.03198 15.466668 435.98532 15.240001 435.89197 15.040001 c
435.79861 14.840001 435.63196 14.646668 435.39197 14.460001 c
435.15198 14.273335 434.81863 14.083335 434.39197 13.890001 c
433.9653 13.696668 433.41861 13.480001 432.75195 13.240002 c
432.16528 13.026669 431.60196 12.783336 431.06195 12.510002 c
430.52194 12.236669 430.04861 11.906669 429.64194 11.520002 c
429.23526 11.133336 428.9086 10.680002 428.66193 10.160003 c
428.41525 9.640003 428.29193 9.02667 428.29193 8.320003 c
428.29193 7.640003 428.42859 7.013336 428.70193 6.440002 c
428.97528 5.866669 429.3486 5.376669 429.82193 4.970002 c
430.29526 4.563335 430.8486 4.246669 431.48193 4.020002 c
432.11526 3.793336 432.79861 3.680003 433.53192 3.680003 c
434.75858 3.680003 435.79193 3.840002 436.63193 4.160003 c
437.47192 4.480003 438.2186 4.94667 438.87192 5.560003 c
436.71191 7.740003 l
436.31192 7.353336 435.86523 7.056669 435.37192 6.850003 c
434.8786 6.643336 434.29858 6.540003 433.63193 6.540003 c
433.32526 6.540003 433.04193 6.586669 432.78192 6.680003 c
432.52191 6.773336 432.29858 6.896669 432.11191 7.050003 c
431.92523 7.203336 431.77524 7.383336 431.6619 7.590003 c
431.54855 7.796669 431.49188 8.013336 431.49188 8.240003 c
431.49188 8.493336 431.54523 8.723336 431.65189 8.930002 c
431.75854 9.136668 431.93857 9.336669 432.19189 9.530003 c
432.44522 9.723336 432.78189 9.91667 433.2019 10.110003 c
433.62192 10.303335 434.14523 10.513335 434.77191 10.740003 c
435.57193 11.020002 436.25858 11.32667 436.83191 11.660003 c
437.40524 11.993336 437.87189 12.360003 438.2319 12.760003 c
438.59192 13.160004 438.85858 13.610004 439.03189 14.110004 c
439.2052 14.610004 439.29187 15.173337 439.2919 15.800003 c
439.29199 15.8 l
h
455.448 20 m
455.448 20.32 455.40134 20.623333 455.30798 20.91 c
455.21463 21.196667 455.07797 21.450001 454.89798 21.67 c
454.71799 21.889999 454.49133 22.063334 454.21799 22.190001 c
453.94464 22.316668 453.62799 22.380001 453.26797 22.380001 c
453.13464 22.380001 453.00464 22.366667 452.87796 22.34 c
452.75128 22.313334 452.63461 22.286667 452.52795 22.26 c
452.52795 22.040001 l
452.91461 21.973333 453.22794 21.793333 453.46796 21.5 c
453.70798 21.206667 453.82797 20.866667 453.82794 20.48 c
453.82794 20.413332 453.82129 20.333332 453.80795 20.24 c
453.79462 20.146667 453.77463 20.066668 453.74796 20 c
452.46796 20 l
452.46796 17.02 l
455.44797 17.02 l
455.44797 20 l
455.448 20 l
h
497.57999 15.8 m
497.57999 16.400001 497.44998 16.970001 497.18997 17.51 c
496.92996 18.049999 496.56662 18.526667 496.09998 18.940001 c
495.63333 19.353334 495.07999 19.683334 494.43997 19.93 c
493.79996 20.176666 493.09329 20.299999 492.31998 20.300001 c
491.62665 20.300001 491.0033 20.26 490.44998 20.18 c
489.89667 20.1 489.37665 19.973333 488.88998 19.800001 c
488.40332 19.626669 487.93665 19.403336 487.48999 19.130001 c
487.04333 18.856667 486.57999 18.526667 486.09998 18.140001 c
488.29999 15.920001 l
488.93997 16.453335 489.56665 16.830002 490.17999 17.050001 c
490.79333 17.27 491.45999 17.380001 492.17999 17.380001 c
492.47333 17.380001 492.75 17.336668 493.00998 17.250002 c
493.26996 17.163336 493.49664 17.046669 493.68997 16.900002 c
493.8833 16.753334 494.03665 16.58 494.14996 16.380001 c
494.26328 16.180002 494.31995 15.960002 494.31998 15.720001 c
494.31998 15.466668 494.27332 15.240001 494.17996 15.040001 c
494.08661 14.840001 493.91995 14.646668 493.67996 14.460001 c
493.43997 14.273335 493.10663 14.083335 492.67996 13.890001 c
492.2533 13.696668 491.7066 13.480001 491.03995 13.240002 c
490.45328 13.026669 489.88995 12.783336 489.34995 12.510002 c
488.80994 12.236669 488.33661 11.906669 487.92993 11.520002 c
487.52325 11.133336 487.19659 10.680002 486.94992 10.160003 c
486.70325 9.640003 486.57993 9.02667 486.57993 8.320003 c
486.57993 7.640003 486.71658 7.013336 486.98993 6.440002 c
487.26328 5.866669 487.6366 5.376669 488.10992 4.970002 c
488.58325 4.563335 489.1366 4.246669 489.76993 4.020002 c
490.40326 3.793336 491.08661 3.680003 491.81992 3.680003 c
493.04657 3.680003 494.07993 3.840002 494.91992 4.160003 c
495.75992 4.480003 496.50659 4.94667 497.15991 5.560003 c
494.99991 7.740003 l
494.59991 7.353336 494.15323 7.056669 493.65991 6.850003 c
493.1666 6.643336 492.58658 6.540003 491.91992 6.540003 c
491.61325 6.540003 491.32993 6.586669 491.06992 6.680003 c
490.80991 6.773336 490.58658 6.896669 490.3999 7.050003 c
490.21323 7.203336 490.06323 7.383336 489.94989 7.590003 c
489.83655 7.796669 489.77988 8.013336 489.77988 8.240003 c
489.77988 8.493336 489.83322 8.723336 489.93988 8.930002 c
490.04654 9.136668 490.22656 9.336669 490.47989 9.530003 c
490.73322 9.723336 491.06989 9.91667 491.4899 10.110003 c
491.90991 10.303335 492.43323 10.513335 493.05991 10.740003 c
493.85992 11.020002 494.54657 11.32667 495.1199 11.660003 c
495.69324 11.993336 496.15988 12.360003 496.5199 12.760003 c
496.87991 13.160004 497.14658 13.610004 497.31989 14.110004 c
497.49319 14.610004 497.57986 15.173337 497.5799 15.800003 c
497.57999 15.8 l
h
514.25598 20 m
511.15598 20 l
511.15598 4.02 l
514.25598 4.02 l
514.25598 20 l
h
544.59198 20 m
541.552 20 l
541.552 9.32 l
536.51202 17.82 l
531.672 9.24 l
531.672 20 l
528.63202 20 l
528.63202 4 l
532.13202 4 l
536.57202 11.940001 l
541.21204 4 l
544.59204 4 l
544.59204 20 l
544.59198 20 l
h
570.16803 9.38 m
570.16803 10.14 570.02472 10.85 569.73804 11.51 c
569.45135 12.17 569.0614 12.743334 568.56805 13.230001 c
568.07471 13.716667 567.49475 14.096667 566.82806 14.370001 c
566.16138 14.643334 565.45471 14.780001 564.70807 14.780001 c
562.06805 14.780001 l
562.06805 20 l
558.96808 20 l
558.96808 4.02 l
564.70807 4.02 l
565.45471 4.02 566.16138 4.156667 566.82806 4.43 c
567.49475 4.703333 568.07471 5.08 568.56805 5.56 c
569.0614 6.04 569.45135 6.606667 569.73804 7.26 c
570.02472 7.913333 570.16803 8.62 570.16803 9.38 c
h
567.08801 9.34 m
567.08801 8.926667 567.01135 8.54 566.85803 8.18 c
566.70471 7.82 566.49469 7.506667 566.22803 7.24 c
565.96136 6.973333 565.64801 6.76 565.28802 6.6 c
564.92804 6.440001 564.54138 6.360001 564.12805 6.360001 c
562.06805 6.360001 l
562.06805 12.400001 l
564.12805 12.400001 l
564.54138 12.400001 564.92804 12.316668 565.28802 12.150001 c
565.64801 11.983334 565.96136 11.76 566.22803 11.480001 c
566.49469 11.200001 566.70471 10.876667 566.85803 10.51 c
567.01135 10.143333 567.08801 9.753333 567.08801 9.34 c
h
594.36401 20 m
583.54401 20 l
583.54401 4.02 l
586.70398 4.02 l
586.70398 17 l
594.36395 17 l
594.36395 20 l
594.36401 20 l
h
610.64001 20 m
607.54004 20 l
607.54004 4.02 l
610.64001 4.02 l
610.64001 20 l
h
635.57599 6.68 m
628.05597 6.68 l
628.05597 10.4 l
635.47595 10.4 l
635.47595 12.92 l
628.05597 12.92 l
628.05597 20 l
625.01599 20 l
625.01599 4.02 l
635.57599 4.02 l
635.57599 6.68 l
635.57599 6.68 l
h
652.052 20 m
648.95203 20 l
648.95203 4.02 l
652.052 4.02 l
652.052 20 l
h
676.98798 20 m
666.42798 20 l
666.42798 4.02 l
676.98798 4.02 l
676.98798 6.58 l
669.46796 6.58 l
669.46796 10.400001 l
676.88794 10.400001 l
676.88794 12.900001 l
669.46796 12.900001 l
669.46796 17.300001 l
676.98798 17.300001 l
676.98798 20.000002 l
676.98798 20 l
h
704.98401 12 m
704.98401 13.106667 704.79736 14.143333 704.42401 15.11 c
704.05066 16.076666 703.5307 16.923332 702.86401 17.65 c
702.19733 18.376667 701.4007 18.949999 700.474 19.369999 c
699.5473 19.789999 698.53729 19.999998 697.44397 19.999998 c
690.76398 19.999998 l
690.76398 3.999998 l
697.44397 3.999998 l
698.53729 3.999998 699.5473 4.213331 700.474 4.639998 c
701.4007 5.066665 702.19733 5.639998 702.86401 6.359998 c
703.5307 7.079998 704.05066 7.926664 704.42401 8.899998 c
704.79736 9.873331 704.98401 10.906665 704.98401 11.999998 c
704.98401 12 l
h
701.84399 11.92 m
701.85736 11.173333 701.74402 10.466667 701.50397 9.8 c
701.26392 9.133333 700.9173 8.55 700.46399 8.05 c
700.01068 7.55 699.45404 7.156667 698.79401 6.87 c
698.13397 6.583333 697.39063 6.44 696.56403 6.44 c
693.86401 6.44 l
693.86401 17.360001 l
696.56403 17.360001 l
697.37732 17.360001 698.10736 17.223333 698.75403 16.950001 c
699.4007 16.676668 699.95074 16.296667 700.40405 15.81 c
700.85736 15.323334 701.2074 14.75 701.45404 14.09 c
701.70068 13.43 701.83069 12.706667 701.84406 11.92 c
701.84399 11.92 l
h
f
Q
q
[32.837711 0 0 32.837711 1555.39697 1751.0275] cm
/DeviceRGB {} CS
[1 1 1] SC
/DeviceRGB {} cs
[1 1 1] sc
4.74 19.26 m
3.54 18.58 2.586667 17.656666 1.88 16.49 c
1.173333 15.323333 0.82 14.053333 0.82 12.68 c
0.82 11.320001 1.173333 10.056667 1.88 8.89 c
2.586666 7.723333 3.54 6.8 4.74 6.12 c
5.94 5.440001 7.253333 5.1 8.68 5.1 c
10.106668 5.1 11.426667 5.440001 12.64 6.12 c
13.853334 6.8 14.813334 7.723333 15.520001 8.89 c
16.226667 10.056667 16.580002 11.320001 16.58 12.68 c
16.58 14.053333 16.226667 15.323333 15.520001 16.49 c
14.813335 17.656666 13.853334 18.58 12.64 19.26 c
11.426666 19.940001 10.106667 20.280001 8.68 20.280001 c
7.253334 20.280001 5.940001 19.940001 4.74 19.26 c
4.74 19.26 l
h
6.32 8.63 m
5.6 9.063334 5.026667 9.64 4.6 10.360001 c
4.173334 11.080001 3.960001 11.853334 3.96 12.68 c
3.96 13.506666 4.173334 14.283333 4.6 15.01 c
5.026667 15.736669 5.600001 16.320002 6.320001 16.76 c
7.04 17.199999 7.826667 17.419998 8.68 17.42 c
9.533334 17.420002 10.323334 17.200001 11.05 16.76 c
11.776667 16.32 12.35 15.736666 12.770001 15.01 c
13.190001 14.283335 13.400001 13.506668 13.400001 12.68 c
13.400001 11.853333 13.190001 11.079999 12.770001 10.360001 c
12.35 9.640002 11.776667 9.063335 11.05 8.630001 c
10.323334 8.196667 9.533334 7.98 8.68 7.980001 c
7.826667 7.980002 7.04 8.196669 6.32 8.630001 c
6.32 8.63 l
h
22.459999 16.870001 m
23.406666 17.25 24.273333 17.440001 25.059999 17.440001 c
25.886665 17.440001 26.543333 17.280001 27.029999 16.960001 c
27.516665 16.640001 27.759998 16.260002 27.759998 15.820001 c
27.759998 15.460001 27.616665 15.166667 27.329998 14.940001 c
27.043331 14.713334 26.679998 14.543334 26.239998 14.43 c
25.799997 14.316667 25.219997 14.193334 24.499998 14.06 c
23.539997 13.900001 22.659998 13.693334 21.859999 13.440001 c
21.059999 13.186667 20.333332 12.746667 19.679998 12.120001 c
19.026665 11.493335 18.699997 10.646668 18.699999 9.580001 c
18.699999 8.006667 19.276665 6.876668 20.429998 6.19 c
21.583332 5.503334 22.939999 5.16 24.499998 5.160001 c
25.699997 5.160001 26.74333 5.323334 27.629997 5.650001 c
28.516665 5.976667 29.399998 6.466667 30.279997 7.120001 c
28.519997 9.520001 l
27.866663 9.053334 27.186663 8.686667 26.479996 8.42 c
25.773329 8.153333 25.073328 8.02 24.379995 8.020001 c
23.766663 8.020001 23.193329 8.13 22.659996 8.35 c
22.126663 8.570001 21.859997 8.940001 21.859997 9.46 c
21.859997 9.780001 21.996664 10.036667 22.269997 10.23 c
22.543329 10.423332 22.84333 10.563333 23.169996 10.65 c
23.496662 10.736667 24.026663 10.860001 24.759996 11.02 c
25.479996 11.16 l
26.586662 11.373333 27.503328 11.61 28.229996 11.87 c
28.956663 12.13 29.586662 12.566667 30.119995 13.18 c
30.653328 13.793334 30.919994 14.646667 30.919994 15.74 c
30.919994 17.219999 30.396662 18.346666 29.349995 19.119999 c
28.303328 19.893332 26.886662 20.279999 25.099995 20.279999 c
22.486662 20.279999 20.286661 19.519999 18.499994 17.999998 c
20.179995 15.579998 l
20.753328 16.059998 21.513329 16.489998 22.459995 16.869999 c
22.459999 16.870001 l
h
33.299999 5.38 m
39.34 5.38 l
41.513332 5.38 43.293331 5.993333 44.68 7.22 c
45.426666 7.873334 45.993332 8.663334 46.380001 9.59 c
46.76667 10.516666 46.960003 11.546666 46.960003 12.68 c
46.960003 13.786667 46.760002 14.816667 46.360004 15.770001 c
45.960007 16.723333 45.400005 17.526667 44.680004 18.18 c
44.013336 18.766666 43.223339 19.216667 42.310005 19.530001 c
41.396671 19.843334 40.406673 20.000002 39.340004 20 c
33.300003 20 l
33.300003 5.38 l
33.299999 5.38 l
h
39.34 17.26 m
40.593334 17.26 41.643333 16.933334 42.490002 16.280001 c
43.33667 15.626668 43.760002 14.433334 43.760002 12.700001 c
43.760002 10.966667 43.333336 9.773334 42.480003 9.120001 c
41.626671 8.466668 40.580006 8.140001 39.340004 8.140001 c
36.460003 8.140001 l
36.460003 17.260002 l
39.340004 17.260002 l
39.34 17.26 l
h
52.740002 19.5 m
51.753334 18.993334 50.990002 18.273333 50.450001 17.34 c
49.91 16.406668 49.639999 15.320001 49.639999 14.08 c
49.639999 5.4 l
52.799999 5.4 l
52.799999 14.08 l
52.799999 14.933333 52.983334 15.616666 53.349998 16.129999 c
53.716663 16.643331 54.156666 17.006664 54.669998 17.219999 c
55.183331 17.433334 55.693333 17.540001 56.199997 17.539999 c
56.693333 17.539999 57.196663 17.433332 57.709995 17.219999 c
58.223328 17.006666 58.659992 16.643333 59.019997 16.129999 c
59.380001 15.616666 59.560001 14.933332 59.559998 14.079999 c
59.559998 5.399999 l
62.719997 5.399999 l
62.719997 14.079999 l
62.719997 15.319999 62.453331 16.406666 61.919998 17.339998 c
61.386665 18.273331 60.626667 18.993332 59.639999 19.499998 c
58.653332 20.006664 57.506668 20.259998 56.200001 20.259998 c
54.880001 20.259998 53.726669 20.006664 52.740002 19.499998 c
52.740002 19.5 l
h
f
Q
q
[32.665565 0 0 32.665565 3768.1091 1751.9054] cm
/DeviceRGB {} CS
[1 1 1] SC
/DeviceRGB {} cs
[1 1 1] sc
7.56 5.38 m
13.6 5.38 l
15.773335 5.38 17.553333 5.993333 18.940001 7.22 c
19.686668 7.873334 20.253334 8.663334 20.640001 9.59 c
21.026669 10.516666 21.220001 11.546666 21.220001 12.68 c
21.220001 13.786667 21.02 14.816667 20.620001 15.770001 c
20.220001 16.723333 19.66 17.526667 18.940001 18.18 c
18.273335 18.766666 17.483334 19.216667 16.57 19.530001 c
15.656666 19.843334 14.666666 20.000002 13.599999 20 c
7.56 20 l
7.56 5.38 l
7.56 5.38 l
h
13.6 17.26 m
14.853334 17.26 15.903334 16.933334 16.75 16.280001 c
17.596666 15.626668 18.02 14.433334 18.02 12.700001 c
18.02 10.966667 17.593334 9.773334 16.74 9.120001 c
15.886666 8.466668 14.839999 8.140001 13.599999 8.140001 c
10.719999 8.140001 l
10.719999 17.260002 l
13.599999 17.260002 l
13.6 17.26 l
h
26.4 11.38 m
33.400002 11.38 l
33.400002 14.14 l
26.400002 14.14 l
26.400002 17.26 l
34.32 17.26 l
34.32 20 l
23.24 20 l
23.24 5.38 l
34.32 5.38 l
34.32 8.12 l
26.4 8.12 l
26.4 11.38 l
h
43.18 20.360001 m
35.799999 5.400001 l
39.279999 5.400001 l
43.18 13.480001 l
47.099998 5.400001 l
50.599998 5.400001 l
43.18 20.360001 l
h
55.400002 11.38 m
62.400002 11.38 l
62.400002 14.14 l
55.400002 14.14 l
55.400002 17.26 l
63.32 17.26 l
63.32 20 l
52.239998 20 l
52.239998 5.38 l
63.32 5.38 l
63.32 8.12 l
55.400002 8.12 l
55.400002 11.38 l
h
77.080002 20 m
66.240005 20 l
66.240005 5.38 l
69.420006 5.38 l
69.420006 17.26 l
77.080002 17.26 l
77.080002 20 l
h
81.339996 19.26 m
80.139992 18.58 79.186661 17.656666 78.479996 16.49 c
77.773331 15.323333 77.419998 14.053333 77.419998 12.68 c
77.419998 11.320001 77.773331 10.056667 78.479996 8.89 c
79.186661 7.723333 80.139992 6.8 81.339996 6.12 c
82.540001 5.440001 83.853333 5.1 85.279999 5.1 c
86.706665 5.1 88.026665 5.440001 89.239998 6.12 c
90.453331 6.8 91.41333 7.723333 92.119995 8.89 c
92.82666 10.056667 93.179993 11.320001 93.179993 12.68 c
93.179993 14.053333 92.82666 15.323333 92.119995 16.49 c
91.41333 17.656666 90.453331 18.58 89.239998 19.26 c
88.026665 19.940001 86.706665 20.280001 85.279999 20.280001 c
83.853333 20.280001 82.540001 19.940001 81.339996 19.26 c
h
82.919998 8.63 m
82.199997 9.063334 81.626663 9.64 81.199997 10.360001 c
80.773331 11.080001 80.559998 11.853334 80.559998 12.68 c
80.559998 13.506666 80.773331 14.283333 81.199997 15.01 c
81.626663 15.736669 82.199997 16.320002 82.919998 16.76 c
83.639999 17.199999 84.426666 17.419998 85.279999 17.42 c
86.133331 17.420002 86.923332 17.200001 87.650002 16.76 c
88.376671 16.32 88.950005 15.736666 89.370003 15.01 c
89.790001 14.283335 90 13.506668 90 12.68 c
90 11.853333 89.790001 11.079999 89.370003 10.360001 c
88.950005 9.640002 88.376671 9.063335 87.650002 8.630001 c
86.923332 8.196667 86.133331 7.98 85.279999 7.980001 c
84.426666 7.980002 83.639999 8.196669 82.919998 8.630001 c
82.919998 8.63 l
h
104.830002 6.08 m
105.716667 6.546667 106.400002 7.176666 106.880005 7.97 c
107.360008 8.763333 107.600006 9.646667 107.600006 10.62 c
107.600006 11.593333 107.376671 12.466666 106.930008 13.24 c
106.483345 14.013333 105.813339 14.623333 104.920006 15.07 c
104.026672 15.516666 102.946671 15.74 101.680008 15.74 c
98.920006 15.74 l
98.920006 20 l
95.760002 20 l
95.760002 5.38 l
101.700005 5.38 l
102.900009 5.38 103.943336 5.613333 104.830002 6.08 c
h
103.839996 12.3 m
104.226662 11.833334 104.419998 11.273334 104.419998 10.62 c
104.419998 10.193333 104.32 9.79 104.119995 9.41 c
103.919991 9.03 103.623329 8.72 103.229996 8.48 c
102.836662 8.239999 102.366661 8.119999 101.819992 8.12 c
98.919991 8.12 l
98.919991 13 l
102.139992 13 l
102.886658 13 103.453323 12.766666 103.839989 12.3 c
103.839996 12.3 l
h
112.620003 11.38 m
119.620003 11.38 l
119.620003 14.14 l
112.620003 14.14 l
112.620003 17.26 l
120.540001 17.26 l
120.540001 20 l
109.459999 20 l
109.459999 5.38 l
120.540001 5.38 l
120.540001 8.12 l
112.620003 8.12 l
112.620003 11.38 l
h
123.480003 20 m
123.480003 5.38 l
129.980011 5.38 l
131.020004 5.38 131.940002 5.593333 132.740005 6.02 c
133.540009 6.446667 134.160004 7.046667 134.600006 7.82 c
135.040009 8.593333 135.26001 9.473333 135.26001 10.46 c
135.26001 11.513333 134.993347 12.453333 134.460007 13.28 c
133.926666 14.106667 133.200012 14.713333 132.280014 15.099999 c
133.226685 16.299999 134.486679 17.933332 136.060013 20 c
132.280014 20 l
131.426682 18.933332 130.26001 17.413334 128.780014 15.440001 c
126.62001 15.440001 l
126.62001 20 l
123.480011 20 l
123.480003 20 l
h
129.979996 12.7 m
130.526672 12.7 131.020004 12.503333 131.459991 12.11 c
131.899979 11.716666 132.11998 11.166666 132.119995 10.459999 c
132.119995 9.886666 131.96666 9.353333 131.659988 8.859999 c
131.353317 8.366665 130.79332 8.119998 129.979996 8.119999 c
126.619995 8.119999 l
126.619995 12.699999 l
129.979996 12.699999 l
129.979996 12.7 l
h
f
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%EOF
</file>

<file path="src/images/branding/Logo Files/For Web/svg/Black logo - no background.svg">
<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" width="3126.5830786119295" height="978.4971371254286" viewBox="0 0 3126.5830786119295 978.4971371254286">
			
			<g transform="scale(6.329153930596472) translate(10, 10)">
				<defs id="SvgjsDefs5006"/><g id="SvgjsG5007" featureKey="pxMwYC-0" transform="matrix(0.7427063140258877,0,0,0.7427063140258877,200.36842195091538,-3.4908937760460197)" fill="#000"> <path xmlns="http://www.w3.org/2000/svg" d="m44.723 5.1992c-4.3555 1.1367-7.9688 4.125-9.957 8.0664h7.0664c0.49219-2.8203 1.3789-5.8906 2.8906-8.0664zm-17.582 81.965c-0.47266-0.29297-1.0938-0.14844-1.3867 0.32031-0.29297 0.47266-0.14844 1.0938 0.32422 1.3867 14.082 8.7812 32 8.5469 45.871-0.59375 0.46484-0.30469 0.59375-0.92969 0.28906-1.3945-0.30469-0.46484-0.92969-0.59375-1.3945-0.28516-13.238 8.7109-30.266 8.9297-43.703 0.56641zm-3.3633-66.418c0.4375-0.33984 0.51953-0.97266 0.17969-1.4102-0.33984-0.44141-0.97266-0.51953-1.4141-0.17969-7.1719 5.5469-12.473 13.406-14.922 22.133-0.18359 0.64844 0.30859 1.2812 0.97266 1.2812 0.4375 0 0.84375-0.29297 0.96875-0.73437 2.3359-8.3164 7.3828-15.805 14.215-21.09zm65.898 21.258c-2.4375-9.293-8.0195-17.57-15.723-23.309-0.44531-0.32812-1.0742-0.23828-1.4062 0.20703-0.33203 0.44531-0.24219 1.0742 0.20703 1.4062 7.332 5.4688 12.652 13.355 14.973 22.207 0.14063 0.54297 0.70313 0.85938 1.2266 0.71484 0.53906-0.13672 0.85938-0.6875 0.72266-1.2266zm2.7383 37.371h-29.758v2.6602h29.762zm-1.875-15.289h-26.008v13.277h26.008zm-13.008-5.4375c-3.1406 0-6.1367 1.2539-8.3438 3.4258h16.695c-2.2109-2.1758-5.2031-3.4258-8.3516-3.4258zm-5.2891-7.3086c0 2.9219 2.3789 5.2969 5.3008 5.2969 2.9141-0.003907 5.2891-2.3789 5.2891-5.2969 0-2.918-2.375-5.293-5.293-5.293-2.9219 0-5.2969 2.375-5.2969 5.293zm-35.512-0.28516-4.1523 13.172h11.012c0.29688 0 0.58594 0.03125 0.86719 0.089844l4.1836-13.262zm-14.91 10.191 8.418 4.8594c0.15234 0.089843 0.32422 0.13281 0.50391 0.13281h12.844c1.2539 0 2.2734 1.0195 2.2734 2.2734 0 1.2539-1.0195 2.2734-2.2734 2.2734l-13.074 0.003906c-0.92188 0-1.5703-0.20312-1.7148-0.26953l-6.1133-3.5273c-0.66797-0.38281-1.5117 0.09375-1.5117 0.87109v14.172h-12.02v-18.223c0-1.4141 1.1523-2.5664 2.5703-2.5664zm0-7.8398c0-3.2109-2.6133-5.8203-5.8242-5.8203-3.2109 0-5.8203 2.6094-5.8203 5.8203s2.6094 5.8242 5.8203 5.8242c3.2109 0 5.8242-2.6094 5.8242-5.8242zm33.641-26.191c-0.48828 2.8047-1.3867 5.9062-2.8945 8.0664 4.3555-1.1367 7.9688-4.125 9.9609-8.0664zm-11.594 0h9.5586c-0.96484 5.2656-2.9492 8.5664-4.7773 8.5664-1.832 0-3.8125-3.3008-4.7812-8.5664zm-0.67578 5.0898c-0.57812-1.5-1.0312-3.2227-1.3594-5.0898h-7.0664c1.9883 3.9414 5.6016 6.9297 9.957 8.0664-0.5625-0.8125-1.0781-1.8047-1.5312-2.9766zm12.562-17.023c0.37891 3.207 0.37891 6.7148 0 9.9219h7.6133c1.0898-3.2227 1.0898-6.6992 0-9.9219zm-12.191 0c-0.39062 3.2031-0.39062 6.7188 0 9.9219h10.168c0.39453-3.1914 0.39453-6.7305 0-9.9219zm-2.3086 4.9609c0-1.7031 0.097656-3.3711 0.28516-4.9609h-7.6172c-1.0859 3.2227-1.0859 6.6992 0 9.9219h7.6172c-0.1875-1.5898-0.28516-3.2578-0.28516-4.9609zm12.848-12.066c0.57813 1.4961 1.0352 3.2227 1.3594 5.0898h7.0664c-1.9883-3.9414-5.6016-6.9297-9.9609-8.0664 0.56641 0.8125 1.082 1.8047 1.5352 2.9766zm-5.4531-3.4766c1.8281 0 3.8125 3.3008 4.7773 8.5664h-9.5586c0.96875-5.2656 2.9492-8.5664 4.7812-8.5664z" fill-rule="evenodd"/></g><g id="SvgjsG5008" featureKey="aAUSXE-0" transform="matrix(0.6738808125771399,0,0,0.6738808125771399,-1.0782092358571416,119.52011695807266)" fill="#000"><path d="M12.8 9.38 q0 1.14 -0.43 2.13 t-1.17 1.72 t-1.74 1.14 t-2.12 0.41 l-2.64 0 l0 5.22 l-3.1 0 l0 -15.98 l5.74 0 q1.12 0 2.12 0.41 t1.74 1.13 t1.17 1.7 t0.43 2.12 z M9.72 9.34 q0 -0.62 -0.23 -1.16 t-0.63 -0.94 t-0.94 -0.64 t-1.16 -0.24 l-2.06 0 l0 6.04 l2.06 0 q0.62 0 1.16 -0.25 t0.94 -0.67 t0.63 -0.97 t0.23 -1.17 z M36.736000000000004 20 l-10.56 0 l0 -15.98 l10.56 0 l0 2.56 l-7.52 0 l0 3.82 l7.42 0 l0 2.5 l-7.42 0 l0 4.4 l7.52 0 l0 2.7 z M62.552 20 l-3.42 0 l-1.14 -3.64 q-0.18 -0.6 -0.45 -1.1 t-0.65 -0.86 t-0.91 -0.56 t-1.25 -0.2 l-1.16 0 l0 6.36 l-3.06 0 l0 -15.98 l6.32 -0.02 q1.02 0 1.9 0.35 t1.52 0.97 t1 1.46 t0.36 1.82 q0 0.7 -0.22 1.36 t-0.62 1.22 t-0.95 0.99 t-1.21 0.65 q0.76 0.28 1.24 0.81 t0.76 1.27 q0.14 0.34 0.26 0.68 t0.25 0.71 t0.28 0.8 t0.33 0.95 q0.22 0.66 0.41 1.13 t0.41 0.83 z M58.492 8.82 q0 -0.56 -0.21 -1.02 t-0.57 -0.8 t-0.85 -0.53 t-1.05 -0.19 l-2.24 0 l0 4.98 l2.24 0 q0.56 0 1.05 -0.17 t0.85 -0.49 t0.57 -0.77 t0.21 -1.01 z M86.508 15.8 q0 0.9 -0.39 1.71 t-1.09 1.43 t-1.66 0.99 t-2.12 0.37 q-1.04 0 -1.87 -0.12 t-1.56 -0.38 t-1.4 -0.67 t-1.39 -0.99 l2.2 -2.22 q0.96 0.8 1.88 1.13 t2 0.33 q0.44 0 0.83 -0.13 t0.68 -0.35 t0.46 -0.52 t0.17 -0.66 q0 -0.38 -0.14 -0.68 t-0.5 -0.58 t-1 -0.57 t-1.64 -0.65 q-0.88 -0.32 -1.69 -0.73 t-1.42 -0.99 t-0.98 -1.36 t-0.37 -1.84 q0 -1.02 0.41 -1.88 t1.12 -1.47 t1.66 -0.95 t2.05 -0.34 q1.84 0 3.1 0.48 t2.24 1.4 l-2.16 2.18 q-0.6 -0.58 -1.34 -0.89 t-1.74 -0.31 q-0.46 0 -0.85 0.14 t-0.67 0.37 t-0.45 0.54 t-0.17 0.65 q0 0.38 0.16 0.69 t0.54 0.6 t1.01 0.58 t1.57 0.63 q1.2 0.42 2.06 0.92 t1.4 1.1 t0.8 1.35 t0.26 1.69 z M116.464 12 q0 1.72 -0.67 3.24 t-1.83 2.64 t-2.7 1.77 t-3.28 0.65 t-3.29 -0.65 t-2.71 -1.77 t-1.83 -2.63 t-0.67 -3.25 t0.67 -3.26 t1.83 -2.64 t2.71 -1.76 t3.29 -0.64 t3.28 0.64 t2.7 1.77 t1.83 2.64 t0.67 3.25 z M113.344 12 q0 -1.1 -0.42 -2.07 t-1.15 -1.7 t-1.71 -1.16 t-2.08 -0.43 q-1.12 0 -2.1 0.43 t-1.71 1.16 t-1.15 1.7 t-0.42 2.07 q0 1.08 0.42 2.06 t1.15 1.71 t1.71 1.16 t2.1 0.43 q1.1 0 2.08 -0.43 t1.71 -1.16 t1.15 -1.71 t0.42 -2.06 z M143.54 20 l-3.04 0 l-7.22 -11.22 l0 11.22 l-3.04 0 l0 -16 l3.48 0 l6.78 10.44 l0 -10.44 l3.04 0 l0 16 z M174.05599999999998 20 l-3.4 0 l-1.48 -3.2 l-7.76 0 l-1.5 3.2 l-3.4 0 l7.56 -16 l2.42 0 z M167.95599999999996 14.219999999999999 l-2.66 -5.76 l-2.7 5.76 l5.36 0 z M197.85199999999995 20 l-10.82 0 l0 -15.98 l3.16 0 l0 12.98 l7.66 0 l0 3 z M231.80399999999995 20 l-3.1 0 l0 -15.98 l3.1 0 l0 15.98 z M259.47999999999996 20 l-3.04 0 l-7.22 -11.22 l0 11.22 l-3.04 0 l0 -16 l3.48 0 l6.78 10.44 l0 -10.44 l3.04 0 l0 16 z M284.53599999999994 15.8 q0 0.9 -0.39 1.71 t-1.09 1.43 t-1.66 0.99 t-2.12 0.37 q-1.04 0 -1.87 -0.12 t-1.56 -0.38 t-1.4 -0.67 t-1.39 -0.99 l2.2 -2.22 q0.96 0.8 1.88 1.13 t2 0.33 q0.44 0 0.83 -0.13 t0.68 -0.35 t0.46 -0.52 t0.17 -0.66 q0 -0.38 -0.14 -0.68 t-0.5 -0.58 t-1 -0.57 t-1.64 -0.65 q-0.88 -0.32 -1.69 -0.73 t-1.42 -0.99 t-0.98 -1.36 t-0.37 -1.84 q0 -1.02 0.41 -1.88 t1.12 -1.47 t1.66 -0.95 t2.05 -0.34 q1.84 0 3.1 0.48 t2.24 1.4 l-2.16 2.18 q-0.6 -0.58 -1.34 -0.89 t-1.74 -0.31 q-0.46 0 -0.85 0.14 t-0.67 0.37 t-0.45 0.54 t-0.17 0.65 q0 0.38 0.16 0.69 t0.54 0.6 t1.01 0.58 t1.57 0.63 q1.2 0.42 2.06 0.92 t1.4 1.1 t0.8 1.35 t0.26 1.69 z M309.0919999999999 6.779999999999999 l-4.42 0 l0 13.22 l-3.14 0 l0 -13.22 l-4.42 0 l0 -2.76 l11.98 0 l0 2.76 z M336.0079999999999 20 l-3.4 0 l-1.48 -3.2 l-7.76 0 l-1.5 3.2 l-3.4 0 l7.56 -16 l2.42 0 z M329.9079999999999 14.219999999999999 l-2.66 -5.76 l-2.7 5.76 l5.36 0 z M362.2839999999999 20 l-3.04 0 l-7.22 -11.22 l0 11.22 l-3.04 0 l0 -16 l3.48 0 l6.78 10.44 l0 -10.44 l3.04 0 l0 16 z M391.2999999999999 17.12 q-1.2 1.46 -2.91 2.32 t-3.77 0.86 q-1.78 0 -3.34 -0.65 t-2.72 -1.77 t-1.83 -2.63 t-0.67 -3.25 t0.67 -3.25 t1.83 -2.64 t2.72 -1.77 t3.34 -0.64 q2.06 0 3.77 0.86 t2.85 2.24 l-2.14 2.2 q-0.74 -1.06 -1.91 -1.71 t-2.57 -0.65 q-1.12 0 -2.11 0.43 t-1.73 1.16 t-1.17 1.7 t-0.43 2.07 q0 1.08 0.43 2.05 t1.17 1.7 t1.73 1.16 t2.11 0.43 q1.48 0 2.62 -0.67 t1.9 -1.77 z M414.8359999999999 20 l-10.56 0 l0 -15.98 l10.56 0 l0 2.56 l-7.52 0 l0 3.82 l7.42 0 l0 2.5 l-7.42 0 l0 4.4 l7.52 0 l0 2.7 z M439.29199999999986 15.8 q0 0.9 -0.39 1.71 t-1.09 1.43 t-1.66 0.99 t-2.12 0.37 q-1.04 0 -1.87 -0.12 t-1.56 -0.38 t-1.4 -0.67 t-1.39 -0.99 l2.2 -2.22 q0.96 0.8 1.88 1.13 t2 0.33 q0.44 0 0.83 -0.13 t0.68 -0.35 t0.46 -0.52 t0.17 -0.66 q0 -0.38 -0.14 -0.68 t-0.5 -0.58 t-1 -0.57 t-1.64 -0.65 q-0.88 -0.32 -1.69 -0.73 t-1.42 -0.99 t-0.98 -1.36 t-0.37 -1.84 q0 -1.02 0.41 -1.88 t1.12 -1.47 t1.66 -0.95 t2.05 -0.34 q1.84 0 3.1 0.48 t2.24 1.4 l-2.16 2.18 q-0.6 -0.58 -1.34 -0.89 t-1.74 -0.31 q-0.46 0 -0.85 0.14 t-0.67 0.37 t-0.45 0.54 t-0.17 0.65 q0 0.38 0.16 0.69 t0.54 0.6 t1.01 0.58 t1.57 0.63 q1.2 0.42 2.06 0.92 t1.4 1.1 t0.8 1.35 t0.26 1.69 z M455.4479999999999 20 q0 0.48 -0.14 0.91 t-0.41 0.76 t-0.68 0.52 t-0.95 0.19 q-0.2 0 -0.39 -0.04 t-0.35 -0.08 l0 -0.22 q0.58 -0.1 0.94 -0.54 t0.36 -1.02 q0 -0.1 -0.02 -0.24 t-0.06 -0.24 l-1.28 0 l0 -2.98 l2.98 0 l0 2.98 z M497.57999999999987 15.8 q0 0.9 -0.39 1.71 t-1.09 1.43 t-1.66 0.99 t-2.12 0.37 q-1.04 0 -1.87 -0.12 t-1.56 -0.38 t-1.4 -0.67 t-1.39 -0.99 l2.2 -2.22 q0.96 0.8 1.88 1.13 t2 0.33 q0.44 0 0.83 -0.13 t0.68 -0.35 t0.46 -0.52 t0.17 -0.66 q0 -0.38 -0.14 -0.68 t-0.5 -0.58 t-1 -0.57 t-1.64 -0.65 q-0.88 -0.32 -1.69 -0.73 t-1.42 -0.99 t-0.98 -1.36 t-0.37 -1.84 q0 -1.02 0.41 -1.88 t1.12 -1.47 t1.66 -0.95 t2.05 -0.34 q1.84 0 3.1 0.48 t2.24 1.4 l-2.16 2.18 q-0.6 -0.58 -1.34 -0.89 t-1.74 -0.31 q-0.46 0 -0.85 0.14 t-0.67 0.37 t-0.45 0.54 t-0.17 0.65 q0 0.38 0.16 0.69 t0.54 0.6 t1.01 0.58 t1.57 0.63 q1.2 0.42 2.06 0.92 t1.4 1.1 t0.8 1.35 t0.26 1.69 z M514.256 20 l-3.1 0 l0 -15.98 l3.1 0 l0 15.98 z M544.5919999999999 20 l-3.04 0 l0 -10.68 l-5.04 8.5 l-4.84 -8.58 l0 10.76 l-3.04 0 l0 -16 l3.5 0 l4.44 7.94 l4.64 -7.94 l3.38 0 l0 16 z M570.1679999999999 9.38 q0 1.14 -0.43 2.13 t-1.17 1.72 t-1.74 1.14 t-2.12 0.41 l-2.64 0 l0 5.22 l-3.1 0 l0 -15.98 l5.74 0 q1.12 0 2.12 0.41 t1.74 1.13 t1.17 1.7 t0.43 2.12 z M567.088 9.34 q0 -0.62 -0.23 -1.16 t-0.63 -0.94 t-0.94 -0.64 t-1.16 -0.24 l-2.06 0 l0 6.04 l2.06 0 q0.62 0 1.16 -0.25 t0.94 -0.67 t0.63 -0.97 t0.23 -1.17 z M594.3639999999999 20 l-10.82 0 l0 -15.98 l3.16 0 l0 12.98 l7.66 0 l0 3 z M610.64 20 l-3.1 0 l0 -15.98 l3.1 0 l0 15.98 z M635.5759999999999 6.68 l-7.52 0 l0 3.72 l7.42 0 l0 2.52 l-7.42 0 l0 7.08 l-3.04 0 l0 -15.98 l10.56 0 l0 2.66 z M652.052 20 l-3.1 0 l0 -15.98 l3.1 0 l0 15.98 z M676.9879999999999 20 l-10.56 0 l0 -15.98 l10.56 0 l0 2.56 l-7.52 0 l0 3.82 l7.42 0 l0 2.5 l-7.42 0 l0 4.4 l7.52 0 l0 2.7 z M704.984 12 q0 1.66 -0.56 3.11 t-1.56 2.54 t-2.39 1.72 t-3.03 0.63 l-6.68 0 l0 -16 l6.68 0 q1.64 0 3.03 0.64 t2.39 1.72 t1.56 2.54 t0.56 3.1 z M701.8439999999999 11.92 q0.02 -1.12 -0.34 -2.12 t-1.04 -1.75 t-1.67 -1.18 t-2.23 -0.43 l-2.7 0 l0 10.92 l2.7 0 q1.22 0 2.19 -0.41 t1.65 -1.14 t1.05 -1.72 t0.39 -2.17 z"/></g><g id="SvgjsG5009" featureKey="nameLeftFeature-0" transform="matrix(1.6602859249878261,0,0,1.6602859249878261,68.63856604818903,78.53254114921327)" fill="#000"><path d="M4.74 19.26 q-1.8 -1.02 -2.86 -2.77 t-1.06 -3.81 q0 -2.04 1.06 -3.79 t2.86 -2.77 t3.94 -1.02 t3.96 1.02 t2.88 2.77 t1.06 3.79 q0 2.06 -1.06 3.81 t-2.88 2.77 t-3.96 1.02 t-3.94 -1.02 z M6.32 8.63 q-1.08 0.65 -1.72 1.73 t-0.64 2.32 t0.64 2.33 t1.72 1.75 t2.36 0.66 t2.37 -0.66 t1.72 -1.75 t0.63 -2.33 t-0.63 -2.32 t-1.72 -1.73 t-2.37 -0.65 t-2.36 0.65 z M22.46 16.87 q1.42 0.57 2.6 0.57 q1.24 0 1.97 -0.48 t0.73 -1.14 q0 -0.54 -0.43 -0.88 t-1.09 -0.51 t-1.74 -0.37 q-1.44 -0.24 -2.64 -0.62 t-2.18 -1.32 t-0.98 -2.54 q0 -2.36 1.73 -3.39 t4.07 -1.03 q1.8 0 3.13 0.49 t2.65 1.47 l-1.76 2.4 q-0.98 -0.7 -2.04 -1.1 t-2.1 -0.4 q-0.92 0 -1.72 0.33 t-0.8 1.11 q0 0.48 0.41 0.77 t0.9 0.42 t1.59 0.37 l0.72 0.14 q1.66 0.32 2.75 0.71 t1.89 1.31 t0.8 2.56 q0 2.22 -1.57 3.38 t-4.25 1.16 q-3.92 0 -6.6 -2.28 l1.68 -2.42 q0.86 0.72 2.28 1.29 z M33.300000000000004 5.380000000000001 l6.04 0 q3.26 0 5.34 1.84 q1.12 0.98 1.7 2.37 t0.58 3.09 q0 1.66 -0.6 3.09 t-1.68 2.41 q-1 0.88 -2.37 1.35 t-2.97 0.47 l-6.04 0 l0 -14.62 z M39.34 17.259999999999998 q1.88 0 3.15 -0.98 t1.27 -3.58 t-1.28 -3.58 t-3.14 -0.98 l-2.88 0 l0 9.12 l2.88 0 z M52.739999999999995 19.5 q-1.48 -0.76 -2.29 -2.16 t-0.81 -3.26 l0 -8.68 l3.16 0 l0 8.68 q0 1.28 0.55 2.05 t1.32 1.09 t1.53 0.32 q0.74 0 1.51 -0.32 t1.31 -1.09 t0.54 -2.05 l0 -8.68 l3.16 0 l0 8.68 q0 1.86 -0.8 3.26 t-2.28 2.16 t-3.44 0.76 q-1.98 0 -3.46 -0.76 z"/></g><g id="SvgjsG5010" featureKey="nameRightFeature-0" transform="matrix(1.651581944297323,0,0,1.651581944297323,180.51404138315218,78.57693145405514)" fill="#000"><path d="M7.5600000000000005 5.380000000000001 l6.04 0 q3.26 0 5.34 1.84 q1.12 0.98 1.7 2.37 t0.58 3.09 q0 1.66 -0.6 3.09 t-1.68 2.41 q-1 0.88 -2.37 1.35 t-2.97 0.47 l-6.04 0 l0 -14.62 z M13.6 17.259999999999998 q1.88 0 3.15 -0.98 t1.27 -3.58 t-1.28 -3.58 t-3.14 -0.98 l-2.88 0 l0 9.12 l2.88 0 z M26.4 11.38 l7 0 l0 2.76 l-7 0 l0 3.12 l7.92 0 l0 2.74 l-11.08 0 l0 -14.62 l11.08 0 l0 2.74 l-7.92 0 l0 3.26 z M43.18000000000001 20.36 l-7.38 -14.96 l3.48 0 l3.9 8.08 l3.92 -8.08 l3.5 0 z M55.400000000000006 11.38 l7 0 l0 2.76 l-7 0 l0 3.12 l7.92 0 l0 2.74 l-11.08 0 l0 -14.62 l11.08 0 l0 2.74 l-7.92 0 l0 3.26 z M77.08 20 l-10.84 0 l0 -14.62 l3.18 0 l0 11.88 l7.66 0 l0 2.74 z M81.34 19.26 q-1.8 -1.02 -2.86 -2.77 t-1.06 -3.81 q0 -2.04 1.06 -3.79 t2.86 -2.77 t3.94 -1.02 t3.96 1.02 t2.88 2.77 t1.06 3.79 q0 2.06 -1.06 3.81 t-2.88 2.77 t-3.96 1.02 t-3.94 -1.02 z M82.92000000000002 8.63 q-1.08 0.65 -1.72 1.73 t-0.64 2.32 t0.64 2.33 t1.72 1.75 t2.36 0.66 t2.37 -0.66 t1.72 -1.75 t0.63 -2.33 t-0.63 -2.32 t-1.72 -1.73 t-2.37 -0.65 t-2.36 0.65 z M104.83000000000001 6.08 q1.33 0.7 2.05 1.89 t0.72 2.65 t-0.67 2.62 t-2.01 1.83 t-3.24 0.67 l-2.76 0 l0 4.26 l-3.16 0 l0 -14.62 l5.94 0 q1.8 0 3.13 0.7 z M103.84000000000002 12.3 q0.58 -0.7 0.58 -1.68 q0 -0.64 -0.3 -1.21 t-0.89 -0.93 t-1.41 -0.36 l-2.9 0 l0 4.88 l3.22 0 q1.12 0 1.7 -0.7 z M112.62000000000002 11.38 l7 0 l0 2.76 l-7 0 l0 3.12 l7.92 0 l0 2.74 l-11.08 0 l0 -14.62 l11.08 0 l0 2.74 l-7.92 0 l0 3.26 z M123.48000000000002 20 l0 -14.62 l6.5 0 q1.56 0 2.76 0.64 t1.86 1.8 t0.66 2.64 q0 1.58 -0.8 2.82 t-2.18 1.82 q1.42 1.8 3.78 4.9 l-3.78 0 q-1.28 -1.6 -3.5 -4.56 l-2.16 0 l0 4.56 l-3.14 0 z M129.98000000000002 12.7 q0.82 0 1.48 -0.59 t0.66 -1.65 q0 -0.86 -0.46 -1.6 t-1.68 -0.74 l-3.36 0 l0 4.58 l3.36 0 z"/></g>
			</g>
		</svg>
</file>

<file path="src/images/branding/Logo Files/For Web/svg/Color logo - no background.svg">
<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" width="3126.5830786119295" 
        height="978.4971371254286" viewBox="0 0 3126.5830786119295 978.4971371254286">
			
			<g transform="scale(6.329153930596472) translate(10, 10)">
				<defs id="SvgjsDefs5006"></defs><g id="SvgjsG5007" featureKey="pxMwYC-0" transform="matrix(0.7427063140258877,0,0,0.7427063140258877,200.36842195091538,-3.4908937760460197)" fill="#01696e"> <path xmlns="http://www.w3.org/2000/svg" d="m44.723 5.1992c-4.3555 1.1367-7.9688 4.125-9.957 8.0664h7.0664c0.49219-2.8203 1.3789-5.8906 2.8906-8.0664zm-17.582 81.965c-0.47266-0.29297-1.0938-0.14844-1.3867 0.32031-0.29297 0.47266-0.14844 1.0938 0.32422 1.3867 14.082 8.7812 32 8.5469 45.871-0.59375 0.46484-0.30469 0.59375-0.92969 0.28906-1.3945-0.30469-0.46484-0.92969-0.59375-1.3945-0.28516-13.238 8.7109-30.266 8.9297-43.703 0.56641zm-3.3633-66.418c0.4375-0.33984 0.51953-0.97266 0.17969-1.4102-0.33984-0.44141-0.97266-0.51953-1.4141-0.17969-7.1719 5.5469-12.473 13.406-14.922 22.133-0.18359 0.64844 0.30859 1.2812 0.97266 1.2812 0.4375 0 0.84375-0.29297 0.96875-0.73437 2.3359-8.3164 7.3828-15.805 14.215-21.09zm65.898 21.258c-2.4375-9.293-8.0195-17.57-15.723-23.309-0.44531-0.32812-1.0742-0.23828-1.4062 0.20703-0.33203 0.44531-0.24219 1.0742 0.20703 1.4062 7.332 5.4688 12.652 13.355 14.973 22.207 0.14063 0.54297 0.70313 0.85938 1.2266 0.71484 0.53906-0.13672 0.85938-0.6875 0.72266-1.2266zm2.7383 37.371h-29.758v2.6602h29.762zm-1.875-15.289h-26.008v13.277h26.008zm-13.008-5.4375c-3.1406 0-6.1367 1.2539-8.3438 3.4258h16.695c-2.2109-2.1758-5.2031-3.4258-8.3516-3.4258zm-5.2891-7.3086c0 2.9219 2.3789 5.2969 5.3008 5.2969 2.9141-0.003907 5.2891-2.3789 5.2891-5.2969 0-2.918-2.375-5.293-5.293-5.293-2.9219 0-5.2969 2.375-5.2969 5.293zm-35.512-0.28516-4.1523 13.172h11.012c0.29688 0 0.58594 0.03125 0.86719 0.089844l4.1836-13.262zm-14.91 10.191 8.418 4.8594c0.15234 0.089843 0.32422 0.13281 0.50391 0.13281h12.844c1.2539 0 2.2734 1.0195 2.2734 2.2734 0 1.2539-1.0195 2.2734-2.2734 2.2734l-13.074 0.003906c-0.92188 0-1.5703-0.20312-1.7148-0.26953l-6.1133-3.5273c-0.66797-0.38281-1.5117 0.09375-1.5117 0.87109v14.172h-12.02v-18.223c0-1.4141 1.1523-2.5664 2.5703-2.5664zm0-7.8398c0-3.2109-2.6133-5.8203-5.8242-5.8203-3.2109 0-5.8203 2.6094-5.8203 5.8203s2.6094 5.8242 5.8203 5.8242c3.2109 0 5.8242-2.6094 5.8242-5.8242zm33.641-26.191c-0.48828 2.8047-1.3867 5.9062-2.8945 8.0664 4.3555-1.1367 7.9688-4.125 9.9609-8.0664zm-11.594 0h9.5586c-0.96484 5.2656-2.9492 8.5664-4.7773 8.5664-1.832 0-3.8125-3.3008-4.7812-8.5664zm-0.67578 5.0898c-0.57812-1.5-1.0312-3.2227-1.3594-5.0898h-7.0664c1.9883 3.9414 5.6016 6.9297 9.957 8.0664-0.5625-0.8125-1.0781-1.8047-1.5312-2.9766zm12.562-17.023c0.37891 3.207 0.37891 6.7148 0 9.9219h7.6133c1.0898-3.2227 1.0898-6.6992 0-9.9219zm-12.191 0c-0.39062 3.2031-0.39062 6.7188 0 9.9219h10.168c0.39453-3.1914 0.39453-6.7305 0-9.9219zm-2.3086 4.9609c0-1.7031 0.097656-3.3711 0.28516-4.9609h-7.6172c-1.0859 3.2227-1.0859 6.6992 0 9.9219h7.6172c-0.1875-1.5898-0.28516-3.2578-0.28516-4.9609zm12.848-12.066c0.57813 1.4961 1.0352 3.2227 1.3594 5.0898h7.0664c-1.9883-3.9414-5.6016-6.9297-9.9609-8.0664 0.56641 0.8125 1.082 1.8047 1.5352 2.9766zm-5.4531-3.4766c1.8281 0 3.8125 3.3008 4.7773 8.5664h-9.5586c0.96875-5.2656 2.9492-8.5664 4.7812-8.5664z" fill-rule="evenodd"></path></g><g id="SvgjsG5008" featureKey="aAUSXE-0" transform="matrix(0.6738808125771399,0,0,0.6738808125771399,-1.0782092358571416,119.52011695807266)" fill="#01696e"><path d="M12.8 9.38 q0 1.14 -0.43 2.13 t-1.17 1.72 t-1.74 1.14 t-2.12 0.41 l-2.64 0 l0 5.22 l-3.1 0 l0 -15.98 l5.74 0 q1.12 0 2.12 0.41 t1.74 1.13 t1.17 1.7 t0.43 2.12 z M9.72 9.34 q0 -0.62 -0.23 -1.16 t-0.63 -0.94 t-0.94 -0.64 t-1.16 -0.24 l-2.06 0 l0 6.04 l2.06 0 q0.62 0 1.16 -0.25 t0.94 -0.67 t0.63 -0.97 t0.23 -1.17 z M36.736000000000004 20 l-10.56 0 l0 -15.98 l10.56 0 l0 2.56 l-7.52 0 l0 3.82 l7.42 0 l0 2.5 l-7.42 0 l0 4.4 l7.52 0 l0 2.7 z M62.552 20 l-3.42 0 l-1.14 -3.64 q-0.18 -0.6 -0.45 -1.1 t-0.65 -0.86 t-0.91 -0.56 t-1.25 -0.2 l-1.16 0 l0 6.36 l-3.06 0 l0 -15.98 l6.32 -0.02 q1.02 0 1.9 0.35 t1.52 0.97 t1 1.46 t0.36 1.82 q0 0.7 -0.22 1.36 t-0.62 1.22 t-0.95 0.99 t-1.21 0.65 q0.76 0.28 1.24 0.81 t0.76 1.27 q0.14 0.34 0.26 0.68 t0.25 0.71 t0.28 0.8 t0.33 0.95 q0.22 0.66 0.41 1.13 t0.41 0.83 z M58.492 8.82 q0 -0.56 -0.21 -1.02 t-0.57 -0.8 t-0.85 -0.53 t-1.05 -0.19 l-2.24 0 l0 4.98 l2.24 0 q0.56 0 1.05 -0.17 t0.85 -0.49 t0.57 -0.77 t0.21 -1.01 z M86.508 15.8 q0 0.9 -0.39 1.71 t-1.09 1.43 t-1.66 0.99 t-2.12 0.37 q-1.04 0 -1.87 -0.12 t-1.56 -0.38 t-1.4 -0.67 t-1.39 -0.99 l2.2 -2.22 q0.96 0.8 1.88 1.13 t2 0.33 q0.44 0 0.83 -0.13 t0.68 -0.35 t0.46 -0.52 t0.17 -0.66 q0 -0.38 -0.14 -0.68 t-0.5 -0.58 t-1 -0.57 t-1.64 -0.65 q-0.88 -0.32 -1.69 -0.73 t-1.42 -0.99 t-0.98 -1.36 t-0.37 -1.84 q0 -1.02 0.41 -1.88 t1.12 -1.47 t1.66 -0.95 t2.05 -0.34 q1.84 0 3.1 0.48 t2.24 1.4 l-2.16 2.18 q-0.6 -0.58 -1.34 -0.89 t-1.74 -0.31 q-0.46 0 -0.85 0.14 t-0.67 0.37 t-0.45 0.54 t-0.17 0.65 q0 0.38 0.16 0.69 t0.54 0.6 t1.01 0.58 t1.57 0.63 q1.2 0.42 2.06 0.92 t1.4 1.1 t0.8 1.35 t0.26 1.69 z M116.464 12 q0 1.72 -0.67 3.24 t-1.83 2.64 t-2.7 1.77 t-3.28 0.65 t-3.29 -0.65 t-2.71 -1.77 t-1.83 -2.63 t-0.67 -3.25 t0.67 -3.26 t1.83 -2.64 t2.71 -1.76 t3.29 -0.64 t3.28 0.64 t2.7 1.77 t1.83 2.64 t0.67 3.25 z M113.344 12 q0 -1.1 -0.42 -2.07 t-1.15 -1.7 t-1.71 -1.16 t-2.08 -0.43 q-1.12 0 -2.1 0.43 t-1.71 1.16 t-1.15 1.7 t-0.42 2.07 q0 1.08 0.42 2.06 t1.15 1.71 t1.71 1.16 t2.1 0.43 q1.1 0 2.08 -0.43 t1.71 -1.16 t1.15 -1.71 t0.42 -2.06 z M143.54 20 l-3.04 0 l-7.22 -11.22 l0 11.22 l-3.04 0 l0 -16 l3.48 0 l6.78 10.44 l0 -10.44 l3.04 0 l0 16 z M174.05599999999998 20 l-3.4 0 l-1.48 -3.2 l-7.76 0 l-1.5 3.2 l-3.4 0 l7.56 -16 l2.42 0 z M167.95599999999996 14.219999999999999 l-2.66 -5.76 l-2.7 5.76 l5.36 0 z M197.85199999999995 20 l-10.82 0 l0 -15.98 l3.16 0 l0 12.98 l7.66 0 l0 3 z M231.80399999999995 20 l-3.1 0 l0 -15.98 l3.1 0 l0 15.98 z M259.47999999999996 20 l-3.04 0 l-7.22 -11.22 l0 11.22 l-3.04 0 l0 -16 l3.48 0 l6.78 10.44 l0 -10.44 l3.04 0 l0 16 z M284.53599999999994 15.8 q0 0.9 -0.39 1.71 t-1.09 1.43 t-1.66 0.99 t-2.12 0.37 q-1.04 0 -1.87 -0.12 t-1.56 -0.38 t-1.4 -0.67 t-1.39 -0.99 l2.2 -2.22 q0.96 0.8 1.88 1.13 t2 0.33 q0.44 0 0.83 -0.13 t0.68 -0.35 t0.46 -0.52 t0.17 -0.66 q0 -0.38 -0.14 -0.68 t-0.5 -0.58 t-1 -0.57 t-1.64 -0.65 q-0.88 -0.32 -1.69 -0.73 t-1.42 -0.99 t-0.98 -1.36 t-0.37 -1.84 q0 -1.02 0.41 -1.88 t1.12 -1.47 t1.66 -0.95 t2.05 -0.34 q1.84 0 3.1 0.48 t2.24 1.4 l-2.16 2.18 q-0.6 -0.58 -1.34 -0.89 t-1.74 -0.31 q-0.46 0 -0.85 0.14 t-0.67 0.37 t-0.45 0.54 t-0.17 0.65 q0 0.38 0.16 0.69 t0.54 0.6 t1.01 0.58 t1.57 0.63 q1.2 0.42 2.06 0.92 t1.4 1.1 t0.8 1.35 t0.26 1.69 z M309.0919999999999 6.779999999999999 l-4.42 0 l0 13.22 l-3.14 0 l0 -13.22 l-4.42 0 l0 -2.76 l11.98 0 l0 2.76 z M336.0079999999999 20 l-3.4 0 l-1.48 -3.2 l-7.76 0 l-1.5 3.2 l-3.4 0 l7.56 -16 l2.42 0 z M329.9079999999999 14.219999999999999 l-2.66 -5.76 l-2.7 5.76 l5.36 0 z M362.2839999999999 20 l-3.04 0 l-7.22 -11.22 l0 11.22 l-3.04 0 l0 -16 l3.48 0 l6.78 10.44 l0 -10.44 l3.04 0 l0 16 z M391.2999999999999 17.12 q-1.2 1.46 -2.91 2.32 t-3.77 0.86 q-1.78 0 -3.34 -0.65 t-2.72 -1.77 t-1.83 -2.63 t-0.67 -3.25 t0.67 -3.25 t1.83 -2.64 t2.72 -1.77 t3.34 -0.64 q2.06 0 3.77 0.86 t2.85 2.24 l-2.14 2.2 q-0.74 -1.06 -1.91 -1.71 t-2.57 -0.65 q-1.12 0 -2.11 0.43 t-1.73 1.16 t-1.17 1.7 t-0.43 2.07 q0 1.08 0.43 2.05 t1.17 1.7 t1.73 1.16 t2.11 0.43 q1.48 0 2.62 -0.67 t1.9 -1.77 z M414.8359999999999 20 l-10.56 0 l0 -15.98 l10.56 0 l0 2.56 l-7.52 0 l0 3.82 l7.42 0 l0 2.5 l-7.42 0 l0 4.4 l7.52 0 l0 2.7 z M439.29199999999986 15.8 q0 0.9 -0.39 1.71 t-1.09 1.43 t-1.66 0.99 t-2.12 0.37 q-1.04 0 -1.87 -0.12 t-1.56 -0.38 t-1.4 -0.67 t-1.39 -0.99 l2.2 -2.22 q0.96 0.8 1.88 1.13 t2 0.33 q0.44 0 0.83 -0.13 t0.68 -0.35 t0.46 -0.52 t0.17 -0.66 q0 -0.38 -0.14 -0.68 t-0.5 -0.58 t-1 -0.57 t-1.64 -0.65 q-0.88 -0.32 -1.69 -0.73 t-1.42 -0.99 t-0.98 -1.36 t-0.37 -1.84 q0 -1.02 0.41 -1.88 t1.12 -1.47 t1.66 -0.95 t2.05 -0.34 q1.84 0 3.1 0.48 t2.24 1.4 l-2.16 2.18 q-0.6 -0.58 -1.34 -0.89 t-1.74 -0.31 q-0.46 0 -0.85 0.14 t-0.67 0.37 t-0.45 0.54 t-0.17 0.65 q0 0.38 0.16 0.69 t0.54 0.6 t1.01 0.58 t1.57 0.63 q1.2 0.42 2.06 0.92 t1.4 1.1 t0.8 1.35 t0.26 1.69 z M455.4479999999999 20 q0 0.48 -0.14 0.91 t-0.41 0.76 t-0.68 0.52 t-0.95 0.19 q-0.2 0 -0.39 -0.04 t-0.35 -0.08 l0 -0.22 q0.58 -0.1 0.94 -0.54 t0.36 -1.02 q0 -0.1 -0.02 -0.24 t-0.06 -0.24 l-1.28 0 l0 -2.98 l2.98 0 l0 2.98 z M497.57999999999987 15.8 q0 0.9 -0.39 1.71 t-1.09 1.43 t-1.66 0.99 t-2.12 0.37 q-1.04 0 -1.87 -0.12 t-1.56 -0.38 t-1.4 -0.67 t-1.39 -0.99 l2.2 -2.22 q0.96 0.8 1.88 1.13 t2 0.33 q0.44 0 0.83 -0.13 t0.68 -0.35 t0.46 -0.52 t0.17 -0.66 q0 -0.38 -0.14 -0.68 t-0.5 -0.58 t-1 -0.57 t-1.64 -0.65 q-0.88 -0.32 -1.69 -0.73 t-1.42 -0.99 t-0.98 -1.36 t-0.37 -1.84 q0 -1.02 0.41 -1.88 t1.12 -1.47 t1.66 -0.95 t2.05 -0.34 q1.84 0 3.1 0.48 t2.24 1.4 l-2.16 2.18 q-0.6 -0.58 -1.34 -0.89 t-1.74 -0.31 q-0.46 0 -0.85 0.14 t-0.67 0.37 t-0.45 0.54 t-0.17 0.65 q0 0.38 0.16 0.69 t0.54 0.6 t1.01 0.58 t1.57 0.63 q1.2 0.42 2.06 0.92 t1.4 1.1 t0.8 1.35 t0.26 1.69 z M514.256 20 l-3.1 0 l0 -15.98 l3.1 0 l0 15.98 z M544.5919999999999 20 l-3.04 0 l0 -10.68 l-5.04 8.5 l-4.84 -8.58 l0 10.76 l-3.04 0 l0 -16 l3.5 0 l4.44 7.94 l4.64 -7.94 l3.38 0 l0 16 z M570.1679999999999 9.38 q0 1.14 -0.43 2.13 t-1.17 1.72 t-1.74 1.14 t-2.12 0.41 l-2.64 0 l0 5.22 l-3.1 0 l0 -15.98 l5.74 0 q1.12 0 2.12 0.41 t1.74 1.13 t1.17 1.7 t0.43 2.12 z M567.088 9.34 q0 -0.62 -0.23 -1.16 t-0.63 -0.94 t-0.94 -0.64 t-1.16 -0.24 l-2.06 0 l0 6.04 l2.06 0 q0.62 0 1.16 -0.25 t0.94 -0.67 t0.63 -0.97 t0.23 -1.17 z M594.3639999999999 20 l-10.82 0 l0 -15.98 l3.16 0 l0 12.98 l7.66 0 l0 3 z M610.64 20 l-3.1 0 l0 -15.98 l3.1 0 l0 15.98 z M635.5759999999999 6.68 l-7.52 0 l0 3.72 l7.42 0 l0 2.52 l-7.42 0 l0 7.08 l-3.04 0 l0 -15.98 l10.56 0 l0 2.66 z M652.052 20 l-3.1 0 l0 -15.98 l3.1 0 l0 15.98 z M676.9879999999999 20 l-10.56 0 l0 -15.98 l10.56 0 l0 2.56 l-7.52 0 l0 3.82 l7.42 0 l0 2.5 l-7.42 0 l0 4.4 l7.52 0 l0 2.7 z M704.984 12 q0 1.66 -0.56 3.11 t-1.56 2.54 t-2.39 1.72 t-3.03 0.63 l-6.68 0 l0 -16 l6.68 0 q1.64 0 3.03 0.64 t2.39 1.72 t1.56 2.54 t0.56 3.1 z M701.8439999999999 11.92 q0.02 -1.12 -0.34 -2.12 t-1.04 -1.75 t-1.67 -1.18 t-2.23 -0.43 l-2.7 0 l0 10.92 l2.7 0 q1.22 0 2.19 -0.41 t1.65 -1.14 t1.05 -1.72 t0.39 -2.17 z"></path></g><g id="SvgjsG5009" featureKey="nameLeftFeature-0" transform="matrix(1.6602859249878261,0,0,1.6602859249878261,68.63856604818903,78.53254114921327)" fill="#01696e"><path d="M4.74 19.26 q-1.8 -1.02 -2.86 -2.77 t-1.06 -3.81 q0 -2.04 1.06 -3.79 t2.86 -2.77 t3.94 -1.02 t3.96 1.02 t2.88 2.77 t1.06 3.79 q0 2.06 -1.06 3.81 t-2.88 2.77 t-3.96 1.02 t-3.94 -1.02 z M6.32 8.63 q-1.08 0.65 -1.72 1.73 t-0.64 2.32 t0.64 2.33 t1.72 1.75 t2.36 0.66 t2.37 -0.66 t1.72 -1.75 t0.63 -2.33 t-0.63 -2.32 t-1.72 -1.73 t-2.37 -0.65 t-2.36 0.65 z M22.46 16.87 q1.42 0.57 2.6 0.57 q1.24 0 1.97 -0.48 t0.73 -1.14 q0 -0.54 -0.43 -0.88 t-1.09 -0.51 t-1.74 -0.37 q-1.44 -0.24 -2.64 -0.62 t-2.18 -1.32 t-0.98 -2.54 q0 -2.36 1.73 -3.39 t4.07 -1.03 q1.8 0 3.13 0.49 t2.65 1.47 l-1.76 2.4 q-0.98 -0.7 -2.04 -1.1 t-2.1 -0.4 q-0.92 0 -1.72 0.33 t-0.8 1.11 q0 0.48 0.41 0.77 t0.9 0.42 t1.59 0.37 l0.72 0.14 q1.66 0.32 2.75 0.71 t1.89 1.31 t0.8 2.56 q0 2.22 -1.57 3.38 t-4.25 1.16 q-3.92 0 -6.6 -2.28 l1.68 -2.42 q0.86 0.72 2.28 1.29 z M33.300000000000004 5.380000000000001 l6.04 0 q3.26 0 5.34 1.84 q1.12 0.98 1.7 2.37 t0.58 3.09 q0 1.66 -0.6 3.09 t-1.68 2.41 q-1 0.88 -2.37 1.35 t-2.97 0.47 l-6.04 0 l0 -14.62 z M39.34 17.259999999999998 q1.88 0 3.15 -0.98 t1.27 -3.58 t-1.28 -3.58 t-3.14 -0.98 l-2.88 0 l0 9.12 l2.88 0 z M52.739999999999995 19.5 q-1.48 -0.76 -2.29 -2.16 t-0.81 -3.26 l0 -8.68 l3.16 0 l0 8.68 q0 1.28 0.55 2.05 t1.32 1.09 t1.53 0.32 q0.74 0 1.51 -0.32 t1.31 -1.09 t0.54 -2.05 l0 -8.68 l3.16 0 l0 8.68 q0 1.86 -0.8 3.26 t-2.28 2.16 t-3.44 0.76 q-1.98 0 -3.46 -0.76 z"></path></g><g id="SvgjsG5010" featureKey="nameRightFeature-0" transform="matrix(1.651581944297323,0,0,1.651581944297323,180.51404138315218,78.57693145405514)" fill="#01696e"><path d="M7.5600000000000005 5.380000000000001 l6.04 0 q3.26 0 5.34 1.84 q1.12 0.98 1.7 2.37 t0.58 3.09 q0 1.66 -0.6 3.09 t-1.68 2.41 q-1 0.88 -2.37 1.35 t-2.97 0.47 l-6.04 0 l0 -14.62 z M13.6 17.259999999999998 q1.88 0 3.15 -0.98 t1.27 -3.58 t-1.28 -3.58 t-3.14 -0.98 l-2.88 0 l0 9.12 l2.88 0 z M26.4 11.38 l7 0 l0 2.76 l-7 0 l0 3.12 l7.92 0 l0 2.74 l-11.08 0 l0 -14.62 l11.08 0 l0 2.74 l-7.92 0 l0 3.26 z M43.18000000000001 20.36 l-7.38 -14.96 l3.48 0 l3.9 8.08 l3.92 -8.08 l3.5 0 z M55.400000000000006 11.38 l7 0 l0 2.76 l-7 0 l0 3.12 l7.92 0 l0 2.74 l-11.08 0 l0 -14.62 l11.08 0 l0 2.74 l-7.92 0 l0 3.26 z M77.08 20 l-10.84 0 l0 -14.62 l3.18 0 l0 11.88 l7.66 0 l0 2.74 z M81.34 19.26 q-1.8 -1.02 -2.86 -2.77 t-1.06 -3.81 q0 -2.04 1.06 -3.79 t2.86 -2.77 t3.94 -1.02 t3.96 1.02 t2.88 2.77 t1.06 3.79 q0 2.06 -1.06 3.81 t-2.88 2.77 t-3.96 1.02 t-3.94 -1.02 z M82.92000000000002 8.63 q-1.08 0.65 -1.72 1.73 t-0.64 2.32 t0.64 2.33 t1.72 1.75 t2.36 0.66 t2.37 -0.66 t1.72 -1.75 t0.63 -2.33 t-0.63 -2.32 t-1.72 -1.73 t-2.37 -0.65 t-2.36 0.65 z M104.83000000000001 6.08 q1.33 0.7 2.05 1.89 t0.72 2.65 t-0.67 2.62 t-2.01 1.83 t-3.24 0.67 l-2.76 0 l0 4.26 l-3.16 0 l0 -14.62 l5.94 0 q1.8 0 3.13 0.7 z M103.84000000000002 12.3 q0.58 -0.7 0.58 -1.68 q0 -0.64 -0.3 -1.21 t-0.89 -0.93 t-1.41 -0.36 l-2.9 0 l0 4.88 l3.22 0 q1.12 0 1.7 -0.7 z M112.62000000000002 11.38 l7 0 l0 2.76 l-7 0 l0 3.12 l7.92 0 l0 2.74 l-11.08 0 l0 -14.62 l11.08 0 l0 2.74 l-7.92 0 l0 3.26 z M123.48000000000002 20 l0 -14.62 l6.5 0 q1.56 0 2.76 0.64 t1.86 1.8 t0.66 2.64 q0 1.58 -0.8 2.82 t-2.18 1.82 q1.42 1.8 3.78 4.9 l-3.78 0 q-1.28 -1.6 -3.5 -4.56 l-2.16 0 l0 4.56 l-3.14 0 z M129.98000000000002 12.7 q0.82 0 1.48 -0.59 t0.66 -1.65 q0 -0.86 -0.46 -1.6 t-1.68 -0.74 l-3.36 0 l0 4.58 l3.36 0 z"></path></g>
			</g>
		</svg>
</file>

<file path="src/images/branding/Logo Files/For Web/svg/Color logo with background.svg">
<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" width="3126.5830786119295" 
        height="978.4971371254286" viewBox="0 0 3126.5830786119295 978.4971371254286">
			<rect fill="#ffffff" width="3126.5830786119295" height="978.4971371254286"/>
			<g transform="scale(6.329153930596472) translate(10, 10)">
				<defs id="SvgjsDefs5006"></defs><g id="SvgjsG5007" featureKey="pxMwYC-0" transform="matrix(0.7427063140258877,0,0,0.7427063140258877,200.36842195091538,-3.4908937760460197)" fill="#01696e"> <path xmlns="http://www.w3.org/2000/svg" d="m44.723 5.1992c-4.3555 1.1367-7.9688 4.125-9.957 8.0664h7.0664c0.49219-2.8203 1.3789-5.8906 2.8906-8.0664zm-17.582 81.965c-0.47266-0.29297-1.0938-0.14844-1.3867 0.32031-0.29297 0.47266-0.14844 1.0938 0.32422 1.3867 14.082 8.7812 32 8.5469 45.871-0.59375 0.46484-0.30469 0.59375-0.92969 0.28906-1.3945-0.30469-0.46484-0.92969-0.59375-1.3945-0.28516-13.238 8.7109-30.266 8.9297-43.703 0.56641zm-3.3633-66.418c0.4375-0.33984 0.51953-0.97266 0.17969-1.4102-0.33984-0.44141-0.97266-0.51953-1.4141-0.17969-7.1719 5.5469-12.473 13.406-14.922 22.133-0.18359 0.64844 0.30859 1.2812 0.97266 1.2812 0.4375 0 0.84375-0.29297 0.96875-0.73437 2.3359-8.3164 7.3828-15.805 14.215-21.09zm65.898 21.258c-2.4375-9.293-8.0195-17.57-15.723-23.309-0.44531-0.32812-1.0742-0.23828-1.4062 0.20703-0.33203 0.44531-0.24219 1.0742 0.20703 1.4062 7.332 5.4688 12.652 13.355 14.973 22.207 0.14063 0.54297 0.70313 0.85938 1.2266 0.71484 0.53906-0.13672 0.85938-0.6875 0.72266-1.2266zm2.7383 37.371h-29.758v2.6602h29.762zm-1.875-15.289h-26.008v13.277h26.008zm-13.008-5.4375c-3.1406 0-6.1367 1.2539-8.3438 3.4258h16.695c-2.2109-2.1758-5.2031-3.4258-8.3516-3.4258zm-5.2891-7.3086c0 2.9219 2.3789 5.2969 5.3008 5.2969 2.9141-0.003907 5.2891-2.3789 5.2891-5.2969 0-2.918-2.375-5.293-5.293-5.293-2.9219 0-5.2969 2.375-5.2969 5.293zm-35.512-0.28516-4.1523 13.172h11.012c0.29688 0 0.58594 0.03125 0.86719 0.089844l4.1836-13.262zm-14.91 10.191 8.418 4.8594c0.15234 0.089843 0.32422 0.13281 0.50391 0.13281h12.844c1.2539 0 2.2734 1.0195 2.2734 2.2734 0 1.2539-1.0195 2.2734-2.2734 2.2734l-13.074 0.003906c-0.92188 0-1.5703-0.20312-1.7148-0.26953l-6.1133-3.5273c-0.66797-0.38281-1.5117 0.09375-1.5117 0.87109v14.172h-12.02v-18.223c0-1.4141 1.1523-2.5664 2.5703-2.5664zm0-7.8398c0-3.2109-2.6133-5.8203-5.8242-5.8203-3.2109 0-5.8203 2.6094-5.8203 5.8203s2.6094 5.8242 5.8203 5.8242c3.2109 0 5.8242-2.6094 5.8242-5.8242zm33.641-26.191c-0.48828 2.8047-1.3867 5.9062-2.8945 8.0664 4.3555-1.1367 7.9688-4.125 9.9609-8.0664zm-11.594 0h9.5586c-0.96484 5.2656-2.9492 8.5664-4.7773 8.5664-1.832 0-3.8125-3.3008-4.7812-8.5664zm-0.67578 5.0898c-0.57812-1.5-1.0312-3.2227-1.3594-5.0898h-7.0664c1.9883 3.9414 5.6016 6.9297 9.957 8.0664-0.5625-0.8125-1.0781-1.8047-1.5312-2.9766zm12.562-17.023c0.37891 3.207 0.37891 6.7148 0 9.9219h7.6133c1.0898-3.2227 1.0898-6.6992 0-9.9219zm-12.191 0c-0.39062 3.2031-0.39062 6.7188 0 9.9219h10.168c0.39453-3.1914 0.39453-6.7305 0-9.9219zm-2.3086 4.9609c0-1.7031 0.097656-3.3711 0.28516-4.9609h-7.6172c-1.0859 3.2227-1.0859 6.6992 0 9.9219h7.6172c-0.1875-1.5898-0.28516-3.2578-0.28516-4.9609zm12.848-12.066c0.57813 1.4961 1.0352 3.2227 1.3594 5.0898h7.0664c-1.9883-3.9414-5.6016-6.9297-9.9609-8.0664 0.56641 0.8125 1.082 1.8047 1.5352 2.9766zm-5.4531-3.4766c1.8281 0 3.8125 3.3008 4.7773 8.5664h-9.5586c0.96875-5.2656 2.9492-8.5664 4.7812-8.5664z" fill-rule="evenodd"></path></g><g id="SvgjsG5008" featureKey="aAUSXE-0" transform="matrix(0.6738808125771399,0,0,0.6738808125771399,-1.0782092358571416,119.52011695807266)" fill="#01696e"><path d="M12.8 9.38 q0 1.14 -0.43 2.13 t-1.17 1.72 t-1.74 1.14 t-2.12 0.41 l-2.64 0 l0 5.22 l-3.1 0 l0 -15.98 l5.74 0 q1.12 0 2.12 0.41 t1.74 1.13 t1.17 1.7 t0.43 2.12 z M9.72 9.34 q0 -0.62 -0.23 -1.16 t-0.63 -0.94 t-0.94 -0.64 t-1.16 -0.24 l-2.06 0 l0 6.04 l2.06 0 q0.62 0 1.16 -0.25 t0.94 -0.67 t0.63 -0.97 t0.23 -1.17 z M36.736000000000004 20 l-10.56 0 l0 -15.98 l10.56 0 l0 2.56 l-7.52 0 l0 3.82 l7.42 0 l0 2.5 l-7.42 0 l0 4.4 l7.52 0 l0 2.7 z M62.552 20 l-3.42 0 l-1.14 -3.64 q-0.18 -0.6 -0.45 -1.1 t-0.65 -0.86 t-0.91 -0.56 t-1.25 -0.2 l-1.16 0 l0 6.36 l-3.06 0 l0 -15.98 l6.32 -0.02 q1.02 0 1.9 0.35 t1.52 0.97 t1 1.46 t0.36 1.82 q0 0.7 -0.22 1.36 t-0.62 1.22 t-0.95 0.99 t-1.21 0.65 q0.76 0.28 1.24 0.81 t0.76 1.27 q0.14 0.34 0.26 0.68 t0.25 0.71 t0.28 0.8 t0.33 0.95 q0.22 0.66 0.41 1.13 t0.41 0.83 z M58.492 8.82 q0 -0.56 -0.21 -1.02 t-0.57 -0.8 t-0.85 -0.53 t-1.05 -0.19 l-2.24 0 l0 4.98 l2.24 0 q0.56 0 1.05 -0.17 t0.85 -0.49 t0.57 -0.77 t0.21 -1.01 z M86.508 15.8 q0 0.9 -0.39 1.71 t-1.09 1.43 t-1.66 0.99 t-2.12 0.37 q-1.04 0 -1.87 -0.12 t-1.56 -0.38 t-1.4 -0.67 t-1.39 -0.99 l2.2 -2.22 q0.96 0.8 1.88 1.13 t2 0.33 q0.44 0 0.83 -0.13 t0.68 -0.35 t0.46 -0.52 t0.17 -0.66 q0 -0.38 -0.14 -0.68 t-0.5 -0.58 t-1 -0.57 t-1.64 -0.65 q-0.88 -0.32 -1.69 -0.73 t-1.42 -0.99 t-0.98 -1.36 t-0.37 -1.84 q0 -1.02 0.41 -1.88 t1.12 -1.47 t1.66 -0.95 t2.05 -0.34 q1.84 0 3.1 0.48 t2.24 1.4 l-2.16 2.18 q-0.6 -0.58 -1.34 -0.89 t-1.74 -0.31 q-0.46 0 -0.85 0.14 t-0.67 0.37 t-0.45 0.54 t-0.17 0.65 q0 0.38 0.16 0.69 t0.54 0.6 t1.01 0.58 t1.57 0.63 q1.2 0.42 2.06 0.92 t1.4 1.1 t0.8 1.35 t0.26 1.69 z M116.464 12 q0 1.72 -0.67 3.24 t-1.83 2.64 t-2.7 1.77 t-3.28 0.65 t-3.29 -0.65 t-2.71 -1.77 t-1.83 -2.63 t-0.67 -3.25 t0.67 -3.26 t1.83 -2.64 t2.71 -1.76 t3.29 -0.64 t3.28 0.64 t2.7 1.77 t1.83 2.64 t0.67 3.25 z M113.344 12 q0 -1.1 -0.42 -2.07 t-1.15 -1.7 t-1.71 -1.16 t-2.08 -0.43 q-1.12 0 -2.1 0.43 t-1.71 1.16 t-1.15 1.7 t-0.42 2.07 q0 1.08 0.42 2.06 t1.15 1.71 t1.71 1.16 t2.1 0.43 q1.1 0 2.08 -0.43 t1.71 -1.16 t1.15 -1.71 t0.42 -2.06 z M143.54 20 l-3.04 0 l-7.22 -11.22 l0 11.22 l-3.04 0 l0 -16 l3.48 0 l6.78 10.44 l0 -10.44 l3.04 0 l0 16 z M174.05599999999998 20 l-3.4 0 l-1.48 -3.2 l-7.76 0 l-1.5 3.2 l-3.4 0 l7.56 -16 l2.42 0 z M167.95599999999996 14.219999999999999 l-2.66 -5.76 l-2.7 5.76 l5.36 0 z M197.85199999999995 20 l-10.82 0 l0 -15.98 l3.16 0 l0 12.98 l7.66 0 l0 3 z M231.80399999999995 20 l-3.1 0 l0 -15.98 l3.1 0 l0 15.98 z M259.47999999999996 20 l-3.04 0 l-7.22 -11.22 l0 11.22 l-3.04 0 l0 -16 l3.48 0 l6.78 10.44 l0 -10.44 l3.04 0 l0 16 z M284.53599999999994 15.8 q0 0.9 -0.39 1.71 t-1.09 1.43 t-1.66 0.99 t-2.12 0.37 q-1.04 0 -1.87 -0.12 t-1.56 -0.38 t-1.4 -0.67 t-1.39 -0.99 l2.2 -2.22 q0.96 0.8 1.88 1.13 t2 0.33 q0.44 0 0.83 -0.13 t0.68 -0.35 t0.46 -0.52 t0.17 -0.66 q0 -0.38 -0.14 -0.68 t-0.5 -0.58 t-1 -0.57 t-1.64 -0.65 q-0.88 -0.32 -1.69 -0.73 t-1.42 -0.99 t-0.98 -1.36 t-0.37 -1.84 q0 -1.02 0.41 -1.88 t1.12 -1.47 t1.66 -0.95 t2.05 -0.34 q1.84 0 3.1 0.48 t2.24 1.4 l-2.16 2.18 q-0.6 -0.58 -1.34 -0.89 t-1.74 -0.31 q-0.46 0 -0.85 0.14 t-0.67 0.37 t-0.45 0.54 t-0.17 0.65 q0 0.38 0.16 0.69 t0.54 0.6 t1.01 0.58 t1.57 0.63 q1.2 0.42 2.06 0.92 t1.4 1.1 t0.8 1.35 t0.26 1.69 z M309.0919999999999 6.779999999999999 l-4.42 0 l0 13.22 l-3.14 0 l0 -13.22 l-4.42 0 l0 -2.76 l11.98 0 l0 2.76 z M336.0079999999999 20 l-3.4 0 l-1.48 -3.2 l-7.76 0 l-1.5 3.2 l-3.4 0 l7.56 -16 l2.42 0 z M329.9079999999999 14.219999999999999 l-2.66 -5.76 l-2.7 5.76 l5.36 0 z M362.2839999999999 20 l-3.04 0 l-7.22 -11.22 l0 11.22 l-3.04 0 l0 -16 l3.48 0 l6.78 10.44 l0 -10.44 l3.04 0 l0 16 z M391.2999999999999 17.12 q-1.2 1.46 -2.91 2.32 t-3.77 0.86 q-1.78 0 -3.34 -0.65 t-2.72 -1.77 t-1.83 -2.63 t-0.67 -3.25 t0.67 -3.25 t1.83 -2.64 t2.72 -1.77 t3.34 -0.64 q2.06 0 3.77 0.86 t2.85 2.24 l-2.14 2.2 q-0.74 -1.06 -1.91 -1.71 t-2.57 -0.65 q-1.12 0 -2.11 0.43 t-1.73 1.16 t-1.17 1.7 t-0.43 2.07 q0 1.08 0.43 2.05 t1.17 1.7 t1.73 1.16 t2.11 0.43 q1.48 0 2.62 -0.67 t1.9 -1.77 z M414.8359999999999 20 l-10.56 0 l0 -15.98 l10.56 0 l0 2.56 l-7.52 0 l0 3.82 l7.42 0 l0 2.5 l-7.42 0 l0 4.4 l7.52 0 l0 2.7 z M439.29199999999986 15.8 q0 0.9 -0.39 1.71 t-1.09 1.43 t-1.66 0.99 t-2.12 0.37 q-1.04 0 -1.87 -0.12 t-1.56 -0.38 t-1.4 -0.67 t-1.39 -0.99 l2.2 -2.22 q0.96 0.8 1.88 1.13 t2 0.33 q0.44 0 0.83 -0.13 t0.68 -0.35 t0.46 -0.52 t0.17 -0.66 q0 -0.38 -0.14 -0.68 t-0.5 -0.58 t-1 -0.57 t-1.64 -0.65 q-0.88 -0.32 -1.69 -0.73 t-1.42 -0.99 t-0.98 -1.36 t-0.37 -1.84 q0 -1.02 0.41 -1.88 t1.12 -1.47 t1.66 -0.95 t2.05 -0.34 q1.84 0 3.1 0.48 t2.24 1.4 l-2.16 2.18 q-0.6 -0.58 -1.34 -0.89 t-1.74 -0.31 q-0.46 0 -0.85 0.14 t-0.67 0.37 t-0.45 0.54 t-0.17 0.65 q0 0.38 0.16 0.69 t0.54 0.6 t1.01 0.58 t1.57 0.63 q1.2 0.42 2.06 0.92 t1.4 1.1 t0.8 1.35 t0.26 1.69 z M455.4479999999999 20 q0 0.48 -0.14 0.91 t-0.41 0.76 t-0.68 0.52 t-0.95 0.19 q-0.2 0 -0.39 -0.04 t-0.35 -0.08 l0 -0.22 q0.58 -0.1 0.94 -0.54 t0.36 -1.02 q0 -0.1 -0.02 -0.24 t-0.06 -0.24 l-1.28 0 l0 -2.98 l2.98 0 l0 2.98 z M497.57999999999987 15.8 q0 0.9 -0.39 1.71 t-1.09 1.43 t-1.66 0.99 t-2.12 0.37 q-1.04 0 -1.87 -0.12 t-1.56 -0.38 t-1.4 -0.67 t-1.39 -0.99 l2.2 -2.22 q0.96 0.8 1.88 1.13 t2 0.33 q0.44 0 0.83 -0.13 t0.68 -0.35 t0.46 -0.52 t0.17 -0.66 q0 -0.38 -0.14 -0.68 t-0.5 -0.58 t-1 -0.57 t-1.64 -0.65 q-0.88 -0.32 -1.69 -0.73 t-1.42 -0.99 t-0.98 -1.36 t-0.37 -1.84 q0 -1.02 0.41 -1.88 t1.12 -1.47 t1.66 -0.95 t2.05 -0.34 q1.84 0 3.1 0.48 t2.24 1.4 l-2.16 2.18 q-0.6 -0.58 -1.34 -0.89 t-1.74 -0.31 q-0.46 0 -0.85 0.14 t-0.67 0.37 t-0.45 0.54 t-0.17 0.65 q0 0.38 0.16 0.69 t0.54 0.6 t1.01 0.58 t1.57 0.63 q1.2 0.42 2.06 0.92 t1.4 1.1 t0.8 1.35 t0.26 1.69 z M514.256 20 l-3.1 0 l0 -15.98 l3.1 0 l0 15.98 z M544.5919999999999 20 l-3.04 0 l0 -10.68 l-5.04 8.5 l-4.84 -8.58 l0 10.76 l-3.04 0 l0 -16 l3.5 0 l4.44 7.94 l4.64 -7.94 l3.38 0 l0 16 z M570.1679999999999 9.38 q0 1.14 -0.43 2.13 t-1.17 1.72 t-1.74 1.14 t-2.12 0.41 l-2.64 0 l0 5.22 l-3.1 0 l0 -15.98 l5.74 0 q1.12 0 2.12 0.41 t1.74 1.13 t1.17 1.7 t0.43 2.12 z M567.088 9.34 q0 -0.62 -0.23 -1.16 t-0.63 -0.94 t-0.94 -0.64 t-1.16 -0.24 l-2.06 0 l0 6.04 l2.06 0 q0.62 0 1.16 -0.25 t0.94 -0.67 t0.63 -0.97 t0.23 -1.17 z M594.3639999999999 20 l-10.82 0 l0 -15.98 l3.16 0 l0 12.98 l7.66 0 l0 3 z M610.64 20 l-3.1 0 l0 -15.98 l3.1 0 l0 15.98 z M635.5759999999999 6.68 l-7.52 0 l0 3.72 l7.42 0 l0 2.52 l-7.42 0 l0 7.08 l-3.04 0 l0 -15.98 l10.56 0 l0 2.66 z M652.052 20 l-3.1 0 l0 -15.98 l3.1 0 l0 15.98 z M676.9879999999999 20 l-10.56 0 l0 -15.98 l10.56 0 l0 2.56 l-7.52 0 l0 3.82 l7.42 0 l0 2.5 l-7.42 0 l0 4.4 l7.52 0 l0 2.7 z M704.984 12 q0 1.66 -0.56 3.11 t-1.56 2.54 t-2.39 1.72 t-3.03 0.63 l-6.68 0 l0 -16 l6.68 0 q1.64 0 3.03 0.64 t2.39 1.72 t1.56 2.54 t0.56 3.1 z M701.8439999999999 11.92 q0.02 -1.12 -0.34 -2.12 t-1.04 -1.75 t-1.67 -1.18 t-2.23 -0.43 l-2.7 0 l0 10.92 l2.7 0 q1.22 0 2.19 -0.41 t1.65 -1.14 t1.05 -1.72 t0.39 -2.17 z"></path></g><g id="SvgjsG5009" featureKey="nameLeftFeature-0" transform="matrix(1.6602859249878261,0,0,1.6602859249878261,68.63856604818903,78.53254114921327)" fill="#01696e"><path d="M4.74 19.26 q-1.8 -1.02 -2.86 -2.77 t-1.06 -3.81 q0 -2.04 1.06 -3.79 t2.86 -2.77 t3.94 -1.02 t3.96 1.02 t2.88 2.77 t1.06 3.79 q0 2.06 -1.06 3.81 t-2.88 2.77 t-3.96 1.02 t-3.94 -1.02 z M6.32 8.63 q-1.08 0.65 -1.72 1.73 t-0.64 2.32 t0.64 2.33 t1.72 1.75 t2.36 0.66 t2.37 -0.66 t1.72 -1.75 t0.63 -2.33 t-0.63 -2.32 t-1.72 -1.73 t-2.37 -0.65 t-2.36 0.65 z M22.46 16.87 q1.42 0.57 2.6 0.57 q1.24 0 1.97 -0.48 t0.73 -1.14 q0 -0.54 -0.43 -0.88 t-1.09 -0.51 t-1.74 -0.37 q-1.44 -0.24 -2.64 -0.62 t-2.18 -1.32 t-0.98 -2.54 q0 -2.36 1.73 -3.39 t4.07 -1.03 q1.8 0 3.13 0.49 t2.65 1.47 l-1.76 2.4 q-0.98 -0.7 -2.04 -1.1 t-2.1 -0.4 q-0.92 0 -1.72 0.33 t-0.8 1.11 q0 0.48 0.41 0.77 t0.9 0.42 t1.59 0.37 l0.72 0.14 q1.66 0.32 2.75 0.71 t1.89 1.31 t0.8 2.56 q0 2.22 -1.57 3.38 t-4.25 1.16 q-3.92 0 -6.6 -2.28 l1.68 -2.42 q0.86 0.72 2.28 1.29 z M33.300000000000004 5.380000000000001 l6.04 0 q3.26 0 5.34 1.84 q1.12 0.98 1.7 2.37 t0.58 3.09 q0 1.66 -0.6 3.09 t-1.68 2.41 q-1 0.88 -2.37 1.35 t-2.97 0.47 l-6.04 0 l0 -14.62 z M39.34 17.259999999999998 q1.88 0 3.15 -0.98 t1.27 -3.58 t-1.28 -3.58 t-3.14 -0.98 l-2.88 0 l0 9.12 l2.88 0 z M52.739999999999995 19.5 q-1.48 -0.76 -2.29 -2.16 t-0.81 -3.26 l0 -8.68 l3.16 0 l0 8.68 q0 1.28 0.55 2.05 t1.32 1.09 t1.53 0.32 q0.74 0 1.51 -0.32 t1.31 -1.09 t0.54 -2.05 l0 -8.68 l3.16 0 l0 8.68 q0 1.86 -0.8 3.26 t-2.28 2.16 t-3.44 0.76 q-1.98 0 -3.46 -0.76 z"></path></g><g id="SvgjsG5010" featureKey="nameRightFeature-0" transform="matrix(1.651581944297323,0,0,1.651581944297323,180.51404138315218,78.57693145405514)" fill="#01696e"><path d="M7.5600000000000005 5.380000000000001 l6.04 0 q3.26 0 5.34 1.84 q1.12 0.98 1.7 2.37 t0.58 3.09 q0 1.66 -0.6 3.09 t-1.68 2.41 q-1 0.88 -2.37 1.35 t-2.97 0.47 l-6.04 0 l0 -14.62 z M13.6 17.259999999999998 q1.88 0 3.15 -0.98 t1.27 -3.58 t-1.28 -3.58 t-3.14 -0.98 l-2.88 0 l0 9.12 l2.88 0 z M26.4 11.38 l7 0 l0 2.76 l-7 0 l0 3.12 l7.92 0 l0 2.74 l-11.08 0 l0 -14.62 l11.08 0 l0 2.74 l-7.92 0 l0 3.26 z M43.18000000000001 20.36 l-7.38 -14.96 l3.48 0 l3.9 8.08 l3.92 -8.08 l3.5 0 z M55.400000000000006 11.38 l7 0 l0 2.76 l-7 0 l0 3.12 l7.92 0 l0 2.74 l-11.08 0 l0 -14.62 l11.08 0 l0 2.74 l-7.92 0 l0 3.26 z M77.08 20 l-10.84 0 l0 -14.62 l3.18 0 l0 11.88 l7.66 0 l0 2.74 z M81.34 19.26 q-1.8 -1.02 -2.86 -2.77 t-1.06 -3.81 q0 -2.04 1.06 -3.79 t2.86 -2.77 t3.94 -1.02 t3.96 1.02 t2.88 2.77 t1.06 3.79 q0 2.06 -1.06 3.81 t-2.88 2.77 t-3.96 1.02 t-3.94 -1.02 z M82.92000000000002 8.63 q-1.08 0.65 -1.72 1.73 t-0.64 2.32 t0.64 2.33 t1.72 1.75 t2.36 0.66 t2.37 -0.66 t1.72 -1.75 t0.63 -2.33 t-0.63 -2.32 t-1.72 -1.73 t-2.37 -0.65 t-2.36 0.65 z M104.83000000000001 6.08 q1.33 0.7 2.05 1.89 t0.72 2.65 t-0.67 2.62 t-2.01 1.83 t-3.24 0.67 l-2.76 0 l0 4.26 l-3.16 0 l0 -14.62 l5.94 0 q1.8 0 3.13 0.7 z M103.84000000000002 12.3 q0.58 -0.7 0.58 -1.68 q0 -0.64 -0.3 -1.21 t-0.89 -0.93 t-1.41 -0.36 l-2.9 0 l0 4.88 l3.22 0 q1.12 0 1.7 -0.7 z M112.62000000000002 11.38 l7 0 l0 2.76 l-7 0 l0 3.12 l7.92 0 l0 2.74 l-11.08 0 l0 -14.62 l11.08 0 l0 2.74 l-7.92 0 l0 3.26 z M123.48000000000002 20 l0 -14.62 l6.5 0 q1.56 0 2.76 0.64 t1.86 1.8 t0.66 2.64 q0 1.58 -0.8 2.82 t-2.18 1.82 q1.42 1.8 3.78 4.9 l-3.78 0 q-1.28 -1.6 -3.5 -4.56 l-2.16 0 l0 4.56 l-3.14 0 z M129.98000000000002 12.7 q0.82 0 1.48 -0.59 t0.66 -1.65 q0 -0.86 -0.46 -1.6 t-1.68 -0.74 l-3.36 0 l0 4.58 l3.36 0 z"></path></g>
			</g>
		</svg>
</file>

<file path="src/images/branding/Logo Files/For Web/svg/White logo - no background.svg">
<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" width="3126.5830786119295" height="978.4971371254286" viewBox="0 0 3126.5830786119295 978.4971371254286">
			
			<g transform="scale(6.329153930596472) translate(10, 10)">
				<defs id="SvgjsDefs5006"/><g id="SvgjsG5007" featureKey="pxMwYC-0" transform="matrix(0.7427063140258877,0,0,0.7427063140258877,200.36842195091538,-3.4908937760460197)" fill="#fff"> <path xmlns="http://www.w3.org/2000/svg" d="m44.723 5.1992c-4.3555 1.1367-7.9688 4.125-9.957 8.0664h7.0664c0.49219-2.8203 1.3789-5.8906 2.8906-8.0664zm-17.582 81.965c-0.47266-0.29297-1.0938-0.14844-1.3867 0.32031-0.29297 0.47266-0.14844 1.0938 0.32422 1.3867 14.082 8.7812 32 8.5469 45.871-0.59375 0.46484-0.30469 0.59375-0.92969 0.28906-1.3945-0.30469-0.46484-0.92969-0.59375-1.3945-0.28516-13.238 8.7109-30.266 8.9297-43.703 0.56641zm-3.3633-66.418c0.4375-0.33984 0.51953-0.97266 0.17969-1.4102-0.33984-0.44141-0.97266-0.51953-1.4141-0.17969-7.1719 5.5469-12.473 13.406-14.922 22.133-0.18359 0.64844 0.30859 1.2812 0.97266 1.2812 0.4375 0 0.84375-0.29297 0.96875-0.73437 2.3359-8.3164 7.3828-15.805 14.215-21.09zm65.898 21.258c-2.4375-9.293-8.0195-17.57-15.723-23.309-0.44531-0.32812-1.0742-0.23828-1.4062 0.20703-0.33203 0.44531-0.24219 1.0742 0.20703 1.4062 7.332 5.4688 12.652 13.355 14.973 22.207 0.14063 0.54297 0.70313 0.85938 1.2266 0.71484 0.53906-0.13672 0.85938-0.6875 0.72266-1.2266zm2.7383 37.371h-29.758v2.6602h29.762zm-1.875-15.289h-26.008v13.277h26.008zm-13.008-5.4375c-3.1406 0-6.1367 1.2539-8.3438 3.4258h16.695c-2.2109-2.1758-5.2031-3.4258-8.3516-3.4258zm-5.2891-7.3086c0 2.9219 2.3789 5.2969 5.3008 5.2969 2.9141-0.003907 5.2891-2.3789 5.2891-5.2969 0-2.918-2.375-5.293-5.293-5.293-2.9219 0-5.2969 2.375-5.2969 5.293zm-35.512-0.28516-4.1523 13.172h11.012c0.29688 0 0.58594 0.03125 0.86719 0.089844l4.1836-13.262zm-14.91 10.191 8.418 4.8594c0.15234 0.089843 0.32422 0.13281 0.50391 0.13281h12.844c1.2539 0 2.2734 1.0195 2.2734 2.2734 0 1.2539-1.0195 2.2734-2.2734 2.2734l-13.074 0.003906c-0.92188 0-1.5703-0.20312-1.7148-0.26953l-6.1133-3.5273c-0.66797-0.38281-1.5117 0.09375-1.5117 0.87109v14.172h-12.02v-18.223c0-1.4141 1.1523-2.5664 2.5703-2.5664zm0-7.8398c0-3.2109-2.6133-5.8203-5.8242-5.8203-3.2109 0-5.8203 2.6094-5.8203 5.8203s2.6094 5.8242 5.8203 5.8242c3.2109 0 5.8242-2.6094 5.8242-5.8242zm33.641-26.191c-0.48828 2.8047-1.3867 5.9062-2.8945 8.0664 4.3555-1.1367 7.9688-4.125 9.9609-8.0664zm-11.594 0h9.5586c-0.96484 5.2656-2.9492 8.5664-4.7773 8.5664-1.832 0-3.8125-3.3008-4.7812-8.5664zm-0.67578 5.0898c-0.57812-1.5-1.0312-3.2227-1.3594-5.0898h-7.0664c1.9883 3.9414 5.6016 6.9297 9.957 8.0664-0.5625-0.8125-1.0781-1.8047-1.5312-2.9766zm12.562-17.023c0.37891 3.207 0.37891 6.7148 0 9.9219h7.6133c1.0898-3.2227 1.0898-6.6992 0-9.9219zm-12.191 0c-0.39062 3.2031-0.39062 6.7188 0 9.9219h10.168c0.39453-3.1914 0.39453-6.7305 0-9.9219zm-2.3086 4.9609c0-1.7031 0.097656-3.3711 0.28516-4.9609h-7.6172c-1.0859 3.2227-1.0859 6.6992 0 9.9219h7.6172c-0.1875-1.5898-0.28516-3.2578-0.28516-4.9609zm12.848-12.066c0.57813 1.4961 1.0352 3.2227 1.3594 5.0898h7.0664c-1.9883-3.9414-5.6016-6.9297-9.9609-8.0664 0.56641 0.8125 1.082 1.8047 1.5352 2.9766zm-5.4531-3.4766c1.8281 0 3.8125 3.3008 4.7773 8.5664h-9.5586c0.96875-5.2656 2.9492-8.5664 4.7812-8.5664z" fill-rule="evenodd"/></g><g id="SvgjsG5008" featureKey="aAUSXE-0" transform="matrix(0.6738808125771399,0,0,0.6738808125771399,-1.0782092358571416,119.52011695807266)" fill="#fff"><path d="M12.8 9.38 q0 1.14 -0.43 2.13 t-1.17 1.72 t-1.74 1.14 t-2.12 0.41 l-2.64 0 l0 5.22 l-3.1 0 l0 -15.98 l5.74 0 q1.12 0 2.12 0.41 t1.74 1.13 t1.17 1.7 t0.43 2.12 z M9.72 9.34 q0 -0.62 -0.23 -1.16 t-0.63 -0.94 t-0.94 -0.64 t-1.16 -0.24 l-2.06 0 l0 6.04 l2.06 0 q0.62 0 1.16 -0.25 t0.94 -0.67 t0.63 -0.97 t0.23 -1.17 z M36.736000000000004 20 l-10.56 0 l0 -15.98 l10.56 0 l0 2.56 l-7.52 0 l0 3.82 l7.42 0 l0 2.5 l-7.42 0 l0 4.4 l7.52 0 l0 2.7 z M62.552 20 l-3.42 0 l-1.14 -3.64 q-0.18 -0.6 -0.45 -1.1 t-0.65 -0.86 t-0.91 -0.56 t-1.25 -0.2 l-1.16 0 l0 6.36 l-3.06 0 l0 -15.98 l6.32 -0.02 q1.02 0 1.9 0.35 t1.52 0.97 t1 1.46 t0.36 1.82 q0 0.7 -0.22 1.36 t-0.62 1.22 t-0.95 0.99 t-1.21 0.65 q0.76 0.28 1.24 0.81 t0.76 1.27 q0.14 0.34 0.26 0.68 t0.25 0.71 t0.28 0.8 t0.33 0.95 q0.22 0.66 0.41 1.13 t0.41 0.83 z M58.492 8.82 q0 -0.56 -0.21 -1.02 t-0.57 -0.8 t-0.85 -0.53 t-1.05 -0.19 l-2.24 0 l0 4.98 l2.24 0 q0.56 0 1.05 -0.17 t0.85 -0.49 t0.57 -0.77 t0.21 -1.01 z M86.508 15.8 q0 0.9 -0.39 1.71 t-1.09 1.43 t-1.66 0.99 t-2.12 0.37 q-1.04 0 -1.87 -0.12 t-1.56 -0.38 t-1.4 -0.67 t-1.39 -0.99 l2.2 -2.22 q0.96 0.8 1.88 1.13 t2 0.33 q0.44 0 0.83 -0.13 t0.68 -0.35 t0.46 -0.52 t0.17 -0.66 q0 -0.38 -0.14 -0.68 t-0.5 -0.58 t-1 -0.57 t-1.64 -0.65 q-0.88 -0.32 -1.69 -0.73 t-1.42 -0.99 t-0.98 -1.36 t-0.37 -1.84 q0 -1.02 0.41 -1.88 t1.12 -1.47 t1.66 -0.95 t2.05 -0.34 q1.84 0 3.1 0.48 t2.24 1.4 l-2.16 2.18 q-0.6 -0.58 -1.34 -0.89 t-1.74 -0.31 q-0.46 0 -0.85 0.14 t-0.67 0.37 t-0.45 0.54 t-0.17 0.65 q0 0.38 0.16 0.69 t0.54 0.6 t1.01 0.58 t1.57 0.63 q1.2 0.42 2.06 0.92 t1.4 1.1 t0.8 1.35 t0.26 1.69 z M116.464 12 q0 1.72 -0.67 3.24 t-1.83 2.64 t-2.7 1.77 t-3.28 0.65 t-3.29 -0.65 t-2.71 -1.77 t-1.83 -2.63 t-0.67 -3.25 t0.67 -3.26 t1.83 -2.64 t2.71 -1.76 t3.29 -0.64 t3.28 0.64 t2.7 1.77 t1.83 2.64 t0.67 3.25 z M113.344 12 q0 -1.1 -0.42 -2.07 t-1.15 -1.7 t-1.71 -1.16 t-2.08 -0.43 q-1.12 0 -2.1 0.43 t-1.71 1.16 t-1.15 1.7 t-0.42 2.07 q0 1.08 0.42 2.06 t1.15 1.71 t1.71 1.16 t2.1 0.43 q1.1 0 2.08 -0.43 t1.71 -1.16 t1.15 -1.71 t0.42 -2.06 z M143.54 20 l-3.04 0 l-7.22 -11.22 l0 11.22 l-3.04 0 l0 -16 l3.48 0 l6.78 10.44 l0 -10.44 l3.04 0 l0 16 z M174.05599999999998 20 l-3.4 0 l-1.48 -3.2 l-7.76 0 l-1.5 3.2 l-3.4 0 l7.56 -16 l2.42 0 z M167.95599999999996 14.219999999999999 l-2.66 -5.76 l-2.7 5.76 l5.36 0 z M197.85199999999995 20 l-10.82 0 l0 -15.98 l3.16 0 l0 12.98 l7.66 0 l0 3 z M231.80399999999995 20 l-3.1 0 l0 -15.98 l3.1 0 l0 15.98 z M259.47999999999996 20 l-3.04 0 l-7.22 -11.22 l0 11.22 l-3.04 0 l0 -16 l3.48 0 l6.78 10.44 l0 -10.44 l3.04 0 l0 16 z M284.53599999999994 15.8 q0 0.9 -0.39 1.71 t-1.09 1.43 t-1.66 0.99 t-2.12 0.37 q-1.04 0 -1.87 -0.12 t-1.56 -0.38 t-1.4 -0.67 t-1.39 -0.99 l2.2 -2.22 q0.96 0.8 1.88 1.13 t2 0.33 q0.44 0 0.83 -0.13 t0.68 -0.35 t0.46 -0.52 t0.17 -0.66 q0 -0.38 -0.14 -0.68 t-0.5 -0.58 t-1 -0.57 t-1.64 -0.65 q-0.88 -0.32 -1.69 -0.73 t-1.42 -0.99 t-0.98 -1.36 t-0.37 -1.84 q0 -1.02 0.41 -1.88 t1.12 -1.47 t1.66 -0.95 t2.05 -0.34 q1.84 0 3.1 0.48 t2.24 1.4 l-2.16 2.18 q-0.6 -0.58 -1.34 -0.89 t-1.74 -0.31 q-0.46 0 -0.85 0.14 t-0.67 0.37 t-0.45 0.54 t-0.17 0.65 q0 0.38 0.16 0.69 t0.54 0.6 t1.01 0.58 t1.57 0.63 q1.2 0.42 2.06 0.92 t1.4 1.1 t0.8 1.35 t0.26 1.69 z M309.0919999999999 6.779999999999999 l-4.42 0 l0 13.22 l-3.14 0 l0 -13.22 l-4.42 0 l0 -2.76 l11.98 0 l0 2.76 z M336.0079999999999 20 l-3.4 0 l-1.48 -3.2 l-7.76 0 l-1.5 3.2 l-3.4 0 l7.56 -16 l2.42 0 z M329.9079999999999 14.219999999999999 l-2.66 -5.76 l-2.7 5.76 l5.36 0 z M362.2839999999999 20 l-3.04 0 l-7.22 -11.22 l0 11.22 l-3.04 0 l0 -16 l3.48 0 l6.78 10.44 l0 -10.44 l3.04 0 l0 16 z M391.2999999999999 17.12 q-1.2 1.46 -2.91 2.32 t-3.77 0.86 q-1.78 0 -3.34 -0.65 t-2.72 -1.77 t-1.83 -2.63 t-0.67 -3.25 t0.67 -3.25 t1.83 -2.64 t2.72 -1.77 t3.34 -0.64 q2.06 0 3.77 0.86 t2.85 2.24 l-2.14 2.2 q-0.74 -1.06 -1.91 -1.71 t-2.57 -0.65 q-1.12 0 -2.11 0.43 t-1.73 1.16 t-1.17 1.7 t-0.43 2.07 q0 1.08 0.43 2.05 t1.17 1.7 t1.73 1.16 t2.11 0.43 q1.48 0 2.62 -0.67 t1.9 -1.77 z M414.8359999999999 20 l-10.56 0 l0 -15.98 l10.56 0 l0 2.56 l-7.52 0 l0 3.82 l7.42 0 l0 2.5 l-7.42 0 l0 4.4 l7.52 0 l0 2.7 z M439.29199999999986 15.8 q0 0.9 -0.39 1.71 t-1.09 1.43 t-1.66 0.99 t-2.12 0.37 q-1.04 0 -1.87 -0.12 t-1.56 -0.38 t-1.4 -0.67 t-1.39 -0.99 l2.2 -2.22 q0.96 0.8 1.88 1.13 t2 0.33 q0.44 0 0.83 -0.13 t0.68 -0.35 t0.46 -0.52 t0.17 -0.66 q0 -0.38 -0.14 -0.68 t-0.5 -0.58 t-1 -0.57 t-1.64 -0.65 q-0.88 -0.32 -1.69 -0.73 t-1.42 -0.99 t-0.98 -1.36 t-0.37 -1.84 q0 -1.02 0.41 -1.88 t1.12 -1.47 t1.66 -0.95 t2.05 -0.34 q1.84 0 3.1 0.48 t2.24 1.4 l-2.16 2.18 q-0.6 -0.58 -1.34 -0.89 t-1.74 -0.31 q-0.46 0 -0.85 0.14 t-0.67 0.37 t-0.45 0.54 t-0.17 0.65 q0 0.38 0.16 0.69 t0.54 0.6 t1.01 0.58 t1.57 0.63 q1.2 0.42 2.06 0.92 t1.4 1.1 t0.8 1.35 t0.26 1.69 z M455.4479999999999 20 q0 0.48 -0.14 0.91 t-0.41 0.76 t-0.68 0.52 t-0.95 0.19 q-0.2 0 -0.39 -0.04 t-0.35 -0.08 l0 -0.22 q0.58 -0.1 0.94 -0.54 t0.36 -1.02 q0 -0.1 -0.02 -0.24 t-0.06 -0.24 l-1.28 0 l0 -2.98 l2.98 0 l0 2.98 z M497.57999999999987 15.8 q0 0.9 -0.39 1.71 t-1.09 1.43 t-1.66 0.99 t-2.12 0.37 q-1.04 0 -1.87 -0.12 t-1.56 -0.38 t-1.4 -0.67 t-1.39 -0.99 l2.2 -2.22 q0.96 0.8 1.88 1.13 t2 0.33 q0.44 0 0.83 -0.13 t0.68 -0.35 t0.46 -0.52 t0.17 -0.66 q0 -0.38 -0.14 -0.68 t-0.5 -0.58 t-1 -0.57 t-1.64 -0.65 q-0.88 -0.32 -1.69 -0.73 t-1.42 -0.99 t-0.98 -1.36 t-0.37 -1.84 q0 -1.02 0.41 -1.88 t1.12 -1.47 t1.66 -0.95 t2.05 -0.34 q1.84 0 3.1 0.48 t2.24 1.4 l-2.16 2.18 q-0.6 -0.58 -1.34 -0.89 t-1.74 -0.31 q-0.46 0 -0.85 0.14 t-0.67 0.37 t-0.45 0.54 t-0.17 0.65 q0 0.38 0.16 0.69 t0.54 0.6 t1.01 0.58 t1.57 0.63 q1.2 0.42 2.06 0.92 t1.4 1.1 t0.8 1.35 t0.26 1.69 z M514.256 20 l-3.1 0 l0 -15.98 l3.1 0 l0 15.98 z M544.5919999999999 20 l-3.04 0 l0 -10.68 l-5.04 8.5 l-4.84 -8.58 l0 10.76 l-3.04 0 l0 -16 l3.5 0 l4.44 7.94 l4.64 -7.94 l3.38 0 l0 16 z M570.1679999999999 9.38 q0 1.14 -0.43 2.13 t-1.17 1.72 t-1.74 1.14 t-2.12 0.41 l-2.64 0 l0 5.22 l-3.1 0 l0 -15.98 l5.74 0 q1.12 0 2.12 0.41 t1.74 1.13 t1.17 1.7 t0.43 2.12 z M567.088 9.34 q0 -0.62 -0.23 -1.16 t-0.63 -0.94 t-0.94 -0.64 t-1.16 -0.24 l-2.06 0 l0 6.04 l2.06 0 q0.62 0 1.16 -0.25 t0.94 -0.67 t0.63 -0.97 t0.23 -1.17 z M594.3639999999999 20 l-10.82 0 l0 -15.98 l3.16 0 l0 12.98 l7.66 0 l0 3 z M610.64 20 l-3.1 0 l0 -15.98 l3.1 0 l0 15.98 z M635.5759999999999 6.68 l-7.52 0 l0 3.72 l7.42 0 l0 2.52 l-7.42 0 l0 7.08 l-3.04 0 l0 -15.98 l10.56 0 l0 2.66 z M652.052 20 l-3.1 0 l0 -15.98 l3.1 0 l0 15.98 z M676.9879999999999 20 l-10.56 0 l0 -15.98 l10.56 0 l0 2.56 l-7.52 0 l0 3.82 l7.42 0 l0 2.5 l-7.42 0 l0 4.4 l7.52 0 l0 2.7 z M704.984 12 q0 1.66 -0.56 3.11 t-1.56 2.54 t-2.39 1.72 t-3.03 0.63 l-6.68 0 l0 -16 l6.68 0 q1.64 0 3.03 0.64 t2.39 1.72 t1.56 2.54 t0.56 3.1 z M701.8439999999999 11.92 q0.02 -1.12 -0.34 -2.12 t-1.04 -1.75 t-1.67 -1.18 t-2.23 -0.43 l-2.7 0 l0 10.92 l2.7 0 q1.22 0 2.19 -0.41 t1.65 -1.14 t1.05 -1.72 t0.39 -2.17 z"/></g><g id="SvgjsG5009" featureKey="nameLeftFeature-0" transform="matrix(1.6602859249878261,0,0,1.6602859249878261,68.63856604818903,78.53254114921327)" fill="#fff"><path d="M4.74 19.26 q-1.8 -1.02 -2.86 -2.77 t-1.06 -3.81 q0 -2.04 1.06 -3.79 t2.86 -2.77 t3.94 -1.02 t3.96 1.02 t2.88 2.77 t1.06 3.79 q0 2.06 -1.06 3.81 t-2.88 2.77 t-3.96 1.02 t-3.94 -1.02 z M6.32 8.63 q-1.08 0.65 -1.72 1.73 t-0.64 2.32 t0.64 2.33 t1.72 1.75 t2.36 0.66 t2.37 -0.66 t1.72 -1.75 t0.63 -2.33 t-0.63 -2.32 t-1.72 -1.73 t-2.37 -0.65 t-2.36 0.65 z M22.46 16.87 q1.42 0.57 2.6 0.57 q1.24 0 1.97 -0.48 t0.73 -1.14 q0 -0.54 -0.43 -0.88 t-1.09 -0.51 t-1.74 -0.37 q-1.44 -0.24 -2.64 -0.62 t-2.18 -1.32 t-0.98 -2.54 q0 -2.36 1.73 -3.39 t4.07 -1.03 q1.8 0 3.13 0.49 t2.65 1.47 l-1.76 2.4 q-0.98 -0.7 -2.04 -1.1 t-2.1 -0.4 q-0.92 0 -1.72 0.33 t-0.8 1.11 q0 0.48 0.41 0.77 t0.9 0.42 t1.59 0.37 l0.72 0.14 q1.66 0.32 2.75 0.71 t1.89 1.31 t0.8 2.56 q0 2.22 -1.57 3.38 t-4.25 1.16 q-3.92 0 -6.6 -2.28 l1.68 -2.42 q0.86 0.72 2.28 1.29 z M33.300000000000004 5.380000000000001 l6.04 0 q3.26 0 5.34 1.84 q1.12 0.98 1.7 2.37 t0.58 3.09 q0 1.66 -0.6 3.09 t-1.68 2.41 q-1 0.88 -2.37 1.35 t-2.97 0.47 l-6.04 0 l0 -14.62 z M39.34 17.259999999999998 q1.88 0 3.15 -0.98 t1.27 -3.58 t-1.28 -3.58 t-3.14 -0.98 l-2.88 0 l0 9.12 l2.88 0 z M52.739999999999995 19.5 q-1.48 -0.76 -2.29 -2.16 t-0.81 -3.26 l0 -8.68 l3.16 0 l0 8.68 q0 1.28 0.55 2.05 t1.32 1.09 t1.53 0.32 q0.74 0 1.51 -0.32 t1.31 -1.09 t0.54 -2.05 l0 -8.68 l3.16 0 l0 8.68 q0 1.86 -0.8 3.26 t-2.28 2.16 t-3.44 0.76 q-1.98 0 -3.46 -0.76 z"/></g><g id="SvgjsG5010" featureKey="nameRightFeature-0" transform="matrix(1.651581944297323,0,0,1.651581944297323,180.51404138315218,78.57693145405514)" fill="#fff"><path d="M7.5600000000000005 5.380000000000001 l6.04 0 q3.26 0 5.34 1.84 q1.12 0.98 1.7 2.37 t0.58 3.09 q0 1.66 -0.6 3.09 t-1.68 2.41 q-1 0.88 -2.37 1.35 t-2.97 0.47 l-6.04 0 l0 -14.62 z M13.6 17.259999999999998 q1.88 0 3.15 -0.98 t1.27 -3.58 t-1.28 -3.58 t-3.14 -0.98 l-2.88 0 l0 9.12 l2.88 0 z M26.4 11.38 l7 0 l0 2.76 l-7 0 l0 3.12 l7.92 0 l0 2.74 l-11.08 0 l0 -14.62 l11.08 0 l0 2.74 l-7.92 0 l0 3.26 z M43.18000000000001 20.36 l-7.38 -14.96 l3.48 0 l3.9 8.08 l3.92 -8.08 l3.5 0 z M55.400000000000006 11.38 l7 0 l0 2.76 l-7 0 l0 3.12 l7.92 0 l0 2.74 l-11.08 0 l0 -14.62 l11.08 0 l0 2.74 l-7.92 0 l0 3.26 z M77.08 20 l-10.84 0 l0 -14.62 l3.18 0 l0 11.88 l7.66 0 l0 2.74 z M81.34 19.26 q-1.8 -1.02 -2.86 -2.77 t-1.06 -3.81 q0 -2.04 1.06 -3.79 t2.86 -2.77 t3.94 -1.02 t3.96 1.02 t2.88 2.77 t1.06 3.79 q0 2.06 -1.06 3.81 t-2.88 2.77 t-3.96 1.02 t-3.94 -1.02 z M82.92000000000002 8.63 q-1.08 0.65 -1.72 1.73 t-0.64 2.32 t0.64 2.33 t1.72 1.75 t2.36 0.66 t2.37 -0.66 t1.72 -1.75 t0.63 -2.33 t-0.63 -2.32 t-1.72 -1.73 t-2.37 -0.65 t-2.36 0.65 z M104.83000000000001 6.08 q1.33 0.7 2.05 1.89 t0.72 2.65 t-0.67 2.62 t-2.01 1.83 t-3.24 0.67 l-2.76 0 l0 4.26 l-3.16 0 l0 -14.62 l5.94 0 q1.8 0 3.13 0.7 z M103.84000000000002 12.3 q0.58 -0.7 0.58 -1.68 q0 -0.64 -0.3 -1.21 t-0.89 -0.93 t-1.41 -0.36 l-2.9 0 l0 4.88 l3.22 0 q1.12 0 1.7 -0.7 z M112.62000000000002 11.38 l7 0 l0 2.76 l-7 0 l0 3.12 l7.92 0 l0 2.74 l-11.08 0 l0 -14.62 l11.08 0 l0 2.74 l-7.92 0 l0 3.26 z M123.48000000000002 20 l0 -14.62 l6.5 0 q1.56 0 2.76 0.64 t1.86 1.8 t0.66 2.64 q0 1.58 -0.8 2.82 t-2.18 1.82 q1.42 1.8 3.78 4.9 l-3.78 0 q-1.28 -1.6 -3.5 -4.56 l-2.16 0 l0 4.56 l-3.14 0 z M129.98000000000002 12.7 q0.82 0 1.48 -0.59 t0.66 -1.65 q0 -0.86 -0.46 -1.6 t-1.68 -0.74 l-3.36 0 l0 4.58 l3.36 0 z"/></g>
			</g>
		</svg>
</file>

<file path="src/images/branding/guide.html">
<!DOCTYPE html/>
<html>

<head>
    <meta charset="utf-8">
    <title>
        Congratulations on your custom logo!
    </title>
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <style>
        @font-face {
            font-family: "Avenir W01";
            src:
                url("https://s3.ca-central-1.amazonaws.com/logojoy/dist/fonts/57bf7902-79ee-4b31-a327-1bbf59a3d155.eot?#iefix") format("eot"),
                url("https://s3.ca-central-1.amazonaws.com/logojoy/dist/fonts/b290e775-e0f9-4980-914b-a4c32a5e3e36.woff2") format("woff2"),
                url("https://s3.ca-central-1.amazonaws.com/logojoy/dist/fonts/4b978f72-bb48-46c3-909a-2a8cd2f8819c.woff") format("woff"),
                url("https://s3.ca-central-1.amazonaws.com/logojoy/dist/fonts/9bdf0737-f98c-477a-9365-ffc41b9d1285.ttf") format("truetype"),
                url("https://s3.ca-central-1.amazonaws.com/logojoy/dist/fonts/15281d0d-e3c2-46e1-94db-cb681e00bfaa.svg#15281d0d-e3c2-46e1-94db-cb681e00bfaa") format("svg");
            font-weight: 400;
            font-style: normal;
        }

        * {
            box-sizing: border-box;
        }

        body {
            background-color: #f8f8f8;
            font-family: "Avenir W01", sans;
            font-size: 1.4rem;
            line-height: 2.5rem;
            color: #222;
            margin: 0;
        }

        article {
            width: 100%;
            max-width: 70rem;
            padding: 100px;
            margin: 40px auto  75px;
            background-color: #fff;
            box-shadow: #c0c0c0 5px 0px 35px -8px;
        }
        h1, h2, h3 {
            margin-top: 3rem;
            margin-bottom: 0;
        }
        h3 {
            font-size: 1.4rem;
        }
        p {
            margin-top: .75rem;
            margin-bottom: .25rem;
        }
        hr {
            margin: 2rem auto;
            height: 3px;
            background-color: #f0f0f0;
            border: 0;
        }
        svg {
            width: 10em;
            height: auto;
            margin: 0 auto 40px;
            display: block;
        }
        h2 {
            color: #4f6df5;
        }
        a {
            color: #4f6df5;
        }
        .fonts_colors {
            display: flex;
            justify-content: center;
            align-items: center;
        }
        .fonts_colors > div {
            flex:1 1 50%;
        }

        .font {
            display: block;
        }

        .swatch {
            border: 1px solid rgba(0,0,0,.3);
            border-radius: 4px;
            height: 2rem;
            width: 100%;
            display: block;
            margin-bottom: .5rem;
        }
        .colors_list {
            display: flex;
        }
        .color {
            margin: 1.5rem 3rem .5rem 0;
        }
        .color span {
            white-space: nowrap;
            display: block;
        }

    </style>


</head>

<body>
    <article>
        <h2>
            Using these files
        </h2>
        <p>
            Here’s a quick breakdown of these files:
        </p>
        <h3>
            Online
        </h3>
        <p>
            Logo for any digital purpose — from PowerPoint presentations to social media profiles
            — choose
            PNG files.
        </p>
        <h3>
            Print
        </h3>
        <p>
            Logo to be printed on business cards, brochures, clothing, and more, provide the
            printer with a PDF or EPS. If the print is more technical and requires edits from the
            printer, send vector files (SVG or EPS).
        </p>

        <h3>
            Sending to a Designer
        </h3>
        <p>
            If sending your logo to a designer to make changes, use SVG or EPS files unless
            they request otherwise.
        </p>

        <h3>
            Sharing
        </h3>
        <p>
            When sharing a logo file, send a PDF or PNG.
        </p>

        <h3>
            Resizing
        </h3>
        <p>
            Don’t see all of the file sizes you need? Use <a href="http://resizeimage.net/" target="_blank">this website</a> to adjust the file sizes of your PNG logo.
        </p>

        <h2>
            Your Logo Font and Colors
        </h2>
        <section class="fonts_colors">
            <div>
                <h3>Fonts</h3>
                <p class="font_list">
                    <span class="font">KeepCalm Medium</span><span class="font">HelveticaLTStd Roman</span><span class="font">Renogare</span><span class="font">Renogare</span>
                </p>
            </div>
            <div>
                <h3>Colors</h3>
                <div class="colors_list">
                    
<div class="color">
	<span class="swatch" style="background-color: 036A6E"></span>
	<span class="name">Mosque 1</span>
	<span class="hex">#036A6E</span>
</div>

                </div>
            </div>
        </section>
        <p>
            Enjoy!
        </p>
    </article>
</body>

</html>
</file>

<file path="src/javascripts/tablesort.js">
document$.subscribe(function() {
    var tables = document.querySelectorAll("article table:not([class])")
    tables.forEach(function(table) {
      new Tablesort(table)
    })
  })
</file>

<file path="src/stylesheets/extra.css">
:root > * {
    --md-typeset-a-color: #0199a1;
    --md-footer-fg-color: hsla(0, 0%, 100%, 1);
    --md-footer-fg-color--light: hsla(0, 0%, 100%, 0.7);
    --md-footer-fg-color--lighter: hsla(0, 0%, 100%, 0.3);
    --md-footer-bg-color: #01696e;
    --md-typeset-a-color: #0199a1;
}

[data-md-color-scheme="default"] {
    --md-primary-fg-color: #01696e;
    --md-accent-fg-color: #02c9d3;
    --md-footer-bg-color: #01696e;
}

[data-md-color-scheme="slate"] {
    --md-primary-fg-color: #01393b;
    --md-accent-fg-color: #02c9d3;
    --md-footer-bg-color: #01393b;
}

li.md-nav__item--section > label.md-nav__link > span.md-ellipsis {
    color: #01696e;
}

.md-footer-meta {
    background-color: var(--md-footer-bg-color);
}
</file>

<file path="src/advanced_vnet.md">
# Custom Networks

The provided custom deployment solution is a sample of how to leverage the virtual network (VNet) injection feature. This allows for the integration of the solution into a preexisting network design and ensuring the solution is on an internal network.


## Planning

Network planning is crucial when working with AKS on a prexexisting network solution.  This is an advanced topic and the assumption when bringing your own network is that it has been planned properly in advance.

Several resources exist that can help on planning networks for AKS and to understand the networking concepts for AKS.

- [AKS Network Topology and Connectivity](https://learn.microsoft.com/en-us/azure/cloud-adoption-framework/scenarios/app-platform/aks/network-topology-and-connectivity)

- [Azure CNI Advanced Networking](https://learn.microsoft.com/en-us/azure/aks/concepts-network#azure-cni-advanced-networking)

- [AKS Network Plugin Overviews](https://techcommunity.microsoft.com/t5/apps-on-azure-blog/how-to-choose-the-right-network-plugin-for-your-aks-cluster-a/ba-p/3969292)

__Default Solution__

The default solution implemented uses a simple Virtual Network with a kubernetes Azure CNI Overlay network configuration. One subnet which is provided to the AKS cluster is required, while additional subnets can be enabled for optional features.

- Virtual Network CIDR: `10.1.0.0/16`

- Cluster Nodes Subnet CIDR: `10.1.0.0/20`

- Bastion Subnet CIDR: `10.1.16.0/24`           _(Optional: Feature)_

- Virtual Machine Subnet CIDR: `10.1.18.0/24`   _(Optional: Feature)_

- Cluster Pod Subnet CIDR: `10.1.20.0/22`       _(Optional: Feature)_

- AKS Service CIDR: `172.16.0.0/16`

- AKS DNS Service IP: `172.16.0.10`

__Custom Solution__

This custom configuration tutorial will use a pre-created network along with a dedicated Pod Subnet which activates the [Azure CNI for dynamic IP allocation](https://learn.microsoft.com/en-us/azure/aks/configure-azure-cni-dynamic-ip-allocation) network configuration instead.

Things to considered when planning.

- Virtual network
  - A network can be as large as /8, but has a limit of 65,536 IP Address

- Subnet
  - A minimum subnet size: (number of nodes + 1) + ((number of nodes + 1) * maximum pods per node that you configure)
  - Example 8 node cluster: (9) + (9 * 30 (default, 30 pods per node)) = 270 (/23 or larger)

- Kubernetes Service Address 
  - Must be smaller then /12



__Network Details__

For this example the following network details will be used.

![[0]][0]

- Virtual Network CIDR: `172.20.0.0/22`

- Cluster Nodes Subnet CIDR: `172.20.0.0/24`

- Pod Subnet CIDR: `172.20.4.0/22`



## Prepare a virtual network

This section outlines the steps for manually creating a virtual network outside of the solution to simulate just the spoke network.

> It is important to ensure that the network exists in the same location that the solution will be deployed in.  For this example the location to be used will be the eastus2 region.

__Resource Group__

Use the following command to create a new resource group:


=== "Bash"

    ```bash
    NETWORK_GROUP='operations'
    AZURE_LOCATION='eastus2'

    # resource_group
    az group create --name $NETWORK_GROUP \
    --location $AZURE_LOCATION
    ```

=== "Powershell"

    ```pwsh
    $NETWORK_GROUP = 'operations'
    $AZURE_LOCATION = 'eastus2'

    # resource_group
    az group create --name $NETWORK_GROUP `
    --location $AZURE_LOCATION
    ```


__Network Security Group__

Network Security Groups (NSGs) are essential for securing virtual network resources. NSGs control inbound and outbound traffic to network interfaces (NIC), VMs, and subnets. 

Use the following commands set up an NSG with rules to allow HTTP and HTTPS traffic.

=== "Bash"

    ```shell
    NSG_NAME='custom-vnet-nsg'

    # network_security_group
    az network nsg create --name $NSG_NAME \
    --resource-group $NETWORK_GROUP \
    --location $AZURE_LOCATION


    # http_inbound_rule
    az network nsg rule create --name AllowHttpInbound \
    --nsg-name $NSG_NAME --resource-group $NETWORK_GROUP \
    --priority 200 --access Allow --direction Inbound \
    --protocol 'Tcp' --source-address-prefixes 'VirtualNetwork' --source-port-ranges '*' \
    --destination-address-prefixes '*' --destination-port-ranges '80'

    # https_inbound_rule
    az network nsg rule create --name AllowHttpsInbound \
    --nsg-name $NSG_NAME --resource-group $NETWORK_GROUP \
    --priority 210 --access Allow --direction Inbound \
    --protocol 'Tcp' --source-address-prefixes 'VirtualNetwork' --source-port-ranges '*' \
    --destination-address-prefixes '*' --destination-port-ranges '443'
    ```

=== "Powershell"

    ```shell
    $NSG_NAME = 'custom-vnet-nsg'

    # network_security_group
    az network nsg create --name $NSG_NAME `
    --resource-group $NETWORK_GROUP `
    --location $AZURE_LOCATION


    # http_inbound_rule
    az network nsg rule create --name AllowHttpInbound `
    --nsg-name $NSG_NAME --resource-group $NETWORK_GROUP `
    --priority 200 --access Allow --direction Inbound `
    --protocol 'Tcp' --source-address-prefixes 'VirtualNetwork' --source-port-ranges '*' `
    --destination-address-prefixes '*' --destination-port-ranges '80'

    # https_inbound_rule
    az network nsg rule create --name AllowHttpsInbound `
    --nsg-name $NSG_NAME --resource-group $NETWORK_GROUP `
    --priority 210 --access Allow --direction Inbound `
    --protocol 'Tcp' --source-address-prefixes 'VirtualNetwork' --source-port-ranges '*' `
    --destination-address-prefixes '*' --destination-port-ranges '443'
    ```

__Virtual Network__

The virtual network is a critical component that enables Azure resources like AKS to communicate effectively. This step involves setting up the required 'ClusterSubnet' and an optional 'PodSubnet'.

Use the following commands set up the network with a required subnet for the cluster and an optional subnet for the pods.

=== "Bash"

    ```shell
    NETWORK_NAME='custom-vnet'
    VNET_PREFIX='172.20.0.0/22'

    CLUSTER_SUBNET_NAME='cluster'
    CLUSTER_SUBNET_PREFIX='172.20.0.0/24'

    POD_SUBNET_NAME='pods'
    POD_SUBNET_PREFIX='172.20.1.0/24'

    # virtual_network
    az network vnet create --name $NETWORK_NAME \
    --resource-group $NETWORK_GROUP \
    --location $AZURE_LOCATION \
    --address-prefix $VNET_PREFIX

    # virtual_network_subnet_cluster
    az network vnet subnet create --name $CLUSTER_SUBNET_NAME \
    --resource-group $NETWORK_GROUP \
    --vnet-name $NETWORK_NAME \
    --address-prefix $CLUSTER_SUBNET_PREFIX \
    --network-security-group $NSG_NAME

    # virtual_network_subnet_pods
    az network vnet subnet create --name $POD_SUBNET_NAME \
    --resource-group $NETWORK_GROUP \
    --vnet-name $NETWORK_NAME \
    --address-prefix $POD_SUBNET_PREFIX \
    --network-security-group $NSG_NAME

    # managed_identity
    az identity create --name $NETWORK_NAME \
    --resource-group $NETWORK_GROUP \
    --location $AZURE_LOCATION

    # managed_identity_principal_id
    IDENTITY_PID=$(az identity show --name $NETWORK_NAME \
    --resource-group $NETWORK_GROUP \
    --query "principalId" --output tsv)

    # managed_identity_id
    NETWORK_IDENTITY=$(az identity show --name $NETWORK_NAME \
    --resource-group $NETWORK_GROUP \
    --query "id" --output tsv)

    # network_id
    NETWORK_ID=$(az network vnet show --name $NETWORK_NAME \
    --resource-group $NETWORK_GROUP \
    --query "id" -o tsv)

    # role_assignment
    az role assignment create --assignee $IDENTITY_PID \
    --role "Network Contributor" \
    --scope $NETWORK_ID
    ```

=== "Powershell"

    ```powershell
    $NETWORK_NAME = 'custom-vnet'
    $VNET_PREFIX = '172.20.0.0/22'

    $CLUSTER_SUBNET_NAME = 'cluster'
    $CLUSTER_SUBNET_PREFIX = '172.20.0.0/24'

    $POD_SUBNET_NAME = 'pods'
    $POD_SUBNET_PREFIX = '172.20.1.0/24'

    # virtual_network
    az network vnet create --name $NETWORK_NAME `
    --resource-group $NETWORK_GROUP `
    --location $AZURE_LOCATION `
    --address-prefix $VNET_PREFIX

    # virtual_network_subnet_cluster
    az network vnet subnet create --name $CLUSTER_SUBNET_NAME `
    --resource-group $NETWORK_GROUP `
    --vnet-name $NETWORK_NAME `
    --address-prefix $CLUSTER_SUBNET_PREFIX `
    --network-security-group $NSG_NAME

    # virtual_network_subnet_pods
    az network vnet subnet create --name $POD_SUBNET_NAME `
    --resource-group $NETWORK_GROUP `
    --vnet-name $NETWORK_NAME `
    --address-prefix $POD_SUBNET_PREFIX `
    --network-security-group $NSG_NAME

    # managed_identity
    az identity create --name $NETWORK_NAME `
    --resource-group $NETWORK_GROUP `
    --location $AZURE_LOCATION

    # managed_identity_principal_id
    $IDENTITY_PID = az identity show --name $NETWORK_NAME `
    --resource-group $NETWORK_GROUP `
    --query "principalId" --output tsv

    # managed_identity_id
    $NETWORK_IDENTITY = az identity show --name $NETWORK_NAME `
    --resource-group $NETWORK_GROUP `
    --query "id" --output tsv

    # network_id
    $NETWORK_ID = az network vnet show --name $NETWORK_NAME `
    --resource-group $NETWORK_GROUP `
    --query "id" -o tsv

    # role_assignment
    az role assignment create --assignee $IDENTITY_ID `
    --role "Network Contributor" `
    --scope $NETWORK_ID
    ```

## Initialize and Configure Solution

This section provides the steps to authenticate your session then initialize a custom environment using Azure Developer CLI (azd).


__Authenticate and Initialize__

First, authenticate your session and then initialize a custom environment:


=== "Bash"

    ```bash
    # authenticate_session
    azd auth login

    # create_new_environment
    azd env new custom
    ```

=== "Powershell"

    ```pwsh
    # authenticate_session
    azd auth login

    # create_new_environment
    azd env new custom
    ```



__Configure Environment Variables__

Set the necessary environment variables for your deployment:

=== "Bash"

    ```shell
    # define_application_id
    APP_NAME=<your_ad_application_name>
    azd env set AZURE_CLIENT_ID $(az ad app list --display-name $APP_NAME --query "[].appId" -otsv)

    # identify_software_repository
    azd env set SOFTWARE_REPOSITORY https://github.com/azure/osdu-developer
    azd env set SOFTWARE_BRANCH main

    # enable_feature_toggles
    azd env set ENABLE_POD_SUBNET true

    # define_network_configuration
    azd env set VIRTUAL_NETWORK_GROUP $NETWORK_GROUP
    azd env set VIRTUAL_NETWORK_NAME $NETWORK_NAME
    azd env set VIRTUAL_NETWORK_PREFIX $VNET_PREFIX
    azd env set AKS_SUBNET_NAME $CLUSTER_SUBNET_NAME
    azd env set AKS_SUBNET_PREFIX $CLUSTER_SUBNET_PREFIX
    azd env set POD_SUBNET_NAME $POD_SUBNET_NAME
    azd env set POD_SUBNET_PREFIX $POD_SUBNET_PREFIX
    azd env set VIRTUAL_NETWORK_IDENTITY $NETWORK_IDENTITY
    ```


=== "Powershell"

    ```shell
    # define_application_id
    $APP_NAME = '<your_ad_application_name>'
    azd env set AZURE_CLIENT_ID (az ad app list --display-name $APP_NAME --query "[].appId" -otsv)

    # identify_software_repository
    azd env set SOFTWARE_REPOSITORY 'https://github.com/azure/osdu-developer'
    azd env set SOFTWARE_BRANCH 'main'

    # enable_feature_toggles
    azd env set ENABLE_POD_SUBNET 'true'

    # define_network_configuration
    azd env set VIRTUAL_NETWORK_GROUP $NETWORK_GROUP
    azd env set VIRTUAL_NETWORK_NAME $NETWORK_NAME
    azd env set VIRTUAL_NETWORK_PREFIX $VNET_PREFIX
    azd env set AKS_SUBNET_NAME $CLUSTER_SUBNET_NAME
    azd env set AKS_SUBNET_PREFIX $CLUSTER_SUBNET_PREFIX
    azd env set POD_SUBNET_NAME $POD_SUBNET_NAME
    azd env set POD_SUBNET_PREFIX $POD_SUBNET_PREFIX
    azd env set VIRTUAL_NETWORK_IDENTITY $NETWORK_IDENTITY
    ```

__Start the Deployment__

Initiate the deployment using the following command:

=== "Bash"

    ```bash
    # provision_solution
    azd provision
    ```

=== "Powershell"

    ```shell
    # provision_solution
    azd provision
    ```

[0]: images/network.png "Network Diagram"
</file>

<file path="src/debugging_airflow.md">
# Airflow

Coming Soon
</file>

<file path="src/debugging_istio.md">
# Istio

Coming Soon
</file>

<file path="src/debugging_kibana.md">
# Kibana

Coming Soon
</file>

<file path="src/debugging_rest.md">
# REST Samples

The solution has an integrated capability for the immediate execution of Rest API's using visual studio code. This integration only occurs if the Azure Developer CLI installation process has been performed.

> Execution of `azd hooks run settings` is the command that configures the required integration for VSCode.

Execution of the REST Client Scripts requires installation of a [VS Code Extension](https://marketplace.visualstudio.com/items?itemName=humao.rest-client).

Locate the rest-scripts in the solution which holds a number of scripts that can be used to execute the API calls and sequence flows directly from within VSCode.  Each script typically has a sequence of API calls that can be executed from top to bottom to learn and understand the formats for calling the APIs or sequences necessary to execute to perform an action flow.

The following is an example of how to use these scripts.

![Rest API](./images/tutorial_click_11.png)
</file>

<file path="src/design_architecture.md">
# Architecture

Personal OSDU™ instances are built using principles from the Azure Well-Architected Framework which provide a set of best practices and design considerations for azure workloads.

??? Tip "Learning Opportunity"
    
    For a deeper understanding read about the
    [Azure Well-Architected Framework](https://learn.microsoft.com/en-us/azure/well-architected/).
    

#### IaC: Declarative Resource Definition

Infrastructure as Code (IaC) uses declarative definitions to specify the desired state of cloud resources. Bicep is a domain-specific language (DSL) used for deploying Azure resources declaratively. It simplifies authoring ARM templates and allows you to define the desired state of your Infrastructure as Code (IaC). Azure Resource Manager (ARM) processes the Bicep file to ensure the Azure environment matches the defined desired state, correcting any drift through redeployment.

??? Tip "Learning Opportunity"

    Understand Bicep development with the official [Azure Verified Modules](https://azure.github.io/Azure-Verified-Modules/).


#### GitOps: Declarative Configuration Management

[GitOps](https://opengitops.dev) a term introduced by [WeaveWorks](https://www.weave.works/blog/the-history-of-gitops_) uses declarative configurations like Kustomize configs, Helm charts to manage software. Instead of scripting everything manually, GitOps uses a set of declarative configuration files that define a software desired state.

GitOps uses versioned CI/CD on top of a declarative infrastructure, allowing developers to "[stop scripting and start shipping](https://twitter.com/kelseyhightower/status/953638870888849408)," as Kelsey Hightower put it. This declarative configuration is helpful to define the entire softwarestack as code and continuously deliver changes with confidence to environments.

??? Tip "Learning Opportunity"

    Dive Deeper into [GitOps for Azure Kubernetes Service](https://learn.microsoft.com/en-us/azure/architecture/example-scenario/gitops-aks/gitops-blueprint-aks).


## CLI Command Sequencing

The Azure Developer CLI (azd) provides a set of commands to provision and deploy resources to Azure. These commands offer the ability to include hooks to inject custom logic into the deployment process.  This custom logic is written with powershell scripts to ensure cross-platform compatability.

This sequence diagram illustrates the interactions within the Azure CLI developer command structures.

<!--- https://diagrams.helpful.dev/ --->

```mermaid
sequenceDiagram
    participant Azd as user
    participant Provision as command
    participant Azure as azure


    rect rgb(191, 223, 255)
    alt
    Note over Provision: featureCheck
    Note over Provision: credCheck
    end
    Azd->>+Provision: azd provision
    Provision->>Azure: arm deploy
    Provision-->>-Azd: complete
    alt
    Note over Provision: softwareCheck
    Note over Provision: entraAuth
    end
    end

    rect rgb(144,238,144)
    alt
    Note over Provision: firstUser
    Note over Provision: refreshToken
    end
    Azd->>Provision: azd deploy
    activate Provision
    Provision-->>Azd: complete
    deactivate Provision
    alt
    Note over Provision: settingsJson
    end
    end
```

## Azure Infrastructure Diagram

This diagram provides a broad visual representation of the infrastructure as deployed. It is intended to help illustrate the various components and interactions within Azure.

![[0]][0]

### Resource Catagories

<div class="grid cards" markdown>

-   :material-lan:{ .lg .middle } __Azure Virtual Network__

    ---

    Illustrate the default network design.

-   :material-kubernetes:{ .lg .middle } __Kubernetes Node Pools__

    ---

    Illustrate the design for the cluster nodepools.

-   :material-database:{ .lg .middle } __Storage Resources__

    ---

    Illustrate how Storage Accounts and Cosmos Databases connect to the network.

-   :material-server-network:{ .lg .middle } __Ingress Load Balancers__

    ---

    Illustrate how the Load Balancers created by Istio Gateways are available in the network.

</div>

## Software

This workspace utilizes a GitOps approach for efficient and reliable software management. This method leverages a Git repository as the source of truth for defining and updating software configurations and deployments within the infrastructure.

### GitOps Configuration

A GitOps configuration resides in this Git repository and uses a gitops repository pattern. This repository includes:

<div class="grid cards" markdown>

-   :material-file-cog:{ .lg .middle } __Configuration Files__

    ---

    YAML files defining the desired state of our components and applications.

-   :material-package-variant-closed:{ .lg .middle } __Charts__

    ---

    Helm charts used for defining, installing, and upgrading Kubernetes applications.

</div>

??? Tip "Learning Opportunity"

    Understand more about the [repo-per-team](https://fluxcd.io/flux/guides/repository-structure/#repo-per-team) pattern.

### GitOps Advantages

A GitOps approach simplifies the process of deploying and managing software, making it easier to maintain and update, as well as providing a configurable way of leveraging other software configurations by pointing to alternate repositories hosting other configurations. By leveraging this method, we ensure that our deployments can be extended to things that not only include the default software load.

<div class="grid cards" markdown>

-   :material-sync:{ .lg .middle } __Consistency and Standardization__

    ---

    Ensures consistent configurations across different environments.

-   :material-history:{ .lg .middle } __Audit Trails__

    ---

    Every change is recorded in Git, providing a clear audit trail.

-   :material-backup-restore:{ .lg .middle } __Rollbacks and Recovery__

    ---

    Easily revert to previous states if issues arise, enhancing system reliability.

-   :material-shield-check:{ .lg .middle } __Enhanced Security__

    ---

    Changes are reviewed through pull requests, increasing security and collaboration.

</div>


[0]: images/architecture.png "Architecture Diagram"
</file>

<file path="src/design_infrastructure.md">
# Infrastructure

The OSDU™ private instance design utilizes a stamp-based architecture, enabling independent deployment of stamps with varying configurations. This approach allows linear scaling to accommodate multiple deployments across tenants.

??? Tip "Learning Opportunity"

    For more information on the Deployment Stamp Pattern, refer to the [Azure Architecture Center](https://learn.microsoft.com/en-us/azure/architecture/patterns/deployment-stamp).

The Infrastructure as Code (IaC) implementation consists of a main bicep file with custom bicep pattern modules. These modules, referred to as `blades`, are organized based on logical groupings of resources. The IaC leverages Azure Verified Modules, which are versioned, reusable, microsoft supported modules that adhere to best practices for deploying specific Azure resources.

??? Tip "Learning Opportunity"
    For more details on Bicep Pattern Modules, consult the [Azure Verified Modules documentation](https://azure.github.io/Azure-Verified-Modules/indexes/bicep/bicep-pattern-modules/).

## Key Concepts

<div class="grid cards" markdown>

- :material-file-tree:{ .lg .middle } __Solution__: Entry point for infrastructure deployment
- :material-view-grid-outline:{ .lg .middle } __Blades__: Logical groupings of related resources
- :material-puzzle-outline:{ .lg .middle } __Modules__: Azure verified components for specific resources

</div>

```mermaid
graph TD
  Main("main.bicep")
  BladeNetwork("blade_network.bicep")
  BladeCommon("blade_common.bicep")
  BladeManage("blade_manage.bicep")
  BladePartition("blade_partition.bicep")
  BladeService("blade_service.bicep")
  
  Main-->BladeNetwork
  Main-->BladeCommon
  Main-->BladeManage
  Main-->BladePartition
  Main-->BladeService
```

## Main Solution

The `main.bicep` file orchestrates the entire infrastructure deployment by importing and calling other modules (blades) to create a complete stamp. Key components include:

### Parameters

User provided values for use during the deployment of the solution.  These values can define different configuraiton blocs for things like identity, network, cluster, software, and feature flags.


```javascript title="Sample Parameters"
@description('Use customized server types.')
param customVMSize string = ''

@allowed([
  'External'
  'Internal'
  'Both'
  ''
])
@description('Specify the Ingress type for the cluster.')
param ingressType string = 'External'

@description('Feature Flag: Enable Storage accounts public access.')
param enableBlobPublicAccess bool = false
```

### Variables

Declares internal configuration settings and logic decision drivers or naming conventions.

```javascript title="Sample Variables"
@description('Feature Flag: Enable Telemetry')
var enableTelemetry = false

@description('Feature Flag to Enable Private Link')
var enablePrivateLink = false

@description('Optional. Customer Managed Encryption Key.')
var cmekConfiguration = {
  kvUrl: ''
  keyName: ''
  identityId: ''
}
```

Configuration objects (constants) are frequentlydefined as variables for easy maintenance:

```javascript title="Sample Configuration Object"
var configuration = {
  name: 'main'
  displayName: 'Main Resources'
  logs: {
    sku: 'PerGB2018'
    retention: 30
  }
  partitions: [
    {
      name: 'opendes'
    }
  ]
}
```

### Resources

Deploys resources using a combination of approaches:

1. Direct resource declarations in the main Bicep file
2. Custom modules developed for specific functionalities
3. Versioned Bicep modules from the Azure Verified Modules (AVM) registry

This flexible approach allows for efficient resource management and deployment:

```javascript title="Sample Module"
module logAnalytics 'br/public:avm/res/operational-insights/workspace:0.3.4' = {
  name: '${configuration.name}-log-analytics'
  params: {
    name: rg_unique_id
    location: location
    enableTelemetry: enableTelemetry
  }
}
```

### Outputs

Exposes important information for use in the CLI environment:

```javascript title="Sample Output"
output logAnalyticsWorkspaceId string = logAnalytics.outputs.workspaceId
```

## Blades

Blades are organized to facilitate the logical understanding of the infrastructure components. Each blade is responsible for a specific aspect of the infrastructure and depend on other blades. Here's an overview of the blade structure:

<div class="grid cards" markdown>

- :material-lan:{ .lg .middle } __Network Blade__

    ---

    Manages all networking-related resources, including virtual networks, subnets, and network security groups.

- :material-share-variant:{ .lg .middle } __Common Blade__

    ---

    Deploys shared resources used across the infrastructure, such as Key Vault, Storage Accounts, and monitoring services.

- :material-desktop-tower-monitor:{ .lg .middle } __Manage Blade__

    ---

    Handles management-related resources like virtual machines and bastion hosts for secure remote access.

- :material-database:{ .lg .middle } __Partition Blade__

    ---

    Manages data partitioning resources, including storage accounts and databases for each partition.

- :material-kubernetes:{ .lg .middle } __Service Blade__

    ---

    Deploys service-specific resources like AKS clusters, container registries, and application gateways.

</div>


!!! abstract "Blade Dependencies"

    ```mermaid
    flowchart TD
        subgraph MainBicep ["main.bicep"]
            direction LR
            IdentityResources("identity_resources")
            MonitoringResources("monitoring_resources")
            IdentityResources --> MonitoringResources
        end
        direction TB
        MainBicep --> BladeNetwork("blade_network.bicep")
        BladeNetwork --> BladeCommon("blade_common.bicep")
        BladeCommon --> BladeManage("blade_manage.bicep")
        BladeCommon --> BladePartition("blade_partition.bicep")
        BladeCommon --> BladeService("blade_service.bicep")
        BladePartition --> BladeService
    ```

### Resources

Each blade is responsible for creating and managing specific Azure resources. Below is an overview of the primary resources deployed by each blade:


!!! abstract "Network Blade - blade_network.bicep"

    ```mermaid
    graph TD
        ConditionalNetwork["Network Resources: Conditional Deployments"]
        ClusterNSG["clusterNetworkSecurityGroup - !vnetInjection"]
        BastionNSG["bastionNetworkSecurityGroup - !vnetInjection and enableBastion"]
        MachineNSG["machineNetworkSecurityGroup - !vnetInjection and enableBastion"]
        Network["network - !vnetInjection"]
        CommonResources["Common Resources"]
        ConditionalNetwork -->|"!vnetInjection"| ClusterNSG
        ConditionalNetwork -->|"!vnetInjection and enableBastion"| BastionNSG
        ConditionalNetwork -->|"!vnetInjection and enableBastion"| MachineNSG
        ConditionalNetwork -->|"!vnetInjection"| Network
        ClusterNSG --> CommonResources
        BastionNSG --> CommonResources
        MachineNSG --> CommonResources
        Network --> CommonResources
    ```
!!! abstract "Common Blade - blade_common.bicep"

    ```mermaid
    graph TD
        CommonResources["Common Resources"]
        AppInsights["appInsights"]
        KeyVault["keyVault"]
        KeyVaultSecrets["keyVaultSecrets"]
        ScriptSshKey["scriptSshKey"]
        ScriptCertificates["scriptCertificates"]
        CommonStorage["commonStorage"]
        ScriptFileShares["scriptFileShares"]
        CommonDatabase["commonDatabase"]
        RedisCache["redisCache"]
        CommonResources --> RedisCache
        CommonResources --> AppInsights
        CommonResources --> KeyVault
        KeyVault --> KeyVaultSecrets
        KeyVault --> ScriptSshKey
        KeyVault --> ScriptCertificates
        KeyVault --> CommonStorage
        CommonStorage --> ScriptFileShares
        KeyVault --> CommonDatabase
    
    ``` 

!!! abstract "Manage Blade - blade_manage.bicep"

    ```mermaid
    graph TD    
        ManageResources["Manage Resources"]
        BastionHost["bastionHost - enableBastion"]
        VirtualMachine["virtualMachine - enableBastion"]
        ManageResources -->|"enableBastion"| BastionHost
        BastionHost --> |"enableBastion"| VirtualMachine
    ```

!!! abstract "Partition Blade - blade_partition.bicep"

    ```mermaid
    graph TD
        PartitionResources["Partition Resources"]
        PartitionStorage["partitionStorage"]
        PartitionDatabase["partitionDatabase"]
        PartitionServiceBus["partitionServiceBus"]
        BlobUpload["blobUpload"]
        PartitionSecrets["partitionSecrets"]
        PartitionResources --> PartitionStorage
        PartitionResources --> PartitionDatabase
        PartitionResources --> PartitionServiceBus
        PartitionStorage --> BlobUpload
        PartitionServiceBus --> PartitionSecrets   
    ```

!!! abstract "Service Blade - blade_service.bicep"

    ```mermaid
    graph TD
        ServiceResources["Service Resources"]
        ContainerRegistry["containerRegistry"]
        KubernetesCluster["kubernetesCluster"]
        NodePool1["nodePool1"]
        NodePool2["nodePool2"]
        NodePool3["nodePool3"]
        FederatedIdentities["federatedIdentities"]
        RbacVaultStorage["rbacVaultStorage"]
        RbacPartitionStorage["rbacPartitionStorage"]
        AppConfiguration["appConfiguration"]
        AppConfigMap["appConfigMap"]
        HelmAppConfigProvider["helmAppConfigProvider"]
        FluxConfiguration["fluxConfiguration"]
        Prometheus["prometheus"]
        Grafana["grafana"]
        DeploymentScript["scriptAppConfigAuth"]
        ServiceResources --> ContainerRegistry
        ServiceResources --> KubernetesCluster
        KubernetesCluster --> NodePool1
        KubernetesCluster --> NodePool2
        KubernetesCluster --> NodePool3
        KubernetesCluster --> FederatedIdentities
        FederatedIdentities --> RbacVaultStorage
        FederatedIdentities --> RbacPartitionStorage
        RbacVaultStorage --> AppConfiguration
        RbacPartitionStorage --> AppConfiguration
        KubernetesCluster --> AppConfigMap
        AppConfiguration --> FluxConfiguration
        NodePool1 --> FluxConfiguration
        NodePool2 --> FluxConfiguration
        NodePool3 --> FluxConfiguration
        AppConfigMap --> HelmAppConfigProvider
        HelmAppConfigProvider --> FluxConfiguration
        FluxConfiguration -->|"enableMonitoring"| Prometheus
        Prometheus -->|"enableMonitoring"| Grafana
        ServiceResources --> DeploymentScript  
    ```
</file>

<file path="src/design_platform.md">
# Platform

The OSDU™ private instance solution implements industry-leading best practices for security and operational excellence on Azure Kubernetes Service (AKS). These practices are aligned with Microsoft's Secure Future Initiative and are designed to provide a robust, secure, and efficient platform while maintaining developer productivity.

??? Tip "Learning Opportunity"
    For more details on Microsoft's security focus, refer to the 
    [Microsoft Secure Future Initiative](https://www.microsoft.com/security/business/secure-future-initiative).

This solution implements comprehensive best practices across security controls and operational excellence. The implemented controls and features help ensure:

- Strong security posture through infrastructure and application security controls
- Operational efficiency through automation and DevOps practices
- Reliable performance through proper scaling and maintenance procedures
- Simplified maintenance through automated updates and proper backup strategies

??? Tip "Learning Opportunity"
    For more details on Microsoft's Cluster Best Practices, refer to the 
    [AKS Best Practices](https://learn.microsoft.com/en-us/azure/aks/best-practices).

## Security Controls

### Infrastructure Security

<div class="grid cards" markdown>

-   :material-shield-check:{ .lg .middle } __Cluster Protection__

    ---

    - [x] [Microsoft Defender for Containers](https://learn.microsoft.com/en-us/azure/defender-for-cloud/defender-for-containers-introduction) 
    
        Comprehensive security monitoring and protection for containerized assets including clusters, nodes, workloads, registries and images.

    - [x] [Kubernetes RBAC and Microsoft Entra ID](https://learn.microsoft.com/en-us/azure/aks/concepts-identity) 
    
        Granular access control by granting users, groups, and service accounts only the minimum required permissions through role-based policies and enhanced Azure authentication.

    - [x] [Node Resource Group Lockdown](https://learn.microsoft.com/en-us/azure/aks/node-resource-group-lockdown)
    
        Prevent unauthorized changes to node resource group resources using NRGLockdownPreview feature.

</div>   

<div class="grid cards" markdown>

-   :material-linux:{ .lg .middle } __Node Security__

    ---

    - [x] [Azure Linux](https://learn.microsoft.com/en-us/azure/aks/use-azure-linux)
    
        Azure Linux Container Host is optimized for container workloads on AKS, based on Microsoft's CBL-Mariner Linux distribution.

    - [x] [Disable SSH Access](https://learn.microsoft.com/en-us/azure/aks/disable-ssh-access)
    
        Improve security by disabling SSH access to nodes at both cluster and node pool levels using DisableSSHPreview feature.

</div>   

<div class="grid cards" markdown>

-   :material-network:{ .lg .middle } __Network Security__

    ---

    - [x] [API VNet Integration](https://learn.microsoft.com/en-us/azure/aks/api-server-vnet-integration)
    
        Kubernetes API server projection into the VNET where AKS is deployed.

    - [x] [Private Cluster](https://learn.microsoft.com/en-us/azure/aks/private-clusters?tabs=default-basic-networking%2Cazure-portal)
    
        Enable private cluster mode providing public network access without exposure of the AKS API server to the internet.

    - [x] [CNI Overlay](https://learn.microsoft.com/en-us/azure/aks/azure-cni-overlay)
    
        Enhanced network security with overlay networking, providing logical separation between pod and node networks.

    - [x] [NAT Gateway](https://learn.microsoft.com/en-us/azure/aks/nat-gateway)
    
        Managed outbound internet connectivity with network isolation capabilities.

    - [x] [Service Mesh](https://learn.microsoft.com/en-us/azure/aks/istio-deploy-addon)
    
        Istio service mesh for secure service-to-service communication, traffic management, and observability.

</div>


### Application Security

<div class="grid cards" markdown>

-   :material-docker:{ .lg .middle } __Container Security__

    ---

    - [x] [Image Cleaner](https://learn.microsoft.com/en-us/azure/aks/image-cleaner)
    
        Automatic identification and removal of unused images to reduce vulnerability surface.

</div>

<div class="grid cards" markdown>

-   :material-shield-lock:{ .lg .middle } __Pod Security__

    ---

    - [x] [Workload Identity](https://learn.microsoft.com/en-us/azure/aks/workload-identity-overview)
    
        Enable pods to authenticate against Azure services using Microsoft Entra workload identities.

    - [x] [Secrets Management](https://learn.microsoft.com/en-us/azure/aks/csi-secrets-store-driver)
    
        Integrate Azure Key Vault with Secrets Store CSI Driver for secure runtime secrets management.

    - [x] [Policy Controls](https://learn.microsoft.com/en-us/azure/aks/policy-reference)
    
        Enforce Kubernetes best practices through Azure Policy deployment safeguards.

</div>

## Operational Excellence

### Automation & DevOps

<div class="grid cards" markdown>

-   :material-cog:{ .lg .middle } __Deployment & Operations__

    ---

    - [x] [GitOps](https://learn.microsoft.com/en-us/azure/azure-arc/kubernetes/tutorial-use-gitops-flux2)
    
        Git-based infrastructure and application deployment management.

    - [x] [Verified Modules](https://learn.microsoft.com/en-us/azure/verified-modules/overview)
    
        Pre-validated infrastructure modules for consistent and secure deployments.

    - [x] [App Configuration](https://learn.microsoft.com/en-us/azure/azure-app-configuration/overview)
    
        Managed service for feature flags and configuration management.

</div>

### Scalability & Performance

<div class="grid cards" markdown>

-   :material-speedometer:{ .lg .middle } __Performance & Scaling__

    ---

    - [x] [Node Auto Provisioning](https://learn.microsoft.com/en-us/azure/aks/cluster-node-auto-provisioning)
    
        Automatic node provisioning for optimal cluster sizing and cost efficiency.

    - [x] [KEDA](https://learn.microsoft.com/en-us/azure/aks/keda-about)
    
        Event-driven autoscaling for Kubernetes workloads.

    - [x] [Vertical Pod Autoscaler](https://learn.microsoft.com/en-us/azure/aks/vertical-pod-autoscaler)
    
        Automated resource allocation optimization for pods based on usage patterns.

</div>

### Maintenance & Updates

<div class="grid cards" markdown>

-   :material-update:{ .lg .middle } __System Updates__

    ---

    - [x] [Automatic Upgrades](https://learn.microsoft.com/en-us/azure/aks/auto-upgrade-cluster?tabs=azure-cli)
    
        Stay current on new features and bug fixes with automated Kubernetes version upgrades.

    - [x] [Node OS Updates](https://learn.microsoft.com/en-us/azure/aks/node-updates-kured)
    
        Linux nodes in AKS get security patches through their distro update channel nightly.

</div>
</file>

<file path="src/design_software.md">
# Software

The OSDU™ private instance design utilizes a stamp-based pattern for software deployment, complementing the infrastructure design. This approach enables adheres to the principles of independent deployment of stamps with varying software configurations.

## Key Concepts

<div class="grid cards" markdown>

- :material-view-grid-outline:{ .lg .middle } __Stamp__: A complete, independent softwaredeployment of the OSDU platform
- :material-puzzle-outline:{ .lg .middle } __Components__: Middleware layers providing essential services to support OSDU Services
- :material-application-brackets:{ .lg .middle } __Applications__: OSDU platform services organized into logical groups of capabilities

</div>

## Software Layout

In our software architecture design, we define three primary software Kustomizations that describe the **stamp**. A Kustomization is a Flux resource representing a set of defined manifests that Flux should reconcile to the cluster, with dependencies between them.

```mermaid
flowchart TD
  FluxSystemComponents("flux-system-components")
  FluxSystemApplications("flux-system-applications")
  FluxSystemExperimental("flux-system-experimental")
  FluxSystemComponents-->FluxSystemApplications
  FluxSystemApplications-->FluxSystemExperimental
```

```bash
├── applications
│   └── kustomize.yaml
├── components
│   └── kustomize.yaml
└── experimental
    └── kustomize.yaml
```

## Components Structure

The Components directory is organized to facilitate the management of various middleware layers essential for our infrastructure. Components have dependency structures in the sequence of configuration, and a naming pattern is used to help facilitate understanding.

```mermaid
flowchart TD
  FluxSystemComponents("flux-system-components")
  Certs("component-certs")
  CertsCA("component-certs-ca")
  CertsCAIssuer("component-certs-issuer")
  OSDUSystem("component-osdu-system")
  Cache("component-cache")
  Database("component-database")
  Postgresql("component-postgresql")
  Airflow("component-airflow")
  Elastic("component-elastic")
  ElasticStorage("component-elastic-storage")
  ElasticSearch("component-elastic-search")
  Mesh("component-mesh")
  MeshIngress("component-mesh-ingress")
  Observability("component-observability")

  FluxSystemComponents-->Certs
  Certs-->CertsCA
  CertsCA-->CertsCAIssuer
  CertsCAIssuer-->OSDUSystem
  OSDUSystem-->Cache
  OSDUSystem-->Mesh
  Mesh-->MeshIngress
  MeshIngress-->Observability
  OSDUSystem-->Elastic
  Elastic-->ElasticStorage
  ElasticStorage-->ElasticSearch
  OSDUSystem-->Database
  Database-->Postgresql
  Postgresql-->Airflow
```

```bash
── components
    ├── airflow
    │   ├── namespace.yaml
    │   ├── pvc.yaml
    │   ├── release.yaml
    │   ├── source.yaml
    │   └── vault-secrets.yaml
    ├── certs
    │   ├── namespace.yaml
    │   ├── release.yaml
    │   └── source.yaml
    ├── certs-ca
    │   └── certificate.yaml
    ├── certs-issuer
    │   └── issuer.yaml
    ├── database
    │   ├── namespace.yaml
    │   ├── postgresql.yaml
    │   └── vault-secrets.yaml
    ├── elastic-search
    │   ├── elastic-job.yaml
    │   ├── elastic-search.yaml
    │   ├── kibana.yaml
    │   ├── namespace.yaml
    │   └── vault-secrets.yaml
    ├── elastic-storage
    │   └── storage-class.yaml
    ├── mesh-ingress
    │   └── gateway.yaml
    ├── observability
    │   ├── grafana.yaml
    │   ├── jaeger.yaml
    │   ├── kiali.yaml
    │   ├── loki.yaml
    │   ├── prometheus.yaml
    │   └── subnet_monitoring.yaml
    └── osdu-system
        ├── airflow.yaml
        ├── cache.yaml
        ├── database.yaml
        ├── elastic.yaml
        ├── mesh.yaml
        ├── namespace.yaml
        └── reloader.yaml
```

## Applications Structure

The Applications directory is organized to facilitate the management of applications that are installed in the platform. 

```mermaid
flowchart TD
  FluxSystemApplications("flux-system-applications")
  Podinfo("application-podinfo")
  OSDUCore("application-osdu-core")
  OSDUReference("application-osdu-reference")
  OSDUAuth("application-osdu-auth")

  FluxSystemApplications-->Podinfo
  FluxSystemApplications-->OSDUCore
  FluxSystemApplications-->OSDUReference
  FluxSystemApplications-->OSDUAuth
```

```bash
── applications
│   ├── osdu-auth
│   │   ├── namespace.yaml
│   │   └── release.yaml
│   ├── osdu-core
│   │   ├── README.md
│   │   ├── base.yaml
│   │   ├── entitlements.yaml
│   │   ├── file.yaml
│   │   ├── indexer.yaml
│   │   ├── legal.yaml
│   │   ├── namespace.yaml
│   │   ├── partition.yaml
│   │   ├── schema.yaml
│   │   ├── search.yaml
│   │   ├── storage.yaml
│   │   └── user-init.yaml
│   ├── osdu-reference
│   │   ├── base.yaml
│   │   ├── crs-catalog.yaml
│   │   ├── crs-conversion.yaml
│   │   ├── namespace.yaml
│   │   └── unit.yaml
│   └── podinfo
│       ├── ingress.yaml
│       ├── namespace.yaml
│       ├── release.yaml
│       └── source.yaml
```

## OSDU Core Structure

The OSDU Core application is organized to facilitate the management of the OSDU core platform services. Below is the layout:

```mermaid
flowchart TD
  base("base")
  partition("partition")
  partition_init("partition-init")
  entitlements("entitlements")
  entitlements_init("entitlements-init")
  legal("legal")
  indexer("indexer")
  indexer_queue("indexer-queue")
  user_init("user-init")
  schema("schema")
  schema_init("schema-init")
  storage("storage")
  file("file")
  search("search")
  workflow("workflow")

  base-->partition
  partition-->entitlements
  partition-->partition_init
  entitlements-->entitlements_init
  entitlements_init-->user_init
  partition-->legal
  legal-->indexer
  legal-->indexer_queue
  legal-->schema
  legal-->workflow
  schema-->schema_init
  indexer_queue-->storage
  indexer_queue-->file
  indexer_queue-->search
```

```bash
── osdu-core
   ├── base.yaml
   ├── entitlements.yaml
   ├── file.yaml
   ├── indexer.yaml
   ├── legal.yaml
   ├── namespace.yaml
   ├── partition.yaml
   ├── schema.yaml
   ├── search.yaml
   ├── storage.yaml
   └── user-init.yaml
   └── workflow.yaml
```

## OSDU Reference Structure

The OSDU Reference application is organized to facilitate the management of the OSDU reference platform services. Below is the layout:

```mermaid
flowchart TD
  base("base")
  unit("unit")
  crs-catalog("crs-catalog")
  crs-conversion("crs-conversion")

  base-->unit
  base-->crs-catalog
  base-->crs-conversion
```

```bash
── osdu-reference
   ├── base.yaml
   ├── crs-catalog.yaml
   ├── crs-conversion.yaml
   ├── namespace.yaml
   └── unit.yaml
```


## Experimental Features

The Experimental directory is organized to facilitate the management of experimental features.

```mermaid
  flowchart TD
    FluxSystemExperimental("flux-system-experimental")
    ExperimentalBase("experimental-base")
    AdminUI("experimental-admin-ui")

    FluxSystemExperimental-->ExperimentalBase
    ExperimentalBase-->AdminUI
```

```bash
── experimental
   ├── admin-ui
   │   ├── README.md
   │   ├── ingress.yaml
   │   └── release.yaml
   └── experimental-base
       ├── namespace.yaml
       ├── osdu-base.yaml
       └── vault-secrets.yaml
```
</file>

<file path="src/experimental_adminui.md">
# Admin UI

Coming Soon
</file>

<file path="src/feature_flags.md">
# Configuration Flags

Feature flags are configuration settings used to modify the default behavior of an OSDU™ personal instance.

<div class="grid cards" markdown>

- :material-toggle-switch-outline: __Toggle__ alternate functionality
- :material-cloud-outline: __Deploy__  alternate infrastructure
- :material-cog-outline: __Override__ default settings
- :material-wrench-outline: __Configure__ custom software 

</div>


!!! warning "CLI Deployment Only"
    Feature flags are implemented as named environment variables which correspond to ARM template parameter objects and are set prior to provisioning.

=== "Command"
    
    ```bash
    azd env set <FLAG> <VALUE>
    ```

## Azure Region and Subscription

Azure subscriptions and region location are set interactively by default but can be directly specified.

| Feature Flag              | Description                                                                 |
|---------------------------|-----------------------------------------------------------------------------|
| AZURE_SUBSCRIPTION_ID    | Azure subscription ID for resource deployment                              |
| AZURE_LOCATION           | Azure location for resource deployment                                      |

## Microsoft Entra ID Application

Application registrations are created automatically with a naming convention of osdu-{environment}-{subscription} but can be manually created and provided.

| Feature Flag              | Description                                                                 |
|---------------------------|-----------------------------------------------------------------------------|
| AZURE_CLIENT_ID           | Use an existing Azure AD App Client ID                                      |
| AZURE_CLIENT_PRINCIPAL_OID| Skip Principal ID lookup and use provided.                                  |
| AZURE_TENANT_ID           | Skip Tenant ID lookup and use provided.                                     |


## Custom Infrastructure

Infrastructure customizations can be modified using the following feature flags.

| Feature Flag              | Description                                                                 |
|---------------------------|-----------------------------------------------------------------------------|
| CLUSTER_INGRESS           | Specifies the Ingress type for the cluster (External, Internal, or Both)    |
| VMSIZE_SYSTEM_POOL        | Overrides the default server for the system pool. (4x8 ARM)                 |
| VMSIZE_ZONE_POOL          | Overrides the default server for the zone pool. (2x8 ARM)                   |
| VMSIZE_USER_POOL          | Overrides the default server for the default pool. (4x8 INTEL)              |
| ENABLE_NODE_AUTO_PROVISIONING | Enables node auto provisioning (True by default)                        |
| ENABLE_PRIVATE_CLUSTER    | Enables private cluster (False by default)                                  |


## Custom Software

Software customizations can be modified using the following feature flags.

| Feature Flag              | Description                                                                 |
|---------------------------|-----------------------------------------------------------------------------|
| ENABLE_SOFTWARE           | Disables loading of all software when set to false (True by default)        |
| ENABLE_PRIVATE_SOFTWARE   | Software from Azure Blob instead of Git Repositories (False by default)     |
| ENABLE_OSDU_CORE          | Disables loading of the osdu core services (True by default)                |
| ENABLE_OSDU_REFERENCE     | Disables loading of the osdu reference services (True by default)           |
| SOFTWARE_VERSION          | Sets the version (branch) of OSDU to be installed (release-0-27)            |
| SOFTWARE_REPOSITORY       | Customizes the repository location used for software definition             |
| SOFTWARE_BRANCH           | Customizes the branch used for software definition                          |


## Experimental Software

Experimental Software can be enabled using the following feature flags.

| Feature Flag              | Description                                                                 |
|---------------------------|-----------------------------------------------------------------------------|
| ENABLE_EXPERIMENTAL       | Enables loading of experimental software (False by default)                 |
| ENABLE_ADMIN_UI           | Enables loading of the Admin UI (False by default)                          |


## Enable VNET Injection

Modify the network configuration for use with a pre-existing virtual network.

| Feature Flag              | Description                                                                 |
|---------------------------|-----------------------------------------------------------------------------|
| VIRTUAL_NETWORK_GROUP     | Resource group of the existing virtual network                               |
| VIRTUAL_NETWORK_NAME      | Name of the existing virtual network                                         |
| VIRTUAL_NETWORK_PREFIX    | Address prefix of the existing virtual network                               |
| VIRTUAL_NETWORK_IDENTITY  | Managed identity associated with the existing virtual network                |
| AKS_SUBNET_NAME           | Name of the subnet for AKS within the existing virtual network               |
| AKS_SUBNET_PREFIX         | Address prefix for the AKS subnet                                            |
| POD_SUBNET_NAME           | Name of the subnet for Pods within the existing virtual network              |
| POD_SUBNET_PREFIX         | Address prefix for the Pod subnet                                            |
</file>

<file path="src/getting_started.md">
# Getting Started

Prerequisites and configuration steps for deploying personal OSDU™ instances in an Azure Subscription.

## Subscription Quota

It is recommended to have at least 50 vCPUs in a region for vCPU families along with the ability to deploy Cosmos DB instances which can be resource constrained in some regions.  Defaults can be increased by requesting a [quota increase](https://learn.microsoft.com/en-us/azure/quotas/regional-quota-requests).

!!! note "Ensure Sufficient Compute Quota per Region"

    | VM Types         | Compute Family Series           |
    |------------------|---------------------------------|
    | Standard ARM Generation       | Standard Dpdsv6 Family vCPUs    |
    | Burstable Intel Generation    | Standard Bsv2 Family vCPUS      |

    Use the following command to validate the availability of servers in a region:
    === "Bash"
        ```bash
        LOCATION="eastus2"        # ie: eastus2, centralus
        VM_PATTERN="Standard_D"   # ie: Standard_D, Standard_B

        az vm list-skus \
          --location "$LOCATION" \
          --query "[?resourceType=='virtualMachines'] \
          | [?contains(locationInfo[0].zones, '1') && contains(locationInfo[0].zones, '2') && contains(locationInfo[0].zones, '3')] \
          | [?restrictions[0]==null] \
          | [?starts_with(name, '$VM_PATTERN')].{ResourceType:resourceType, Locations:locations[0], Name:name, Zones:join(',', locationInfo[0].zones), Restrictions:join('; ', restrictions[*].reasonCode || ['None'])}" \
          -o table
        ```

    === "PowerShell"
        ```powershell
        $LOCATION="eastus2"       # ie: eastus2, centralus
        $VM_PATTERN="Standard_D"  # ie: Standard_D, Standard_B

        az vm list-skus `
          --location "$LOCATION" `
          --query "[?resourceType=='virtualMachines'] `
          | [?contains(locationInfo[0].zones, '1') && contains(locationInfo[0].zones, '2') && contains(locationInfo[0].zones, '3')] `
          | [?restrictions[0]==null] `
          | [?starts_with(name, '$VM_PATTERN')].{ResourceType:resourceType, Locations:locations[0], Name:name, Zones:join(',', locationInfo[0].zones), Restrictions:join('; ', restrictions[*].reasonCode || ['None'])}" `
          -o table
        ```


| Quota Name | Minimum Quantity |
|------------|------------------|
| Total Regional vCPUs          | 100 |
| Standard Dpdsv6 Family vCPUs  | 50  |
| Standard Bsv2 Family vCPUs    | 50  |


!!! tip "Available Cosmos DB Regions"
    Use the following command to determine the availability of Cosmos DB regions:

    === "Bash"
        ```bash
        az provider show --namespace Microsoft.DocumentDB \
          --query "resourceTypes[?resourceType=='databaseAccounts'].locations" \
          --output json
        ```

    === "PowerShell"
        ```powershell
        az provider show --namespace Microsoft.DocumentDB `
          --query "resourceTypes[?resourceType=='databaseAccounts'].locations" `
          --output json
        ```

## Preview Features

To use AKS Automatic in preview, you must register several feature flags. Register the following features using the [az feature register](https://learn.microsoft.com/en-us/cli/azure/feature?view=azure-cli-latest#az-feature-register) command.

=== "Command"
    ```bash
    az feature register --namespace Microsoft.ContainerService --name EnableAPIServerVnetIntegrationPreview
    az feature register --namespace Microsoft.ContainerService --name NRGLockdownPreview
    az feature register --namespace Microsoft.ContainerService --name SafeguardsPreview
    az feature register --namespace Microsoft.ContainerService --name NodeAutoProvisioningPreview
    az feature register --namespace Microsoft.ContainerService --name DisableSSHPreview
    az feature register --namespace Microsoft.ContainerService --name AutomaticSKUPreview
    ```

After the features are registered, refresh the registration of the Microsoft.ContainerService resource provider:

=== "Command"
    ```bash
    az provider register --namespace Microsoft.ContainerService
    ```

!!! tip "Verify Registration Status"
    Check the registration status using the following command. It may take a few minutes for the status to show *Registered*:

    === "Command"
        ```bash
        az feature show --namespace Microsoft.ContainerService --name AutomaticSKUPreview
        ```


## Resource Providers

The following Azure Resource Providers must be registered in your subscription.

!!! tip "Register Resource Providers"
    For instructions to register providers refer to the [Azure Resource Providers and Types documentation](https://learn.microsoft.com/en-us/azure/azure-resource-manager/management/resource-providers-and-types).

| Resource Provider                 | Description                                                                 |
|-----------------------------------|-----------------------------------------------------------------------------|
| Microsoft.AlertsManagement        | Manages alerts and notifications for Azure resources                        |
| Microsoft.AppConfiguration        | Manages application settings and feature flags                              |
| Microsoft.Authorization           | Manages access control and permissions for Azure resources                  |
| Microsoft.Cache                   | Manages Azure Cache for Redis instances                                     |
| Microsoft.CloudShell              | Provides an interactive command-line shell experience in the Azure portal   |
| Microsoft.Compute                 | Manages virtual machines, virtual machine scale sets, and related resources |
| Microsoft.ContainerRegistry       | Manages container registries for storing and managing container images      |
| Microsoft.ContainerService        | Manages Kubernetes clusters and related resources                           |
| Microsoft.Dashboard               | Creates and manages dashboards for visualizing Azure resources              |
| Microsoft.DocumentDB              | Manages Azure Cosmos DB databases and collections                           |
| Microsoft.Insights                | Provides monitoring and diagnostics for Azure resources                     |
| Microsoft.KeyVault                | Safeguards and manages cryptographic keys and secrets                       |
| Microsoft.KubernetesConfiguration | Manages Azure Kubernetes Service (AKS) clusters and related resources       |
| Microsoft.ManagedIdentity         | Provides an identity for Azure resources without the need for credentials   |
| Microsoft.Monitor                 | Provides monitoring and alerting capabilities for Azure resources           |
| Microsoft.Network                 | Manages virtual networks, network security groups, and related resources    |
| Microsoft.OperationalInsights     | Provides log analytics and monitoring for Azure resources                   |
| Microsoft.OperationsManagement    | Manages and monitors the health and performance of Azure resources          |
| Microsoft.Resources               | Manages Azure Resource Manager resources and resource groups                |
| Microsoft.ServiceBus              | Provides reliable messaging and publish/subscribe capabilities              |
| Microsoft.Storage                 | Manages Azure Storage accounts and resources                                |

## Required Role Assignments

To deploy and manage an OSDU™ personal instance, you need the following Azure role assignments:

!!! tip "Assigning Roles"
    For instructions on assigning roles, refer to the [Azure Role Assignments documentation](https://learn.microsoft.com/en-us/azure/role-based-access-control/role-assignments-steps).

| Role                                    | Purpose                                                                                   |
|-----------------------------------------|-------------------------------------------------------------------------------------------|
| Contributor                             | Manage all resources in the subscription, except for assigning roles or managing policies |
| Role Based Access Control Administrator | Manage access to Azure resources by assigning roles using Azure RBAC                      |
| Resource Policy Contributor             | Create and manage resource policies                                                       |

## Microsoft Entra App Registration

Register an application in Microsoft Entra ID.  This is required for OSDU™ personal instance integration with Microsoft Entra ID and delegate access with identity management.

These credentials will be used in your ARM template deployment to authenticate and authorize the deployment process.

!!! important
    Only required when using custom ARM template deployments or using CLI feature setting overrides.

!!! tip "Registering Applications"
    For instructions on registering applications, refer to the [Quickstart documentation](https://learn.microsoft.com/en-us/entra/identity-platform/quickstart-register-app?tabs=certificate).


| Name | Description/Value |
|------|-------------|
| Directory (tenant) ID | Unique identifier for the Microsoft Entra tenant |
| Application (client) ID | Unique identifier for the registered application |
| Object ID | Unique identifier for the application object in Microsoft Entra |
| Application (client) Secret | Confidential key used to authenticate the application |
| Single-page application redirect URI | http://localhost:8080 |

!!! warning "Secure Your Secret"
    The client secret is sensitive information. Make sure to store it securely and never commit it to version control systems.
</file>

<file path="src/index.md">
# Overview

OSDU Developer is an open-source solution designed to enable the creation of lightweight, personal instances of the [Open Subsurface Data Universe (OSDU™)](https://osduforum.org/osdu-data-platform-primer-1/) platform running on the Azure Public Cloud. These personal instances are tailored specifically for engineers and are integrated with the [Azure Developer CLI (AZD)](https://learn.microsoft.com/en-us/azure/developer/azure-developer-cli/overview) for deployment along with a customized environment setup. The solution allows engineers to explore, integrate services, author applications, or work directly with specific technology prior to the transition to a fully managed service. 

An alternate deployment approach uses a simplified [custom ARM template deployment](https://portal.azure.com/#create/Microsoft.Template/uri/https%3A%2F%2Fraw.githubusercontent.com%2FAzure%2Fosdu-developer%2Fmain%2Fazuredeploy.json). This method has a slightly more complicated implmentation of parameters with fewer integrations and automation as compared to the AZD deployment. As a result, it is less suited for a tight development loop but can be affective for quick personal deployments.

!!! Note
    Microsoft recommends using [Azure Data Manager for Energy (ADME)](https://azure.microsoft.com/en-us/products/data-manager-for-energy) for any production workloads and integration testing.

This solution aims to create an environment for efficient inner loop workflows, enabling rapid feedback for engineers. It balances user-friendliness with organizational compliance, offering a flexible pattern to work with for an in-depth exploration or expansion of OSDU™ capabilities. By providing enhanced transparency into the underlying components, it empowers developers to gain deeper insights and troubleshoot more effectively. Personal OSDU™ instances offer developers a unique advantage in early-stage development and integration, allowing for rapid prototyping and testing of OSDU™ based solutions. This approach aligns with modern software development practices, emphasizing the importance of rapid iteration and testing in application prototyping and cloud integration scenarios.

![[0]][0]

- **Observability**: Direct access to the underlying infrastructure and components
- **Faster feedback**: Accelerated development loops with established patterns for service development and rapid iteration
- **Compliant**: Ability to align with specific organizational standards and security requirements
- **Flexible**: Customized environments to suit diverse project needs

??? Tip "Learning Opportunity"
    Learn more about how inner and outer loop concepts can enhance developer productivity by viewing a discussion with Scott Hanselman, VP of Developer Community at Microsoft, on the Planet Argon Podcast: [The Fear Factor in Maintainable Software](https://www.youtube.com/watch?v=V5OhIjn7pJo).

## Personas

The OSDU™ platform serves a diverse range of professionals within the energy industry. Each persona may interacts with personal instances in different and unique ways, leveraging different capabilities and features to meet specific needs or challenges. 

<div class="grid cards" markdown>

-   :fontawesome-solid-code:{ .lg .middle } __Application Developers__

    ---

    Build applications leveraging APIs with the need to debug and interact efficiently.

-   :fontawesome-solid-chart-line:{ .lg .middle } __Data Scientists__

    ---

    Analyze data or explore integration options to derive insights using machine learning and statistical methods.

-   :fontawesome-solid-cloud:{ .lg .middle } __Cloud Architects__

    ---

    Explore alternate designs and implementations for the platform and integrate it with additional cloud services or AI services.

-   :fontawesome-solid-database:{ .lg .middle } __Data Engineers__

    ---

    Ensure proper data preparation and ingestion within the ecosystem to derive patterns for larger production datasets.

-   :fontawesome-brands-git-alt:{ .lg .middle } __DevOps Engineers__

    ---

    Streamline the deployment, monitoring, and maintenance of the platform and applications, ensuring efficient development and operations.


-   :fontawesome-solid-user-tie:{ .lg .middle } __Domain Experts__

    ---

    Utilize their specialized knowledge to develop domain-specific applications or services within the platform.

</div>



## Benefits

:material-eye-outline: **Transparent:** Interact directly with resources and software components within the solution to enhance observability through logs, dashboards, and source code debugging.

:material-cash: **Affordable:** Deploy with minimal resource consumption by omitting costly features like disaster recovery and backups, minimizing operational costs.

:material-swap-horizontal-bold: **Configurable:** The solution provides adaptable infrastructure to meet various organizational needs, including:

=== "Virtual Network Injection"

    Flexible network designs, including site-to-site VPN connections and integration with preexisting networks.

=== "Controlled Access"

    Public or private ingress, with the option to layer custom routing solutions for ingress, such as Azure Firewall or Azure Front Door.

=== "Software Isolation"

    Override and isolate software configurations as well as extend with custom configurations.


## Scenarios

OSDU™ private instances are designed to support a wide range of use cases, catering to various needs within a software development lifecycle. By providing a flexible and customizable environment, it enables developers, engineers, and other professionals to explore and leverage the OSDU™ platform in multiple ways. Here are several key scenarios that illustrate the practical applications of this approach:

<div class="grid cards" markdown>

-   :material-cog:{ .lg .middle } __Service Development__

    ---

    Build, test, debug, and work directly with OSDU™ services and experimental features.

-   :fontawesome-solid-laptop-code:{ .lg .middle } __Application Development__

    ---

    Streamlined development for applications before integration with a managed service offering.

-   :fontawesome-solid-lightbulb:{ .lg .middle } __Technology Innovation__

    ---

    Fork and extend projects to explore deeper integration with various technologies such as Fabric, Co-Pilot, and the Power Platform.

-   :material-school:{ .lg .middle } __Training and Onboarding__

    ---

    Train new employees on the OSDU™ platform, offering hands-on experience in a controlled environment.

</div>

## Feature List

| **Feature**            | **Description**                                                                                                    |
|------------------------|--------------------------------------------------------------------------------------------------------------------|
| **Data Partitions**     | Supports a single data partition, named "opendes," for managing and organizing data within the platform.           |
| **Schema Loading**      | Automatically loads Well-Known Schemas for efficient data management and validation.                               |
| **Software Locations**  | Utilizes Flux to direct software loading processes to private GitHub repositories and branches.                    |
| **Ingress**             | Supports both public-facing and private network access points.                                                     |
| **Network Flexibility** | Enables VNet injection and integration with existing networks, allowing for S2S VPN access.                        |
| **Mesh Observability**  | Provides Istio observability through Kiali dashboards to investigate latency, traffic, errors, and saturation.     |
| **Elastic Tools**       | Integrates with Elastic Kibana for advanced dev tools, search capabilities, and user management.                  |
| **Application Logging** | Integrated with Application Insights for detailed service-level logging and metrics monitoring.                    |
| **Initial User**        | Includes initial user setup and configuration for OpenID Connect access.                                           |
| **REST Scripts**        | Includes integrated sample REST scripts for easily executing API calls to test and explore functionality.          |
| **Token Tools**         | Integrates access token tools for easy retrieval of Bearer Access Tokens via Swagger pages and docs.               |



[0]: images/overview_1.png "Overview Diagram"
[1]: images/overview_2.png "Use Cases Diagram"
</file>

<file path="src/install_cli.md">
# Command Line (AZD)

??? info "_Article Audience_"
    :fontawesome-solid-cloud:{ .lg .middle } __Cloud Architects__: Working with Infrastructure and Software

    :fontawesome-solid-code:{ .lg .middle } __Application Developer__: Working with Services and Applications

    :fontawesome-brands-git-alt:{ .lg .middle } __DevOps Engineers__: Automation and Deployment Customizations

The Azure Developer CLI (azd) simplifies deployment and management of Azure resources through intuitive commands and built-in best practices. The CLI enables rapid provisioning combined with management tasks via hook-executed scripts. Built-in environment management capabilities support isolated environments with automatic environment variable configuration.

??? Tip "Learning Opportunity"
    Learn more about the [Azure Developer CLI (azd)](https://learn.microsoft.com/en-us/azure/developer/azure-developer-cli/overview?tabs=linux) and how to use it.

_Supports [Containers](https://code.visualstudio.com/docs/devcontainers/containers) as an alternative for local workstation._

[![Open in GitHub Codespaces](https://img.shields.io/static/v1?style=for-the-badge&label=GitHub+Codespaces&message=Open&color=brightgreen&logo=github)](https://github.com/codespaces/new?skip_quickstart=true&machine=basicLinux32gb&repo=742135816&ref=main&devcontainer_path=.devcontainer%2Fdevcontainer.json&geo=UsEast)

[![Open in Remote - Containers](https://img.shields.io/static/v1?style=for-the-badge&label=Remote%20-%20Containers&message=Open&color=blue&logo=visualstudiocode)](https://vscode.dev/redirect?url=vscode://ms-vscode-remote.remote-containers/cloneInVolume?url=https://github.com/Azure/osdu-developer)



## Instructions

1. Clone the repository to your file system.

    === "Command"

        ```powershell
        git clone https://github.com/Azure/osdu-developer.git
        ```

2. Authenticate and select the subscription.

    === "Command"

        ```powershell
        az login --scope https://graph.microsoft.com//.default
        azd auth login
        az account set --subscription <your_subscription_id>
        ```

3. Enable required features.

    === "Command"
    
        ```powershell
        azd config set alpha.resourceGroupDeployments on
        ```


4. Initialize the environment and enable any feature flags.

    === "Command"
    
        ```powershell
        azd init -e <your_env_name>
        azd env set <feature_flag> <value>
        ```

5. Deploy the solution.

    === "Command"
    
        ```powershell
        azd provision
        ```

    !!! Warning
        Deployment can exceed 1 hour. For timeouts execute `azd provision` again to continue.
</file>

<file path="src/install_portal.md">
# Portal Template (ARM)

??? info "_Article Audience_"
    :fontawesome-solid-user-tie:{ .lg .middle } __Domain Experts__: Working with OSDU services.

    :fontawesome-solid-chart-line:{ .lg .middle } __Data Scientists__: Working with data and machine learning.

    :fontawesome-solid-database:{ .lg .middle } __Data Engineers__: Working with data and databases.

The Azure Resource Manager (ARM) custom template deployment provides a simple way to provision the solution through the Azure Portal. This method uses a pre-configured ARM template that has been transpiled from Bicep, enabling rapid deployment through a guided portal experience.

??? Tip "Learning Opportunity"
    Learn more about [ARM Templates](https://learn.microsoft.com/en-us/azure/azure-resource-manager/templates/overview) and how they work in Azure.

!!! Warning
    The template leverages complex configuration objects that are built in a way that can be integrated later with an [Azure Managed Application](https://learn.microsoft.com/en-us/azure/azure-resource-manager/managed-applications/overview).  This can make configuration of feature flags more challenging.


## Instructions

1. Create a [Microsoft Entra Application Registration](https://learn.microsoft.com/en-us/entra/identity-platform/quickstart-register-app?tabs=certificate).

    === "Collected Values"
        - Application Client Id (clientId)
        - Application Client Secret (clientSecret)
        - Enterprise Application Object Id (principalId)


2. Open the custom ARM Template deployment.

    [![Deploy to Azure](https://aka.ms/deploytoazurebutton)](https://portal.azure.com/#create/Microsoft.Template/uri/https%3A%2F%2Fraw.githubusercontent.com%2FAzure%2Fosdu-developer%2Fmain%2Fazuredeploy.json)


3. Provide the required values.

    === "Required Values"
        - Email Address: _`Valid email address for the admin user`_
        - Application Client Id: _`Valid Client Id from the app registration`_
        - Application Client Secret: _`Valid Client Secret from the app registration`_
        - Application Client Principal OID: _`Valid Enterprise Application Object Id`_

4. Modify the optional parameters as desired.

    === "Optional Parameters"
        - Custom VM Size: _`Set Custom VM size cluster nodes.`_
        - Ingress Type: _`Switch: Ingress type to use.`_
        - Enable Blob Public Access: _`Feature Flag: Enable Blob Storage public access.`_
        - Enable Manage: _`Feature Flag: Deploy virtual machine with bastion.`_
        - Vm Admin Username: _`Set admin username for the virtual machine.`_
        - Enable Pod Subnet: _`Feature Flag: Enhanced AKS subnet configuration.`_
        - Vnet Configuration: _`Network configuration object.`_
        - Cluster Software: _`Software configuration object.`_
        - Experimental Software: _`Experimental Software configuration object.`_
        - Cluster Network: _`Cluster network configuration object.`_
        - Cluster Network Plugin: _`Switch: Network plugin to use.`_
        - Cluster Admin Ids: _`Set cluster admin user ids to enable RBAC.`_

4. Deploy the Solution.

    !!! Warning
        Deployment can exceed 1 hour. Includes both infrastructure and software deployment.

4. Configure Authentication.

    === "Steps"
        - Locate the ingress IP address in the AKS service
        - Add a redirect URI to your Entra application:
            - Format: `https://<ingress_ip>/auth/spa/`
            - Platform type: Single-page application (SPA)

5. Validate Access.

    === "Portal"
        - Check Successful deployment in the resource group deployments
        - Check Successful deployment in the AKS gitops status

    === "API Access"
        - Navigate to `https://<ingress_ip>/auth/spa/`
        - Click Authorize to receive an authorization code
        - Use Get Tokens to retrieve an access token
        - Test the token with service swagger pages
</file>

<file path="src/install_prerequisites.md">
# Prerequisites

??? info "_Article Audience_"
    :fontawesome-solid-code:{ .lg .middle } __Application Developer__: Working with Services and Applications

    :fontawesome-solid-cloud:{ .lg .middle } __Cloud Architects__: Working with Infrastructure and Software

    :fontawesome-brands-git-alt:{ .lg .middle } __DevOps Engineers__: Automation and Deployment Customizations

This guide outlines the software tools you need installed locally to work with the solution. 

#### Operating System Support

<div class="grid cards" markdown>

-   :fontawesome-brands-apple:{ .lg .middle } __macOS__

-   :fontawesome-brands-linux:{ .lg .middle } __Linux__

-   :fontawesome-brands-windows:{ .lg .middle } __Windows__

</div>




### Visual Studio Code
Visual Studio Code is a lightweight but powerful source code editor. Install it along with the REST Client Extension for testing and interacting with REST APIs.

:material-download:{ .lg .middle } [Download Visual Studio Code](https://code.visualstudio.com/download)

### PowerShell Core
PowerShell Core is a cross-platform task automation solution, useful for scripting and automation tasks in our solution.

:material-download:{ .lg .middle } [Download PowerShell Core](https://learn.microsoft.com/en-us/powershell/scripting/install/installing-powershell?view=powershell-7.4)

### Azure CLI
The Azure Command-Line Interface (CLI) is a set of commands used to create and manage Azure resources. It's essential for managing your Azure environment.

:material-download:{ .lg .middle } [Download Azure CLI](https://docs.microsoft.com/en-us/cli/azure/install-azure-cli)

### Azure Developer CLI
The Azure Developer CLI (azd) is a command-line tool designed to accelerate the time it takes to get started on Azure. It's particularly useful for Azure development tasks.

:material-download:{ .lg .middle } [Download Azure Developer CLI](https://learn.microsoft.com/en-us/azure/developer/azure-developer-cli/install-azd)

### Visual Studio Code Extensions

After installing Visual Studio Code, please install the following extensions to enahnce your development experience with working with this solution.

| Name | Recommendation | Description |
|------|----------------|-------------|
| [REST Client](https://marketplace.visualstudio.com/items?itemName=humao.rest-client) | Required | Allows you to send HTTP requests and view responses directly within VS Code |
| [Bicep](https://marketplace.visualstudio.com/items?itemName=ms-azuretools.vscode-bicep) | Required | Provides language support for Bicep, a domain-specific language for deploying Azure resources |
| [Python](https://marketplace.visualstudio.com/items?itemName=ms-python.python) | Optional | Adds rich support for the Python language, including features like IntelliSense and debugging |
| [Java Extension Pack](https://marketplace.visualstudio.com/items?itemName=vscjava.vscode-java-pack) | Optional | A collection of popular extensions for Java development in VS Code |
</file>

<file path="src/services_core_entitlements.md">
# Entitlements

The entitlement service can be run locally in editors with the following configuration.

```
Build and Run Configuration: SpringBoot
---------------------------------------
Java SDK:  java zulu-17
Module: entitlements-v2-azure
Class: org.opengroup.osdu.entitlements.v2.azure.EntitlementsV2Application
VM Options: -javaagent:/<your_full_path>/osdu-developer/src/applicationinsights-agent.jar
```

| Variable                             | Value                                          | Description                                |
|--------------------------------------|------------------------------------------------|--------------------------------------------|
| `APPINSIGHTS_KEY`                    | `<your_insights_key>`                          | Application Insights key                   |
| `KEYVAULT_URI`                       | `"https://${KV_NAME}.vault.azure.net"`         | Key Vault URI                              |
| `PARTITION_SERVICE_ENDPOINT`         | `http://${AZURE_HOST}/api/partition/v1`        | Partition service endpoint                 |
| `AAD_CLIENT_ID`                      | `${AZURE_CLIENT_ID}`                           | Active Directory client ID                 |
| `SERVER_PORT`                        | `8080`                                         | HTTP Server Port                           |
| `SPRING_APPLICATION_NAME`            | `entitlements`                                 | Spring application name                    |
| `LOGGING_LEVEL`                      | `INFO`                                         | Logging level for the Entitlements service |
| `SERVICE_DOMAIN_NAME`                | `dataservices.energy`                                  | Service domain name                        |
| `ROOT_DATA_GROUP_QUOTA`              | `5000`                                         | Root data group quota                      |
| `REDIS_TTL_SECONDS`                  | `1`                                            | Redis TTL in seconds                       |
| `AZURE_ISTIOAUTH_ENABLED`            | `true`                                         | Turn Istio auth on                         |
| `AZURE_ACTIVEDIRECTORY_SESSION_STATELESS` | `true`                                    | Enable stateless session for AD            |



### Testing

The entitlement service can be tested locally in IntelliJ with the following run configuration

```
Build and Run Configuration: JUnit
---------------------------------------
Java SDK:  Java zulu-17
Module: entitlementsv2-test-azure
All in package: org.opengroup.osdu.entitlements
```
</file>

<file path="src/services_core_file.md">
# File

The file service can be run locally in editors with the following configuration.

```
Build and Run Configuration: SpringBoot
---------------------------------------
Java SDK:  java zulu-17
Module: file-azure
Class: org.opengroup.osdu.file.provider.azure.FileAzureApplication
VM Options: -javaagent:/<your_full_path>/osdu-developer/src/applicationinsights-agent.jar
```

| Variable                             | Value                                          | Description                                |
|--------------------------------------|------------------------------------------------|--------------------------------------------|
| `APPINSIGHTS_KEY`                    | `<your_appinsights_key>`                       | Application Insights key                   |
| `KEYVAULT_URI`                       | `<your_keyvault_uri>`                          | Key Vault URI                              |
| `AZURE_HOST`                         | `<your_host_ip>`                               | Azure host IP                              |
| `PARTITION_SERVICE_ENDPOINT`         | `http://${AZURE_HOST}/api/partition/v1`        | Partition service endpoint                 |
| `OSDU_ENTITLEMENTS_URL`              | `http://${AZURE_HOST}/api/entitlements/v2`     | Entitlements service endpoint              |
| `AAD_CLIENT_ID`                      | `<your_aad_client_id>`                         | Active Directory client ID                 |
| `SPRING_APPLICATION_NAME`            | `file`                                         | Spring application name                    |
| `AZURE_PAAS_PODIDENTITY`             | `false`                                        | Azure PaaS pod identity                    |
| `AZURE_ISTIOAUTH_ENABLED`            | `true`                                         | Turn Istio auth on                         |
| `AZURE_PAAS_PODIDENTITY_ISENABLED`   | `false`                                        | Azure PaaS pod identity enabled            |
| `LOG_PREFIX`                         | `file`                                         | Log prefix                                 |
</file>

<file path="src/services_core_indexer.md">
# Indexer

The indexer service can be run locally in editors with the following configuration.

```
Build and Run Configuration: SpringBoot
---------------------------------------
Java SDK:  java zulu-17
Module: indexer-azure
Class: org.opengroup.osdu.indexer.azure.IndexerAzureApplication
VM Options: -javaagent:/<your_full_path>/osdu-developer/src/applicationinsights-agent.jar
```

| Variable                             | Value                                          | Description                                |
|--------------------------------------|------------------------------------------------|--------------------------------------------|
| `APPINSIGHTS_KEY`                    | `<your_appinsights_key>`                       | Application Insights key                   |
| `KEYVAULT_URI`                       | `<your_keyvault_uri>`                          | Key Vault URI                              |
| `AZURE_HOST`                         | `<your_host_ip>`                               | Azure host IP                              |
| `PARTITION_SERVICE_ENDPOINT`         | `http://${AZURE_HOST}/api/partition/v1`        | Partition service endpoint                 |
| `ENTITLEMENTS_SERVICE_ENDPOINT`      | `http://${AZURE_HOST}/api/entitlements/v2`     | Entitlements service endpoint              |
| `SCHEMA_SERVICE_URL`                 | `http://${AZURE_HOST}/api/schema-service/v1`   | Schema service endpoint                    |
| `STORAGE_SERVICE_URL`                | `http://${AZURE_HOST}/api/storage/v2`          | Storage service endpoint                   |
| `STORAGE_QUERY_RECORD_HOST`          | `http://${AZURE_HOST}/api/storage/v2/query/records`         | Storage service record query endpoint      |
| `STORAGE_QUERY_RECORD_FOR_CONVERSION_HOST` | `http://${AZURE_HOST}/api/storage/v2/query/records:batch`         | Storage service record batch query endpoint      |
| `AAD_CLIENT_ID`                      | `<your_aad_client_id>`                         | Active Directory client ID                 |
| `SPRING_APPLICATION_NAME`            | `indexer`                                      | Spring application name                    |
| `AZURE_PAAS_PODIDENTITY`             | `false`                                        | Azure PaaS pod identity                    |
| `AZURE_ISTIOAUTH_ENABLED`            | `true`                                         | Turn Istio auth on                         |
| `AZURE_PAAS_PODIDENTITY_ISENABLED`   | `false`                                        | Azure PaaS pod identity enabled            |
| `LOG_PREFIX`                         | `indexer`                                      | Log prefix                                 |
</file>

<file path="src/services_core_legal.md">
# Legal

The legal service can be run locally in editors with the following configuration.

```
Build and Run Configuration: SpringBoot
---------------------------------------
Java SDK:  java zulu-17
Module: legal-azure
Class: org.opengroup.osdu.legal.azure.LegalApplication
VM Options: -javaagent:/<your_full_path>/osdu-developer/src/applicationinsights-agent.jar
```

| Variable                             | Value                                          | Description                                |
|--------------------------------------|------------------------------------------------|--------------------------------------------|
| `KV_NAME`                            | `<your_keyvault_name>`                         | Key Vault name                             |
| `AZURE_TENANT_ID`                    | `<your_tenant_id>`                             | Azure tenant ID                            |
| `AZURE_CLIENT_ID`                    | `<your_client_id>`                             | Azure client ID                            |
| `AZURE_CLIENT_SECRET`                | `<your_client_secret>`                         | Azure client secret                        |
| `APPINSIGHTS_KEY`                    | `<your_insights_key>`                          | Application Insights key                   |
| `KEYVAULT_URI`                       | `"https://${KV_NAME}.vault.azure.net"`         | Key Vault URI                              |
| `AZURE_HOST`                         | `<your_host_ip>`                               | Azure host IP                              |
| `SPRING_APPLICATION_NAME`            | `legal`                                        | Spring application name                    |
| `AAD_CLIENT_ID`                      | `${AZURE_CLIENT_ID}`                           | Active Directory client ID                 |
| `REDIS_DATABASE`                     | `2`                                            | Redis database number                      |
| `SERVICEBUS_TOPIC_NAME`              | `legaltags`                                    | Service Bus topic name                     |
| `COSMOSDB_DATABASE`                  | `osdu-db`                                      | Cosmos DB database name                    |
| `ENTITLEMENTS_SERVICE_API_KEY`       | `OBSOLETE`                                     | Entitlements service API key               |
| `LEGAL_SERVICE_REGION`               | `us`                                           | Legal service region                       |
| `PARTITION_SERVICE_ENDPOINT`         | `http://${AZURE_HOST}/api/partition/v1`        | Partition service endpoint                 |
| `ENTITLEMENTS_SERVICE_ENDPOINT`      | `http://${AZURE_HOST}/api/entitlements/v2`     | Entitlements service endpoint              |
| `AZURE_ISTIO_AUTH_ENABLED`           | `true`                                         | Turn Istio auth on                         |
| `AZURE_PAAS_PODIDENTITY`             | `false`                                        | Azure PaaS pod identity                    |
| `AZURE_PAAS_PODIDENTITY_ISENABLED`   | `false`                                        | Azure PaaS pod identity enabled            |
| `AZURE_ACTIVEDIRECTORY_APP_ID_URI`   | `api://${AZURE_CLIENT_ID}`                     | Active Directory app ID URI                |
| `AZURE_ACTIVEDIRECTORY_SESSION_STATELESS` | `true`                                    | Enable stateless session for AD            |



### Testing

The legal service can be tested locally in IntelliJ with the following run configuration

```
Build and Run Configuration: JUnit
---------------------------------------
Java SDK:  Java zulu-17
Module: legal-test-azure
All in package: org.opengroup.osdu.legal
```
</file>

<file path="src/services_core_partition.md">
# Partition

The partition service can be run locally in editors with the following configuration.

```
Build and Run Configuration: SpringBoot
---------------------------------------
Java SDK:  java zulu-17
Module: partition-azure
Class: opengroup.osdu.partition.provider.azure.PartitionApplication
VM Options: -javaagent:/<your_full_path>/osdu-developer/src/applicationinsights-agent.jar
```

The following environment variables are necessary to run the Partition Service.


| Variable                             | Value                                          | Description                                |
|--------------------------------------|------------------------------------------------|--------------------------------------------|
| `APPINSIGHTS_KEY`                    | `<your_insights_key>`                          | Application Insights key                   |
| `KEYVAULT_URI`                       | `"https://<your_storage_name>.vault.azure.net"`| Key Vault URI                              |
| `AAD_CLIENT_ID`                      | `<your_client_id>`                             | Active Directory client ID                 |
| `SERVER_PORT`                        | `8080`                                         | HTTP Server Port                           |
| `SPRING_APPLICATION_NAME`            | `partition`                                    | Spring application name                    |
| `REDIS_DATABASE`                     | `1`                                            | Redis database number                      |
| `PARTITION_SPRING_LOGGING_LEVEL`     | `INFO`                                         | Logging level for the Partition service    |
| `AZURE_ISTIOAUTH_ENABLED`            | `false`                                        | Turn Istio auth off                        |
| `AZURE_ACTIVEDIRECTORY_APP_ID_URI`   | `api://<your_client_id>`                       | Active Directory app ID URI                |
| `AZURE_ACTIVEDIRECTORY_SESSION_STATELESS` | `true`                                    | Enable stateless session for AD            |


### Testing

The partition service can be tested locally in IntelliJ with the following run configuration

```
Build and Run Configuration: JUnit
---------------------------------------
Java SDK:  Java zulu-17
Module: partition-test-azure
All in package: org.opengroup.osdu.partition
```

| Variable                                | Value                                          | Description                                |
|-----------------------------------------|------------------------------------------------|--------------------------------------------|
| `ENVIRONMENT`                           | `<your_environment>`                           | local or cloud                             |
| `AZURE_AD_TENANT_ID`                    | `<your_tenant_id>`                             | Azure tenant ID                            |
| `INTEGRATION_TESTER`                    | `<your_client_id>`                             | Azure client ID                            |
| `AZURE_TESTER_SERVICEPRINCIPAL_SECRET`  | `<your_client_secret>`                         | Azure client secret                        |
| `AZURE_AD_APP_RESOURCE_ID`              | `<your_client_id>`                             | Azure client ID                            |
| `PARTITION_BASE_URL`                    | `http://localhost:8080/`                       | Service URL                                |
</file>

<file path="src/services_core_schema.md">
# Schema

The schema service can be run locally in editors with the following configuration.

```
Build and Run Configuration: SpringBoot
---------------------------------------
Java SDK:  java zulu-17
Module: os-schema-azure
Class: org.opengroup.osdu.schema.azure.SchemaApplication
VM Options: -javaagent:/<your_full_path>/osdu-developer/src/applicationinsights-agent.jar
```

| Variable                             | Value                                          | Description                                |
|--------------------------------------|------------------------------------------------|--------------------------------------------|
| `KV_NAME`                            | `<your_keyvault_name>`                         | Key Vault name                             |
| `STORAGE_ACCOUNT`                    | `<your_storage_account>`                       | Storage account name                       |
| `AZURE_TENANT_ID`                    | `<your_tenant_id>`                             | Azure tenant ID                            |
| `AZURE_CLIENT_ID`                    | `<your_client_id>`                             | Azure client ID                            |
| `AZURE_CLIENT_SECRET`                | `<your_client_secret>`                         | Azure client secret                        |
| `APPINSIGHTS_KEY`                    | `<your_insights_key>`                          | Application Insights key                   |
| `KEYVAULT_URI`                       | `"https://${KV_NAME}.vault.azure.net"`         | Key Vault URI                              |
| `AZURE_HOST`                         | `<your_host_ip>`                               | Azure host IP                              |
| `PARTITION_SERVICE_ENDPOINT`         | `http://${AZURE_HOST}/api/partition/v1`        | Partition service endpoint                 |
| `ENTITLEMENTS_SERVICE_ENDPOINT`      | `http://${AZURE_HOST}/api/entitlements/v2`     | Entitlements service endpoint              |
| `AAD_CLIENT_ID`                      | `${AZURE_CLIENT_ID}`                           | Active Directory client ID                 |
| `SPRING_APPLICATION_NAME`            | `schema`                                       | Spring application name                    |
| `LOG_PREFIX`                         | `schema`                                       | Log prefix                                 |
| `AZURE_STORAGE_ENABLE_HTTPS`         | `true`                                         | Enable HTTPS for Azure storage             |
| `COSMOSDB_DATABASE`                  | `osdu-db`                                      | Cosmos DB database name                    |
| `ENTITLEMENTS_SERVICE_API_KEY`       | `OBSOLETE`                                     | Entitlements service API key               |
| `SERVER_PORT`                        | `8080`                                         | Server port                                |
| `EVENT_GRID_ENABLED`                 | `false`                                        | Enable Event Grid                          |
| `EVENT_GRID_TOPIC`                   | `schemachangedtopic`                           | Event Grid topic                           |
| `SERVICE_BUS_ENABLED`                | `true`                                         | Enable Service Bus                         |
| `SERVICEBUS_TOPIC_NAME`              | `schemachangedtopic`                           | Service Bus topic name                     |
| `AZURE_PAAS_PODIDENTITY`             | `false`                                        | Azure PaaS pod identity                    |
| `AZURE_ISTIOAUTH_ENABLED`            | `true`                                         | Turn Istio auth on                         |
| `AZURE_PAAS_PODIDENTITY_ISENABLED`   | `false`                                        | Azure PaaS pod identity enabled            |
</file>

<file path="src/services_core_search.md">
# Search

The search service can be run locally in editors with the following configuration.

```
Build and Run Configuration: SpringBoot
---------------------------------------
Java SDK:  java zulu-17
Module: search-azure
Class: org.opengroup.osdu.search.provider.azure.SearchApplication
VM Options: -javaagent:/<your_full_path>/osdu-developer/src/applicationinsights-agent.jar
```

| Variable                             | Value                                          | Description                                |
|--------------------------------------|------------------------------------------------|--------------------------------------------|
| `APPINSIGHTS_KEY`                    | `<your_appinsights_key>`                       | Application Insights key                   |
| `KEYVAULT_URI`                       | `<your_keyvault_uri>`                          | Key Vault URI                              |
| `AZURE_HOST`                         | `<your_host_ip>`                               | Azure host IP                              |
| `PARTITION_SERVICE_ENDPOINT`         | `http://${AZURE_HOST}/api/partition/v1`        | Partition service endpoint                 |
| `ENTITLEMENTS_SERVICE_ENDPOINT`      | `http://${AZURE_HOST}/api/entitlements/v2`     | Entitlements service endpoint              |
| `POLICY_SERVICE_ENDPOINT`            | `http://${AZURE_HOST}/policy/api/policy/v1`    | Policy service endpoint                    |
| `AAD_CLIENT_ID`                      | `<your_aad_client_id>`                         | Active Directory client ID                 |
| `SPRING_APPLICATION_NAME`            | `search`                                       | Spring application name                    |
| `AZURE_PAAS_PODIDENTITY`             | `false`                                        | Azure PaaS pod identity                    |
| `AZURE_ISTIOAUTH_ENABLED`            | `true`                                         | Turn Istio auth on                         |
| `AZURE_PAAS_PODIDENTITY_ISENABLED`   | `false`                                        | Azure PaaS pod identity enabled            |
| `LOG_PREFIX`                         | `search`                                       | Log prefix                                 |
| `SEARCH_SERVICE_SPRING_LOGGING_LEVEL`| `DEBUG`                                        | Logging level for the Search service       |
| `ENTITLEMENTS_SERVICE_API_KEY`       | `OBSOLETE`                                     | API Key for Entitlements                   |
| `POLICY_SERVICE_ENABLED`             | `false`                                        | Enable Policy Service                      |
| `COSMOSDB_DATABASE`                  | `osdu-db`                                      | Cosmos DB database name                    |
| `REDIS_DATABASE`                     | `5`                                            | Redis database number                      |
| `ENVIRONMENT`                        | `evt`                                          | Environment                                |
| `ELASTIC_CACHE_EXPIRATION`           | `1`                                            | Elastic cache expiration                   |
| `MAX_CACHE_VALUE_SIZE`               | `60`                                           | Maximum cache value size                   |
| `PARTITION_SERVICE_ENDPOINT`         | `http://partition/api/partition/v1`            | Partition service endpoint                 |
| `ENTITLEMENTS_SERVICE_ENDPOINT`      | `http://entitlements/api/entitlements/v2`      | Entitlements service endpoint              |
| `POLICY_SERVICE_ENDPOINT`            | `http://policy/api/policy/v1`                  | Policy service endpoint                    |
</file>

<file path="src/services_core_storage.md">
# Storage

The storage service can be run locally in editors with the following configuration.

```
Build and Run Configuration: SpringBoot
---------------------------------------
Java SDK:  java zulu-17
Module: storage-azure
Class: org.opengroup.osdu.storage.provider.azure.StorageApplication
VM Options: -javaagent:/<your_full_path>/osdu-developer/src/applicationinsights-agent.jar
```

| Variable                             | Value                                          | Description                                |
|--------------------------------------|------------------------------------------------|--------------------------------------------|
| `APPINSIGHTS_KEY`                    | `<your_appinsights_key>`                       | Application Insights key                   |
| `KEYVAULT_URI`                       | `<your_keyvault_uri>`                          | Key Vault URI                              |
| `AZURE_HOST`                         | `<your_host_ip>`                               | Azure host IP                              |
| `PARTITION_SERVICE_ENDPOINT`         | `http://${AZURE_HOST}/api/partition/v1`        | Partition service endpoint                 |
| `ENTITLEMENTS_SERVICE_ENDPOINT`      | `http://${AZURE_HOST}/api/entitlements/v2`     | Entitlements service endpoint              |
| `LEGAL_SERVICE_ENDPOINT`             | `http://${AZURE_HOST}/api/legal/v1`            | Legal service endpoint                     |
| `AAD_CLIENT_ID`                      | `<your_aad_client_id>`                         | Active Directory client ID                 |
| `SPRING_APPLICATION_NAME`            | `storage`                                      | Spring application name                    |
| `AZURE_PAAS_PODIDENTITY`             | `false`                                        | Azure PaaS pod identity                    |
| `AZURE_ISTIOAUTH_ENABLED`            | `true`                                         | Turn Istio auth on                         |
| `AZURE_PAAS_PODIDENTITY_ISENABLED`   | `false`                                        | Azure PaaS pod identity enabled            |
| `LOG_PREFIX`                         | `storage`                                      | Log prefix                                 |
| `AZURE_STORAGE_ENABLE_HTTPS`         | `true`                                         | Enable HTTPS for Azure storage             |
| `COSMOSDB_DATABASE`                  | `osdu-db`                                      | Cosmos DB database name                    |
| `SERVER_PORT`                        | `8080`                                         | Server port                                |
| `SERVICEBUS_TOPIC_NAME`              | `recordstopic`                                 | Service Bus topic name                     |
| `SERVICEBUS_V2_TOPIC_NAME`           | `recordstopic-v2`                              | Service Bus topic name (version 2)         |
| `REDIS_DATABASE`                     | `4`                                            | Redis database number                      |
| `ENTITLEMENTS_SERVICE_API_KEY`       | `OBSOLETE`                                     | Entitlements service API key               |
| `LEGAL_SERVICE_REGION`               | `southcentralus`                               | Legal service region                       |
| `LEGAL_SERVICEBUS_TOPIC_NAME`        | `legaltagschangedtopiceg`                      | Legal service bus topic name               |
| `LEGAL_SERVICEBUS_TOPIC_SUBSCRIPTION`| `eg_sb_legaltagchangedsubscription`            | Legal service bus topic subscription       |
| `OPA_ENABLED`                        | `false`                                        | Enable OPA                                 |
</file>

<file path="src/services_core_workflow.md">
# Workflow

The workflow service can be run locally in editors with the following configuration.

```
Build and Run Configuration: SpringBoot
---------------------------------------
Java SDK:  java zulu-17
Module: file-azure
Class: org.opengroup.osdu.workflow.provider.azure.WorkflowAzureApplication
VM Options: -javaagent:/<your_full_path>/osdu-developer/src/applicationinsights-agent.jar
```


| Variable                             | Value                                          | Description                                |
|--------------------------------------|------------------------------------------------|--------------------------------------------|
| `APPINSIGHTS_KEY`                    | `<your_appinsights_key>`                       | Application Insights key                   |
| `APPLICATIONINSIGHTS_CONNECTION_STRING` | `<your_appinsights_connection>`             | Application Insights Connection            |
| `KEYVAULT_URI`                       | `<your_keyvault_uri>`                          | Key Vault URI                              |
| `AZURE_HOST`                         | `<your_host_ip>`                               | Azure host IP                              |
| `PARTITION_SERVICE_ENDPOINT`         | `http://${AZURE_HOST}/api/partition/v1/`       | Partition service endpoint                 |
| `OSDU_ENTITLEMENTS_URL`              | `http://${AZURE_HOST}/api/entitlements/v2`     | Entitlements service endpoint              |
| `OSDU_AIRFLOW_URL`                   | `https://${AZURE_HOST}/airflow`                | Airflow URL                                |
| `AAD_CLIENT_ID`                      | `<your_aad_client_id>`                         | Active Directory client ID                 |
| `SPRING_APPLICATION_NAME`            | `workflow`                                     | Spring application name                    |
| `LOG_PREFIX`                         | `workflow`                                     | Log prefix                                 |
| `COSMOSDB_DATABASE`                  | `osdu-db`                                      | Cosmos DB database name                    |
| `COSMOSDB_SYSTEM_DATABASE`           | `osdu-system-db`                               | Cosmos DB system database name             |
| `AIRFLOW_STORAGE_ACCOUNT_NAME`       | `<your_storage_account_name>`                  | Airflow storage account name               |
| `AZURE_PAAS_PODIDENTITY`             | `false`                                        | Azure PaaS pod identity                    |
| `AZURE_ISTIOAUTH_ENABLED`            | `true`                                         | Turn Istio auth on                         |
| `AZURE_PAAS_PODIDENTITY_ISENABLED`   | `false`                                        | Azure PaaS pod identity enabled            |
| `OSDU_AIRFLOW_USERNAME`              | `<your_airflow_username>`                      | Airflow username                           |
| `OSDU_AIRFLOW_PASSWORD`              | `<your_airflow_password`                       | Airflow password                           |
| `OSDU_AIRFLOW_VERSION2_ENABLED`      | `true`                                         | Enable Airflow version 2                   |
| `DP_AIRFLOW_FOR_SYSTEM_DAG`          | `false`                                        | Use Airflow for system DAGs                |
| `IGNORE_DAGCONTENT`                  | `true`                                         | Ignore DAG content                         |
| `IGNORE_CUSTOMOPERATORCONTENT`       | `true`                                         | Ignore custom operator content             |
| `SERVER_PORT`                        | `8080`                                         | Server port                                |
</file>

<file path="src/services_core.md">
# Core Services

This repository can be used to hold the source code for the OSDU Core Services.

Environment variables can be automatically generated and then be referenced in IntelliJ with the [EnvFile](https://plugins.jetbrains.com/plugin/7861-envfile) plugin.


## Partition Service

The partition service can be run locally in IntelliJ with the following run configuration

```
Build and Run Configuration: SpringBoot
---------------------------------------
Java SDK:  java zulu-17
Module: partition-azure
Class: opengroup.osdu.partition.provider.azure.PartitionApplication
VM Options: -javaagent:/<your_full_path>/osdu-developer/src/applicationinsights-agent.jar
```

The following environment variables are necessary to run the Partition Service.


| Variable                             | Value                                          | Description                                |
|--------------------------------------|------------------------------------------------|--------------------------------------------|
| `APPINSIGHTS_KEY`                    | `<your_insights_key>`                          | Application Insights key                   |
| `KEYVAULT_URI`                       | `"https://<your_storage_name>.vault.azure.net"`| Key Vault URI                              |
| `AAD_CLIENT_ID`                      | `<your_client_id>`                             | Active Directory client ID                 |
| `SERVER_PORT`                        | `8080`                                         | HTTP Server Port                           |
| `SPRING_APPLICATION_NAME`            | `partition`                                    | Spring application name                    |
| `REDIS_DATABASE`                     | `1`                                            | Redis database number                      |
| `PARTITION_SPRING_LOGGING_LEVEL`     | `INFO`                                         | Logging level for the Partition service    |
| `AZURE_ISTIOAUTH_ENABLED`            | `false`                                        | Turn Istio auth off                        |
| `AZURE_ACTIVEDIRECTORY_APP_ID_URI`   | `api://<your_client_id>`                       | Active Directory app ID URI                |
| `AZURE_ACTIVEDIRECTORY_SESSION_STATELESS` | `true`                                    | Enable stateless session for AD            |


### Testing

The partition service can be tested locally in IntelliJ with the following run configuration

```
Build and Run Configuration: JUnit
---------------------------------------
Java SDK:  Java zulu-17
Module: partition-test-azure
All in package: org.opengroup.osdu.partition
```

| Variable                                | Value                                          | Description                                |
|-----------------------------------------|------------------------------------------------|--------------------------------------------|
| `ENVIRONMENT`                           | `<your_environment>`                           | local or cloud                             |
| `AZURE_AD_TENANT_ID`                    | `<your_tenant_id>`                             | Azure tenant ID                            |
| `INTEGRATION_TESTER`                    | `<your_client_id>`                             | Azure client ID                            |
| `AZURE_TESTER_SERVICEPRINCIPAL_SECRET`  | `<your_client_secret>`                         | Azure client secret                        |
| `AZURE_AD_APP_RESOURCE_ID`              | `<your_client_id>`                             | Azure client ID                            |
| `PARTITION_BASE_URL`                    | `http://localhost:8080/`                       | Service URL                                |



## Entitlements Service

The entitlement service can be run locally in IntelliJ with the following run configuration

```
Build and Run Configuration: SpringBoot
---------------------------------------
Java SDK:  java zulu-17
Module: entitlements-v2-azure
Class: org.opengroup.osdu.entitlements.v2.azure.EntitlementsV2Application
VM Options: -javaagent:/<your_full_path>/osdu-developer/src/applicationinsights-agent.jar
```

| Variable                             | Value                                          | Description                                |
|--------------------------------------|------------------------------------------------|--------------------------------------------|
| `APPINSIGHTS_KEY`                    | `<your_insights_key>`                          | Application Insights key                   |
| `KEYVAULT_URI`                       | `"https://${KV_NAME}.vault.azure.net"`         | Key Vault URI                              |
| `PARTITION_SERVICE_ENDPOINT`         | `http://${AZURE_HOST}/api/partition/v1`        | Partition service endpoint                 |
| `AAD_CLIENT_ID`                      | `${AZURE_CLIENT_ID}`                           | Active Directory client ID                 |
| `SERVER_PORT`                        | `8080`                                         | HTTP Server Port                           |
| `SPRING_APPLICATION_NAME`            | `entitlements`                                 | Spring application name                    |
| `LOGGING_LEVEL`                      | `INFO`                                         | Logging level for the Entitlements service |
| `SERVICE_DOMAIN_NAME`                | `dataservices.energy`                                  | Service domain name                        |
| `ROOT_DATA_GROUP_QUOTA`              | `5000`                                         | Root data group quota                      |
| `REDIS_TTL_SECONDS`                  | `1`                                            | Redis TTL in seconds                       |
| `AZURE_ISTIOAUTH_ENABLED`            | `true`                                         | Turn Istio auth on                         |
| `AZURE_ACTIVEDIRECTORY_SESSION_STATELESS` | `true`                                    | Enable stateless session for AD            |



### Testing

The entitlement service can be tested locally in IntelliJ with the following run configuration

```
Build and Run Configuration: JUnit
---------------------------------------
Java SDK:  Java zulu-17
Module: entitlementsv2-test-azure
All in package: org.opengroup.osdu.entitlements
```



## Legal Service

The legal service can be run locally in IntelliJ with the following run configuration

```
Build and Run Configuration: SpringBoot
---------------------------------------
Java SDK:  java zulu-17
Module: legal-azure
Class: org.opengroup.osdu.legal.azure.LegalApplication
VM Options: -javaagent:/<your_full_path>/osdu-developer/src/applicationinsights-agent.jar
```

| Variable                             | Value                                          | Description                                |
|--------------------------------------|------------------------------------------------|--------------------------------------------|
| `KV_NAME`                            | `<your_keyvault_name>`                         | Key Vault name                             |
| `AZURE_TENANT_ID`                    | `<your_tenant_id>`                             | Azure tenant ID                            |
| `AZURE_CLIENT_ID`                    | `<your_client_id>`                             | Azure client ID                            |
| `AZURE_CLIENT_SECRET`                | `<your_client_secret>`                         | Azure client secret                        |
| `APPINSIGHTS_KEY`                    | `<your_insights_key>`                          | Application Insights key                   |
| `KEYVAULT_URI`                       | `"https://${KV_NAME}.vault.azure.net"`         | Key Vault URI                              |
| `AZURE_HOST`                         | `<your_host_ip>`                               | Azure host IP                              |
| `SPRING_APPLICATION_NAME`            | `legal`                                        | Spring application name                    |
| `AAD_CLIENT_ID`                      | `${AZURE_CLIENT_ID}`                           | Active Directory client ID                 |
| `REDIS_DATABASE`                     | `2`                                            | Redis database number                      |
| `SERVICEBUS_TOPIC_NAME`              | `legaltags`                                    | Service Bus topic name                     |
| `COSMOSDB_DATABASE`                  | `osdu-db`                                      | Cosmos DB database name                    |
| `ENTITLEMENTS_SERVICE_API_KEY`       | `OBSOLETE`                                     | Entitlements service API key               |
| `LEGAL_SERVICE_REGION`               | `us`                                           | Legal service region                       |
| `PARTITION_SERVICE_ENDPOINT`         | `http://${AZURE_HOST}/api/partition/v1`        | Partition service endpoint                 |
| `ENTITLEMENTS_SERVICE_ENDPOINT`      | `http://${AZURE_HOST}/api/entitlements/v2`     | Entitlements service endpoint              |
| `AZURE_ISTIO_AUTH_ENABLED`           | `true`                                         | Turn Istio auth on                         |
| `AZURE_PAAS_PODIDENTITY`             | `false`                                        | Azure PaaS pod identity                    |
| `AZURE_PAAS_PODIDENTITY_ISENABLED`   | `false`                                        | Azure PaaS pod identity enabled            |
| `AZURE_ACTIVEDIRECTORY_APP_ID_URI`   | `api://${AZURE_CLIENT_ID}`                     | Active Directory app ID URI                |
| `AZURE_ACTIVEDIRECTORY_SESSION_STATELESS` | `true`                                    | Enable stateless session for AD            |



### Testing

The legal service can be tested locally in IntelliJ with the following run configuration

```
Build and Run Configuration: JUnit
---------------------------------------
Java SDK:  Java zulu-17
Module: legal-test-azure
All in package: org.opengroup.osdu.legal
```




## Schema Service

The schema service can be run locally in IntelliJ with the following run configuration

```
Build and Run Configuration: SpringBoot
---------------------------------------
Java SDK:  java zulu-17
Module: os-schema-azure
Class: org.opengroup.osdu.schema.azure.SchemaApplication
VM Options: -javaagent:/<your_full_path>/osdu-developer/src/applicationinsights-agent.jar
```

| Variable                             | Value                                          | Description                                |
|--------------------------------------|------------------------------------------------|--------------------------------------------|
| `KV_NAME`                            | `<your_keyvault_name>`                         | Key Vault name                             |
| `STORAGE_ACCOUNT`                    | `<your_storage_account>`                       | Storage account name                       |
| `AZURE_TENANT_ID`                    | `<your_tenant_id>`                             | Azure tenant ID                            |
| `AZURE_CLIENT_ID`                    | `<your_client_id>`                             | Azure client ID                            |
| `AZURE_CLIENT_SECRET`                | `<your_client_secret>`                         | Azure client secret                        |
| `APPINSIGHTS_KEY`                    | `<your_insights_key>`                          | Application Insights key                   |
| `KEYVAULT_URI`                       | `"https://${KV_NAME}.vault.azure.net"`         | Key Vault URI                              |
| `AZURE_HOST`                         | `<your_host_ip>`                               | Azure host IP                              |
| `PARTITION_SERVICE_ENDPOINT`         | `http://${AZURE_HOST}/api/partition/v1`        | Partition service endpoint                 |
| `ENTITLEMENTS_SERVICE_ENDPOINT`      | `http://${AZURE_HOST}/api/entitlements/v2`     | Entitlements service endpoint              |
| `AAD_CLIENT_ID`                      | `${AZURE_CLIENT_ID}`                           | Active Directory client ID                 |
| `SPRING_APPLICATION_NAME`            | `schema`                                       | Spring application name                    |
| `LOG_PREFIX`                         | `schema`                                       | Log prefix                                 |
| `AZURE_STORAGE_ENABLE_HTTPS`         | `true`                                         | Enable HTTPS for Azure storage             |
| `COSMOSDB_DATABASE`                  | `osdu-db`                                      | Cosmos DB database name                    |
| `ENTITLEMENTS_SERVICE_API_KEY`       | `OBSOLETE`                                     | Entitlements service API key               |
| `SERVER_PORT`                        | `8080`                                         | Server port                                |
| `EVENT_GRID_ENABLED`                 | `false`                                        | Enable Event Grid                          |
| `EVENT_GRID_TOPIC`                   | `schemachangedtopic`                           | Event Grid topic                           |
| `SERVICE_BUS_ENABLED`                | `true`                                         | Enable Service Bus                         |
| `SERVICEBUS_TOPIC_NAME`              | `schemachangedtopic`                           | Service Bus topic name                     |
| `AZURE_PAAS_PODIDENTITY`             | `false`                                        | Azure PaaS pod identity                    |
| `AZURE_ISTIOAUTH_ENABLED`            | `true`                                         | Turn Istio auth on                         |
| `AZURE_PAAS_PODIDENTITY_ISENABLED`   | `false`                                        | Azure PaaS pod identity enabled            |



## Storage Service

The storage service can be run locally in IntelliJ with the following run configuration

```
Build and Run Configuration: SpringBoot
---------------------------------------
Java SDK:  java zulu-17
Module: storage-azure
Class: org.opengroup.osdu.storage.provider.azure.StorageApplication
VM Options: -javaagent:/<your_full_path>/osdu-developer/src/applicationinsights-agent.jar
```

| Variable                             | Value                                          | Description                                |
|--------------------------------------|------------------------------------------------|--------------------------------------------|
| `APPINSIGHTS_KEY`                    | `<your_appinsights_key>`                       | Application Insights key                   |
| `KEYVAULT_URI`                       | `<your_keyvault_uri>`                          | Key Vault URI                              |
| `AZURE_HOST`                         | `<your_host_ip>`                               | Azure host IP                              |
| `PARTITION_SERVICE_ENDPOINT`         | `http://${AZURE_HOST}/api/partition/v1`        | Partition service endpoint                 |
| `ENTITLEMENTS_SERVICE_ENDPOINT`      | `http://${AZURE_HOST}/api/entitlements/v2`     | Entitlements service endpoint              |
| `LEGAL_SERVICE_ENDPOINT`             | `http://${AZURE_HOST}/api/legal/v1`            | Legal service endpoint                     |
| `AAD_CLIENT_ID`                      | `<your_aad_client_id>`                         | Active Directory client ID                 |
| `SPRING_APPLICATION_NAME`            | `storage`                                      | Spring application name                    |
| `AZURE_PAAS_PODIDENTITY`             | `false`                                        | Azure PaaS pod identity                    |
| `AZURE_ISTIOAUTH_ENABLED`            | `true`                                         | Turn Istio auth on                         |
| `AZURE_PAAS_PODIDENTITY_ISENABLED`   | `false`                                        | Azure PaaS pod identity enabled            |
| `LOG_PREFIX`                         | `storage`                                      | Log prefix                                 |
| `AZURE_STORAGE_ENABLE_HTTPS`         | `true`                                         | Enable HTTPS for Azure storage             |
| `COSMOSDB_DATABASE`                  | `osdu-db`                                      | Cosmos DB database name                    |
| `SERVER_PORT`                        | `8080`                                         | Server port                                |
| `SERVICEBUS_TOPIC_NAME`              | `recordstopic`                                 | Service Bus topic name                     |
| `SERVICEBUS_V2_TOPIC_NAME`           | `recordstopic-v2`                              | Service Bus topic name (version 2)         |
| `REDIS_DATABASE`                     | `4`                                            | Redis database number                      |
| `ENTITLEMENTS_SERVICE_API_KEY`       | `OBSOLETE`                                     | Entitlements service API key               |
| `LEGAL_SERVICE_REGION`               | `southcentralus`                               | Legal service region                       |
| `LEGAL_SERVICEBUS_TOPIC_NAME`        | `legaltagschangedtopiceg`                      | Legal service bus topic name               |
| `LEGAL_SERVICEBUS_TOPIC_SUBSCRIPTION`| `eg_sb_legaltagchangedsubscription`            | Legal service bus topic subscription       |
| `OPA_ENABLED`                        | `false`                                        | Enable OPA                                 |



## Indexer Service

The indexer service can be run locally in IntelliJ with the following run configuration

```
Build and Run Configuration: SpringBoot
---------------------------------------
Java SDK:  java zulu-17
Module: indexer-azure
Class: org.opengroup.osdu.indexer.azure.IndexerAzureApplication
VM Options: -javaagent:/<your_full_path>/osdu-developer/src/applicationinsights-agent.jar
```

| Variable                             | Value                                          | Description                                |
|--------------------------------------|------------------------------------------------|--------------------------------------------|
| `APPINSIGHTS_KEY`                    | `<your_appinsights_key>`                       | Application Insights key                   |
| `KEYVAULT_URI`                       | `<your_keyvault_uri>`                          | Key Vault URI                              |
| `AZURE_HOST`                         | `<your_host_ip>`                               | Azure host IP                              |
| `PARTITION_SERVICE_ENDPOINT`         | `http://${AZURE_HOST}/api/partition/v1`        | Partition service endpoint                 |
| `ENTITLEMENTS_SERVICE_ENDPOINT`      | `http://${AZURE_HOST}/api/entitlements/v2`     | Entitlements service endpoint              |
| `SCHEMA_SERVICE_URL`                 | `http://${AZURE_HOST}/api/schema-service/v1`   | Schema service endpoint                    |
| `STORAGE_SERVICE_URL`                | `http://${AZURE_HOST}/api/storage/v2`          | Storage service endpoint                   |
| `STORAGE_QUERY_RECORD_HOST`          | `http://${AZURE_HOST}/api/storage/v2/query/records`         | Storage service record query endpoint      |
| `STORAGE_QUERY_RECORD_FOR_CONVERSION_HOST` | `http://${AZURE_HOST}/api/storage/v2/query/records:batch`         | Storage service record batch query endpoint      |
| `AAD_CLIENT_ID`                      | `<your_aad_client_id>`                         | Active Directory client ID                 |
| `SPRING_APPLICATION_NAME`            | `indexer`                                      | Spring application name                    |
| `AZURE_PAAS_PODIDENTITY`             | `false`                                        | Azure PaaS pod identity                    |
| `AZURE_ISTIOAUTH_ENABLED`            | `true`                                         | Turn Istio auth on                         |
| `AZURE_PAAS_PODIDENTITY_ISENABLED`   | `false`                                        | Azure PaaS pod identity enabled            |
| `LOG_PREFIX`                         | `indexer`                                      | Log prefix                                 |






## Search Service

The search service can be run locally in IntelliJ with the following run configuration

```
Build and Run Configuration: SpringBoot
---------------------------------------
Java SDK:  java zulu-17
Module: search-azure
Class: org.opengroup.osdu.search.provider.azure.SearchApplication
VM Options: -javaagent:/<your_full_path>/osdu-developer/src/applicationinsights-agent.jar
```

| Variable                             | Value                                          | Description                                |
|--------------------------------------|------------------------------------------------|--------------------------------------------|
| `APPINSIGHTS_KEY`                    | `<your_appinsights_key>`                       | Application Insights key                   |
| `KEYVAULT_URI`                       | `<your_keyvault_uri>`                          | Key Vault URI                              |
| `AZURE_HOST`                         | `<your_host_ip>`                               | Azure host IP                              |
| `PARTITION_SERVICE_ENDPOINT`         | `http://${AZURE_HOST}/api/partition/v1`        | Partition service endpoint                 |
| `ENTITLEMENTS_SERVICE_ENDPOINT`      | `http://${AZURE_HOST}/api/entitlements/v2`     | Entitlements service endpoint              |
| `POLICY_SERVICE_ENDPOINT`            | `http://${AZURE_HOST}/policy/api/policy/v1`    | Policy service endpoint                    |
| `AAD_CLIENT_ID`                      | `<your_aad_client_id>`                         | Active Directory client ID                 |
| `SPRING_APPLICATION_NAME`            | `search`                                       | Spring application name                    |
| `AZURE_PAAS_PODIDENTITY`             | `false`                                        | Azure PaaS pod identity                    |
| `AZURE_ISTIOAUTH_ENABLED`            | `true`                                         | Turn Istio auth on                         |
| `AZURE_PAAS_PODIDENTITY_ISENABLED`   | `false`                                        | Azure PaaS pod identity enabled            |
| `LOG_PREFIX`                         | `search`                                       | Log prefix                                 |
| `SEARCH_SERVICE_SPRING_LOGGING_LEVEL`| `DEBUG`                                        | Logging level for the Search service       |
| `ENTITLEMENTS_SERVICE_API_KEY`       | `OBSOLETE`                                     | API Key for Entitlements                   |
| `POLICY_SERVICE_ENABLED`             | `false`                                        | Enable Policy Service                      |
| `COSMOSDB_DATABASE`                  | `osdu-db`                                      | Cosmos DB database name                    |
| `REDIS_DATABASE`                     | `5`                                            | Redis database number                      |
| `ENVIRONMENT`                        | `evt`                                          | Environment                                |
| `ELASTIC_CACHE_EXPIRATION`           | `1`                                            | Elastic cache expiration                   |
| `MAX_CACHE_VALUE_SIZE`               | `60`                                           | Maximum cache value size                   |
| `PARTITION_SERVICE_ENDPOINT`         | `http://partition/api/partition/v1`            | Partition service endpoint                 |
| `ENTITLEMENTS_SERVICE_ENDPOINT`      | `http://entitlements/api/entitlements/v2`      | Entitlements service endpoint              |
| `POLICY_SERVICE_ENDPOINT`            | `http://policy/api/policy/v1`                  | Policy service endpoint                    |

## File Service

The file service can be run locally in IntelliJ with the following run configuration

```
Build and Run Configuration: SpringBoot
---------------------------------------
Java SDK:  java zulu-17
Module: file-azure
Class: org.opengroup.osdu.file.provider.azure.FileAzureApplication
VM Options: -javaagent:/<your_full_path>/osdu-developer/src/applicationinsights-agent.jar
```

| Variable                             | Value                                          | Description                                |
|--------------------------------------|------------------------------------------------|--------------------------------------------|
| `APPINSIGHTS_KEY`                    | `<your_appinsights_key>`                       | Application Insights key                   |
| `KEYVAULT_URI`                       | `<your_keyvault_uri>`                          | Key Vault URI                              |
| `AZURE_HOST`                         | `<your_host_ip>`                               | Azure host IP                              |
| `PARTITION_SERVICE_ENDPOINT`         | `http://${AZURE_HOST}/api/partition/v1`        | Partition service endpoint                 |
| `OSDU_ENTITLEMENTS_URL`              | `http://${AZURE_HOST}/api/entitlements/v2`     | Entitlements service endpoint              |
| `AAD_CLIENT_ID`                      | `<your_aad_client_id>`                         | Active Directory client ID                 |
| `SPRING_APPLICATION_NAME`            | `file`                                         | Spring application name                    |
| `AZURE_PAAS_PODIDENTITY`             | `false`                                        | Azure PaaS pod identity                    |
| `AZURE_ISTIOAUTH_ENABLED`            | `true`                                         | Turn Istio auth on                         |
| `AZURE_PAAS_PODIDENTITY_ISENABLED`   | `false`                                        | Azure PaaS pod identity enabled            |
| `LOG_PREFIX`                         | `file`                                         | Log prefix                                 |

## Workflow Service

The workflow service can be run locally in IntelliJ with the following run configuration

```
Build and Run Configuration: SpringBoot
---------------------------------------
Java SDK:  java zulu-17
Module: file-azure
Class: org.opengroup.osdu.workflow.provider.azure.WorkflowAzureApplication
VM Options: -javaagent:/<your_full_path>/osdu-developer/src/applicationinsights-agent.jar
```


| Variable                             | Value                                          | Description                                |
|--------------------------------------|------------------------------------------------|--------------------------------------------|
| `APPINSIGHTS_KEY`                    | `<your_appinsights_key>`                       | Application Insights key                   |
| `APPLICATIONINSIGHTS_CONNECTION_STRING` | `<your_appinsights_connection>`             | Application Insights Connection            |
| `KEYVAULT_URI`                       | `<your_keyvault_uri>`                          | Key Vault URI                              |
| `AZURE_HOST`                         | `<your_host_ip>`                               | Azure host IP                              |
| `PARTITION_SERVICE_ENDPOINT`         | `http://${AZURE_HOST}/api/partition/v1/`       | Partition service endpoint                 |
| `OSDU_ENTITLEMENTS_URL`              | `http://${AZURE_HOST}/api/entitlements/v2`     | Entitlements service endpoint              |
| `OSDU_AIRFLOW_URL`                   | `https://${AZURE_HOST}/airflow`                | Airflow URL                                |
| `AAD_CLIENT_ID`                      | `<your_aad_client_id>`                         | Active Directory client ID                 |
| `SPRING_APPLICATION_NAME`            | `workflow`                                     | Spring application name                    |
| `LOG_PREFIX`                         | `workflow`                                     | Log prefix                                 |
| `COSMOSDB_DATABASE`                  | `osdu-db`                                      | Cosmos DB database name                    |
| `COSMOSDB_SYSTEM_DATABASE`           | `osdu-system-db`                               | Cosmos DB system database name             |
| `AIRFLOW_STORAGE_ACCOUNT_NAME`       | `<your_storage_account_name>`                  | Airflow storage account name               |
| `AZURE_PAAS_PODIDENTITY`             | `false`                                        | Azure PaaS pod identity                    |
| `AZURE_ISTIOAUTH_ENABLED`            | `true`                                         | Turn Istio auth on                         |
| `AZURE_PAAS_PODIDENTITY_ISENABLED`   | `false`                                        | Azure PaaS pod identity enabled            |
| `OSDU_AIRFLOW_USERNAME`              | `<your_airflow_username>`                      | Airflow username                           |
| `OSDU_AIRFLOW_PASSWORD`              | `<your_airflow_password`                       | Airflow password                           |
| `OSDU_AIRFLOW_VERSION2_ENABLED`      | `true`                                         | Enable Airflow version 2                   |
| `DP_AIRFLOW_FOR_SYSTEM_DAG`          | `false`                                        | Use Airflow for system DAGs                |
| `IGNORE_DAGCONTENT`                  | `true`                                         | Ignore DAG content                         |
| `IGNORE_CUSTOMOPERATORCONTENT`       | `true`                                         | Ignore custom operator content             |
| `SERVER_PORT`                        | `8080`                                         | Server port                                |

// ... end of file ...
</file>

<file path="src/services_overview.md">
# Overview

Personal OSDU™ instances offer flexibility in service deployments. Latest master is deployed by default although users have the option to select milestone releases.

<div class="grid cards" markdown>
- :material-source-branch: __Master Branch__ - Current code
- :material-tag-outline: __Release Branches__ - Milestone code
</div>


!!! tip "Deploy Milestones"
    Use Feature Flag _`SOFTWARE_VERSION`_ to deploy release branches.
    
    For available releases, see [OSDU Milestones](https://community.opengroup.org/osdu/platform/-/milestones).


## Core Services

| **Name**                                                                               | **Description**                                                                                 |
|-------------------------------------------------------------------------------------------------|-------------------------------------------------------------------------------------------------|
| [Partition Service](https://community.opengroup.org/osdu/platform/system/partition)             | Manages data partitions to ensure efficient data management and scalability.                    |
| [Entitlement Service](https://community.opengroup.org/osdu/platform/security-and-compliance/entitlements) | Provides access control and permissions management for data within the OSDU platform. |
| [Legal Service](https://community.opengroup.org/osdu/platform/security-and-compliance/legal)   | Ensures that data compliance and legal requirements are met, including data privacy and governance. |
| [Indexer Service](https://community.opengroup.org/osdu/platform/system/indexer-service)        | Indexes and categorizes data to enable efficient search and retrieval.                           |
| [Indexer Queue](https://community.opengroup.org/osdu/platform/system/indexer-queue)            | Manages the queue for processing indexing tasks, ensuring data is indexed in a timely manner.    |
| [Schema Service](https://community.opengroup.org/osdu/platform/system/schema-service)          | Manages and provides access to data schemas that define the structure and format of data.        |
| [Storage Service](https://community.opengroup.org/osdu/platform/system/storage)                | Provides scalable storage solutions for managing and retrieving large volumes of data.           |
| [Search Service](https://community.opengroup.org/osdu/platform/system/search-service)          | Facilitates searching and querying across data stored within the OSDU platform.                  |
| [File Service](https://community.opengroup.org/osdu/platform/system/file)                      | Handles file operations such as storage, retrieval, and management of data files.                |
| [Workflow Service](https://community.opengroup.org/osdu/platform/data-flow/ingestion/ingestion-workflow/)  | Initiates business processes within the system. During the prototype phase, it facilitates CRUD operations on workflow metadata and triggers workflows in Apache Airflow. Additionally, the service manages process startup records, acting as a wrapper around Airflow functions.. |

## Reference Services

| **Name**                                                                   | **Description**                                                                                 |
|-------------------------------------------------------------------------------------------------|-------------------------------------------------------------------------------------------------|
| [Unit Service](https://community.opengroup.org/osdu/platform/system/reference/unit-service)    | Provides dimension/measurement and unit definitions.                                             |
| [CRS Catalog Service](https://community.opengroup.org/osdu/platform/system/reference/crs-catalog-service) | Provides API endpoints to work with geodetic reference data, allowing developers to retrieve CRS definitions, select appropriate CRSs for data ingestion, and search for CRSs based on various constraints. |
| [CRS Conversion Service](https://community.opengroup.org/osdu/platform/system/reference/crs-conversion-service)  | Enables the conversion of coordinates from one coordinate reference system (CRS) to another. |

## Airflow DAGS

| **Name**                                                                   | **Description**                                                                                 |
|-------------------------------------------------------------------------------------------------|-------------------------------------------------------------------------------------------------|
| [Manifest Ingestion DAG](https://community.opengroup.org/osdu/platform/data-flow/ingestion/ingestion-dags)    | Used for ingesting single or multiple metadata artifacts about datasets into OSDU.                                             |
| [CSV Parser DAG:](https://community.opengroup.org/osdu/platform/data-flow/ingestion/csv-parser/csv-parser)    | Helps in parsing CSV files into a format for ingestion and processing.                                             |

## Experimental Software

OSDU offers various experimental capabilities that are either very new or community contributions. These services are not yet fully mature but are available for early adopters to test and provide feedback. This solution supports the concept of experimental software through opt-in feature flags, allowing users to selectively enable and test these new features.

!!! note
    Experimental software is often less stable and contains less documentation.

| **Name**                                                                   | **Description**                                                                                 |
|-------------------------------------------------------------------------------------------------|-------------------------------------------------------------------------------------------------|
| [Admin UI](https://community.opengroup.org/osdu/ui/admin-ui-group/admin-ui-totalenergies/admin-ui-totalenergies)    | A community supported Angular Administration UI for OSDU.
</file>

<file path="src/services_reference_conversion.md">
# CRS Conversion

Coming Soon
</file>

<file path="src/services_reference_crs.md">
# CRS Catalog

Coming Soon
</file>

<file path="src/services_reference_unit.md">
# Unit

Coming Soon
</file>

<file path="src/services_source.md">
# OSDU Source Code

This section provides comprehensive guidance for working with the community code and integrates automatically with an OSDU™ Personal Instance. The preconfigured `src` directory structure optimizes the organization of repositories to enable efficiency. A personal instance includes generated environment variables to streamline the development process.

!!! tip
    Environment variables can be referenced in IntelliJ with the [EnvFile](https://plugins.jetbrains.com/plugin/7861-envfile) plugin.

!!! warning
    Avoid using containers, always use a local machine when working with OSDU™ source code.


## Overview

The directory is organized into the following structure:


<div class="grid cards" markdown>

-   :material-library:{ .lg .middle } __lib__

    ---

    Libraries and shared components.

-   :material-cube-outline:{ .lg .middle } __core__

    ---

    Core OSDU service repositories.

-   :material-book-open-variant:{ .lg .middle } __reference__

    ---

    Reference and Helper OSDU service repositories.

</div>

## Cloning

To clone the OSDU services into this directory structure, you can use the `gita` command. `gita` is a tool that simplifies the management of multiple Git repositories. If you haven't already installed `gita`, you can do so by following these instructions:

### Installing `gita`

Use pip to install _gita_: `pip install gita`

??? Tip "Learning Opportunity"
    To learn more about this tool and its capabilities, check out the comprehensive [gita documentation](https://github.com/nosarthur/gita) on the official GitHub repository.



### Clone Repositories

Navigate to the appropriate subdirectory (e.g., `lib`, `core`, or `reference`) and use the `gita` command to clone down the required OSDU services and auto create a group.

=== "Bash"

    ```bash
    # Clone OSDU Repositories
    (cd lib && gita clone -f repos)
    (cd core && gita clone -f repos)
    (cd reference && gita clone -f repos)

    # Create the Groups
    gita add -a lib && gita group rename lib osdu-lib
    gita add -a core && gita group rename core osdu-core
    gita add -a reference && gita group rename reference osdu-reference

    # Set the Auto Context
    gita context auto

    # Switch to the release branch and pull code
    gita super switch release/0.27
    gita pull
    ```

=== "Powershell"

    ```pwsh
    # Clone OSDU Repositories
    Push-Location lib; gita clone -f repos; Pop-Location
    Push-Location core; gita clone -f repos; Pop-Location
    Push-Location reference; gita clone -f repos; Pop-Location

    # Create the Groups
    gita add -a lib; gita group rename lib osdu-lib
    gita add -a core; gita group rename core osdu-core
    gita add -a reference; gita group rename reference osdu-reference

    # Set the Auto Context
    gita context auto

    # Switch to the release branch and pull code
    gita super switch release/0.27
    gita pull
    ```
</file>

<file path="src/tutorial_arm.md">
# Portal Template (ARM)

The solution is a native bicep solution and includes a transpiled ARM template from the latest release.  This ARM template can then be easily used as a custom template deployment.

### 1. Microsoft Entra App Create

The solution requires the use of an Application to be registered in Microsoft Entra.

![Create Application](./images/tutorial_click_1.png)

### 2. Microsoft Entra App Info

Create a new client secret to use and note the following IDs for the application.

- Application Client Id
- Application Client Principal Oid

![Client Id](./images/tutorial_click_2.png)
![Principal Id](./images/tutorial_click_3.png)

### 2. Deploy Solution

[![Deploy to Azure](https://aka.ms/deploytoazurebutton)](https://portal.azure.com/#create/Microsoft.Template/uri/https%3A%2F%2Fraw.githubusercontent.com%2FAzure%2Fosdu-developer%2Fmain%2Fazuredeploy.json)

Click the `Deploy to Azure` button and fill out the required Parameters.

- Select the desired Subscription
- Select or create a new Resource Group
- Choose an Azure region to deploy into.

The following fields are mandatory fields to complete.

| **Field**    | **Description** |
|--------------|-----------------|
| Email Address | A valid email address for the first user in the Tenant. |
| Application Client Id | A valid GUID of the Entra Application Client Id|
| Application Secret | A valid Entra Application Secret |
| Application Client Principal Oid | A valid GUID for the Prinicpal Object Id |

Additional fields are all optional changes.  Please see feature flags for further details.

> Deployment will exceed 1 hour.

![Principal Id](./images/tutorial_click_4.png)

### 3. Validate Completion

Deployment is broken up into 2 parts, Infrastructure and Software.

Infrastructure deployment can be validated by investigating the deployments on the resource group. Success can be seen by having the main deployment details green.

Software deployment occurs after successful infrastructure and be seen by looking at the Azure Kubernetes Service gitops blade and observing software compliance.

![Infrastructure Deployment](./images/tutorial_click_5.png)
![Software Deployment](./images/tutorial_click_6.png)


### 3. Microsoft Entra App Auth

Lookup the ingress IP address that has been configured under the kubernetes service `services and ingresses` blade and add the redirect uri to a spa platform on the application authentication blade.

![Ingress](./images/tutorial_click_7.png)
![Redirect](./images/tutorial_click_8.png)


### 3. Retrieve Token

Using the form located at `https://<ip_address>/auth/spa/` retrieve a valid access token by clicking the Authorize button which will return an authorization code, then clicking the Get Tokens button which will retrieve a limited use access token.


![Page](./images/tutorial_click_9a.png)
![Auth](./images/tutorial_click_9b.png)
![Token](./images/tutorial_click_9c.png)


### 4. Execute API Requests

OSDU Services have swagger pages that are available.  Using the retrieved bearer token authenticate and execute API calls as desired.

![Authenticate](./images/tutorial_click_10a.png)
![Execute](./images/tutorial_click_10b.png)
</file>

<file path="src/tutorial_cli.md">
# Command Line (AZD)

The process for working with the solution using the Azure Developer CLI is the recommended way for deployent offering the most flexibility.  This process can be used if working directly with the solution on a computer, working in a Visual Studio Code remote container, or using a cloud environment like Github Codespaces.

For ease of use this tutorial will leverage a cloud environment shell using Azure Cloud Shell.

It is recommended to use persistent files in Azure Cloud Shell for non-ephemeral sessions.

- [How to Use Azure Cloud Shell](https://learn.microsoft.com/en-us/azure/cloud-shell/new-ui-shell-window)
- [Persist Files in  Azure Cloud Shell](https://learn.microsoft.com/en-us/azure/cloud-shell/persisting-shell-storage)

In this tutorial you'll clone the osdu-developer repo to your clouddrive with Azure Cloud Shell, run a series of scripts to log into your subscription and deploy the solution, then verify the solution by running a few tests.

## Prepare a Cloud Shell Session before you Deploy the Solution

In this section you will create a Cloud Shell session, then modify your PowerShell profile in the session with inherent code required to run the deployment scripts.

### 1. Open a Cloud Shell session in Azure Portal

From <http://portal.azure.com> open an Azure Cloud Shell session in PowerShell, see [How to Use Azure Cloud Shell](https://learn.microsoft.com/en-us/azure/cloud-shell/new-ui-shell-window).  Run the following command:

```powershell
New-Item -Path $Profile -ItemType File -Force
```

### 2. Modify your PowerShell profile

Open the PowerShell code editor in your Azure portal by running the following command.

```powershell
code $Profile
```

### 3. Create a PowerShell profile for use with helper functions

Paste the following code into your '$Profile' ('Microsoft.PowerShell_profile.ps1') file.
Save, then restart the session.

```powershell
function Show-Env
{
  Get-ChildItem Env:
}

function Invoke-Envrc {
    if (Test-Path .\.envrc) {
        $envVars = @{}

        function Resolve-EnvValue($value) {
            while ($value -match '\$\{(\w+)\}') {
                $varName = $matches[1]
                $varValue = if ($envVars.ContainsKey($varName)) { $envVars[$varName] } else { [System.Environment]::GetEnvironmentVariable($varName) }
                if ($varValue -eq $null) { break }
                $value = $value -replace [regex]::Escape('${' + $varName + '}'), $varValue
            }
            return $value
        }

        Get-Content .\.envrc | ForEach-Object {
            if ($_ -match '^\s*export\s+(\w+)=(".*?"|''.*?''|.*?)\s*$') {
                $name = $matches[1]
                $value = $matches[2].Trim('"', "'")
                
                # Store the raw value first
                $envVars[$name] = $value
            }
        }

        # Resolve all values after parsing
        $resolvedVars = @{}
        foreach ($kvp in $envVars.GetEnumerator()) {
            $resolvedValue = Resolve-EnvValue $kvp.Value
            $resolvedVars[$kvp.Key] = $resolvedValue
            [System.Environment]::SetEnvironmentVariable($kvp.Key, $resolvedValue, [System.EnvironmentVariableTarget]::Process)
        }
        
        Write-Host "Environment variables loaded from .envrc"
    } else {
        Write-Host ".envrc file not found in the current directory."
    }
}

New-Alias direnv Invoke-Envrc
New-Alias env Show-Env
```

![Create Profile](./images/tutorial_1.png)

## Clone and Deploy the Solution

In this section you'll clone the osdu-developer repo into your clouddrive, then run a series of scripts to log into your subscription and deploy the solution.

### 1. Clone the Solution

Use a new Cloud Shell session and clone the repository.

```powershell
cd clouddrive
git clone https://github.com/Azure/osdu-developer.git
```

![Clone Repository](./images/tutorial_2.png)

### 2. Deploy the Solution

Deploy the solution to your subscription answering any questions that may be presented.

> Deployment will exceed 1 hour.  It is common for a cloud session to timeout due to lack of activity. If a session times out executing `azd provision` again will continue the process.

```powershell
cd clouddrive/osdu-developer
az account set -s <your_subscription>
azd config set alpha.resourceGroupDeployments on
azd init -e <your_env_name>
azd provision
```

![Clone Repository](./images/tutorial_3.png)

![Clone Repository](./images/tutorial_4.png)

A successful deployment will result in a web page opening for the Identity Provider. Retrieve a one time use Authorization Code and set it for the environment.

## Verify your Deployment

### 1. Generate settings

```powershell
azd env set AUTH_CODE=<your_auth_code>
azd hooks run settings
```

### 2. Clone services and test

Clone the OSDU Services

```powershell
# Install the git repo manager tool
pip install gita

# Clone the repositories
gita clone -f src/core/repos
```

Load the environment variables necessary for successful test execution of your environment.

```powershell
cd src
direnv  # Execute the powershell function to initialize the environment values
```

Change to service directories and execute integration tests.

> The following is the pattern of how to test services.

```powershell
# Test Partition Service
cd src/core/partition/testing/partition-test-azure
mvn test

# Test Entitlement Service
cd src/core/entitilements/testing/entitlements-v2-test-azure
mvn test
```

## Clean up

After a deployment remove environment and delete the Azure Application that was created in Microsoft Entra. You can clean up your environments using scripts or manually through the Azure Portal.

### Option 1. Scripting Method

From the Azure Portal, run the following in your Azure Cloud Shell session.

```powershell
# Remove the resources
azd down --force --purge

# Remove the environment
rm .azure/<your_env_name>
```

### Option 2. Manual method

Manually delete the resources from the Azure Portal.

1. Remove the Azure Resource Group
1. Purge any Key Vaults or App Configuration Services
1. Delete the Azure Application from Microsoft Entra
1. Remove the cloned repository.
</file>

<file path=".gitignore">
.venv
</file>

<file path="gateway-migration-summary.md">
# Gateway API Migration Summary

## Overview
Successfully migrated from Istio VirtualServices to Gateway API HTTPRoutes while maintaining both internal and external gateway access.

## Architecture

### Istio Gateway Services (Physical Layer)
Deployed via `software/components/osdu-system/mesh.yaml`:

1. **External Gateway Service**: `external-gateway-istio`
   - Service Type: LoadBalancer (external IP)
   - Annotation: `service.beta.kubernetes.io/azure-load-balancer-internal: 'false'`
   - Accessible from internet

2. **Internal Gateway Service**: `internal-gateway-istio`  
   - Service Type: LoadBalancer (internal IP: 10.224.0.13)
   - Annotation: `service.beta.kubernetes.io/azure-load-balancer-internal: 'true'`
   - Accessible only within VNet

### Gateway API Gateways (Logical Layer)
Deployed via `charts/istio-ingress/templates/gateways.yaml`:

1. **external-gateway**: Bound to `external-gateway-istio` service
2. **internal-gateway**: Bound to `internal-gateway-istio` service

## Routing Configuration

### HTTPRoutes with Dual Gateway Access
All services are configured to accept traffic from both gateways:

1. **Web Site** (`software/applications/web-site/httproute.yaml`)
   - Path: `/` (root)
   - Accessible via both external and internal IPs

2. **Airflow** (`software/components/airflow/httproute.yaml`)
   - Path: `/airflow`
   - Accessible via both external and internal IPs

3. **Admin UI** (`software/experimental/admin-ui/httproute.yaml`)
   - Path: `/adminui` (rewrites to `/`)
   - Accessible via both external and internal IPs

4. **OSDU Services** (Chart templates)
   - osdu-developer-service: Multiple API services with configured paths
   - osdu-developer-auth: Authentication services at `/auth` and `/auth/spa/`

## Verification Commands

### Check Gateway Services
```powershell
# Check external gateway service (should have external IP)
kubectl get svc external-gateway-istio -n istio-system

# Check internal gateway service (should have internal IP: 10.224.0.13)
kubectl get svc internal-gateway-istio -n istio-system
```

### Check Gateway API Resources
```powershell
# Check Gateway API gateways
kubectl get gateways -n istio-system

# Check HTTPRoutes across all namespaces
kubectl get httproutes -A

# Check ReferenceGrants for cross-namespace permissions
kubectl get referencegrants -A
```

### Test External Access
```powershell
# Get external IP
$EXTERNAL_IP = kubectl get svc external-gateway-istio -n istio-system -o jsonpath='{.status.loadBalancer.ingress[0].ip}'

# Test web site
curl "http://$EXTERNAL_IP/"

# Test airflow  
curl "http://$EXTERNAL_IP/airflow"

# Test admin UI
curl "http://$EXTERNAL_IP/adminui"
```

### Test Internal Access
```powershell
# From within VNet (e.g., from a pod or VM in the VNet)
curl "http://10.224.0.13/"
curl "http://10.224.0.13/airflow"
curl "http://10.224.0.13/adminui"
```

## Migration Changes Made

### 1. Updated Istio Gateway Services (`mesh.yaml`)
- Added unique names and labels for each gateway service
- `external-gateway-istio` and `internal-gateway-istio`
- Proper LoadBalancer annotations for internal vs external access

### 2. Updated Gateway API Configuration (`gateways.yaml`)
- Added `addresses` field to bind gateways to specific services
- Added proper labels for identification

### 3. Created HTTPRoute Files
- **Charts**: Template-based HTTPRoutes with ReferenceGrants
- **Applications**: Static HTTPRoute files with dual gateway access
- **Components**: HTTPRoute files replacing VirtualServices

### 4. Commented Out VirtualServices
- All original VirtualService files marked as deprecated
- Pointed to new HTTPRoute equivalents

## Key Benefits

1. **Standard Compliance**: Using Gateway API instead of Istio-specific VirtualServices
2. **Dual Access**: Services available via both internal (VNet) and external (internet) IPs
3. **Cross-namespace Security**: ReferenceGrants provide secure cross-namespace routing
4. **CORS Support**: Migrated to response header modifiers
5. **Future Proof**: Gateway API is the standard for Kubernetes ingress

## Troubleshooting

### If Internal Gateway Not Working
1. Verify internal gateway service has internal IP: `kubectl get svc internal-gateway-istio -n istio-system`
2. Check VNet connectivity from client
3. Verify HTTPRoute references correct gateway: `kubectl describe httproute <name> -n <namespace>`

### If External Gateway Not Working  
1. Verify external gateway service has public IP
2. Check DNS configuration (if using FQDN)
3. Verify certificate configuration for HTTPS

### If HTTPRoutes Not Working
1. Check gateway status: `kubectl describe gateway external-gateway -n istio-system`
2. Check ReferenceGrant permissions: `kubectl get referencegrants -A`
3. Verify Istio proxy configuration: `istioctl proxy-config routes <pod>`
</file>

<file path="mkdocs.yml">
# Project information
site_name: OSDU Developer
site_author: Microsoft Azure Energy
site_name: OSDU Developer
site_url: https://azure.github.io/osdu-developer/
site_author: Daniel Scholl
site_description: >-
  OSDU Developer - Personal Instances : Simplified

docs_dir: src

# Repository
repo_name: azure/osdu-developer
repo_url: https://github.com/azure/osdu-developer

# Copyright
copyright: Copyright &copy; Microsoft Corporation.

extra:
  generator: false

# Configuration
theme:
  name: material
  logo: images/favicon.png
  favicon: images/favicon.ico
  # custom_dir: overrides
  font:
    text: Inter
    code: Fira Code
  features:
    - content.code.copy
    - navigation.collapsible
    - navigation.instant
    - navigation.instant.preview
    - navigation.tabs
    - navigation.footer
    # - navigation.tabs.sticky
    # - navigation.sections
    - navigation.expand
    - search.highlight
    - search.share
    - search.suggest
  palette:
    # Palette toggle for automatic mode
    - media: "(prefers-color-scheme)"
      toggle:
        icon: material/toggle-switch
        name: Switch to light mode

    # # Palette toggle for light mode
    - media: "(prefers-color-scheme: light)"
      scheme: default
      primary: custom
      toggle:
        icon: material/toggle-switch
        name: Switch to dark mode

    # Palette toggle for dark mode
    - media: "(prefers-color-scheme: dark)"
      scheme: slate
      primary: custom
      toggle:
        icon: material/toggle-switch-off
        name: Switch to system preference

markdown_extensions:
  - attr_list
  - md_in_html
  - pymdownx.emoji:
      emoji_index: !!python/name:material.extensions.emoji.twemoji
      emoji_generator: !!python/name:material.extensions.emoji.to_svg
  - pymdownx.highlight:
      anchor_linenums: true
      line_spans: __span
      pygments_lang_class: true
  - pymdownx.details
  - pymdownx.inlinehilite
  - pymdownx.snippets
  - pymdownx.tabbed:
      alternate_style: true
  - pymdownx.tasklist:
      custom_checkbox: true
  - pymdownx.superfences:
      custom_fences:
        - name: mermaid
          class: mermaid
          format: !!python/name:pymdownx.superfences.fence_code_format
  - pymdownx.tabbed:
      alternate_style: true
  - admonition
  - def_list

# Plugins
plugins:
  - search:
      separator: '[\s\u200b\-_,:!=\[\]()"`/]+|\.(?!\d)|&[lg]t;|(?!\b)(?=[A-Z][a-z])'
  - minify:
      minify_html: true
  # - git-revision-date-localized:
  #     enable_creation_date: true
  #     enabled: !ENV [CI, false]
  # - git-committers:
  #     repository: azure/osdu-developer
  #     branch: main
      # enabled: !ENV [CI, false]

extra_javascript:
  - https://unpkg.com/tablesort@5.3.0/dist/tablesort.min.js
  - javascripts/tablesort.js
extra_css:
  - stylesheets/extra.css

nav:
  - Concepts:
    - index.md
    - getting_started.md
  - Installation:
    - install_prerequisites.md
    - install_cli.md
    - install_portal.md
  - Features:
    - feature_flags.md
  - Services:
    - services_overview.md
    - services_source.md
    - OSDU:
      - Core Services:
        - services_core_partition.md
        - services_core_entitlements.md
        - services_core_legal.md
        - services_core_schema.md
        - services_core_storage.md
        - services_core_indexer.md
        - services_core_search.md
        - services_core_file.md
        - services_core_workflow.md
      - Reference Services:
        - services_reference_unit.md
        - services_reference_crs.md
        - services_reference_conversion.md
    - Experimental:
      - experimental_adminui.md
  - Design:
    - design_architecture.md
    - design_platform.md
    - design_infrastructure.md
    - design_software.md
  - Tutorials:
    - Deployment:
      - tutorial_cli.md
      - tutorial_arm.md
    - Debugging:
      - debugging_rest.md
      - debugging_istio.md
      - debugging_airflow.md
      - debugging_kibana.md
    - Advanced Scenarios:
      - advanced_vnet.md
</file>

<file path="pipelines.md">
# Continuous Workflows

A number of CI workflows are leveraged in this repo to test the bicep files to ensure quality is high. The attempt is to use good patterns and practices while working with Infrastructure as Code.

### Pre-deploy Validation

It's essential to catch as many problems before a single resource is deployed to real infrastructure. There are a lot of tools and techniques that can be leveraged to catch functional or syntactical problems.

![[1]][1]

#### PSRule for Azure

An interesting project for performing pre/post validation of Azure Resources against the [Well Architected Framework](https://learn.microsoft.com/en-us/azure/architecture/framework/) is [PSRule for Azure](https://azure.github.io/PSRule.Rules.Azure/). Over [200 rules](https://azure.github.io/PSRule.Rules.Azure/en/baselines/Azure.All/) will be evaluated against the Arm template, ranging from Security configuration to naming conventions.

#### Using the AZ CLI to verify

As a minimum bar to assert the quality of the bicep code we really want to leverage some additional validation of "would this deploy successfully" and "what will this create", but without actually creating any actual Infrastructure resources.

To do this we need to talk to the Azure Control Plane, so we'll need an Azure Application with Federated OIDC, an Azure Subscription with RBAC for the Azure Application configured with a resource group.

1. [Validation](https://docs.microsoft.com/en-us/cli/azure/deployment/group?view=azure-cli-latest#az_deployment_group_validate). Validation ensures the template compiles, that there are no errors in the bicep code, that the parameter file provides all mandatory parameters and that the ARM Control plane will accept the deployment.

1. [What-If](https://docs.microsoft.com/en-us/azure/azure-resource-manager/templates/deploy-what-if). The what-if operation shows how resources will change if the template is deployed.

After running a What-If, we have the opportunity to leverage the output of the WhatIf to assert a level of quality of what's been written. This is especially useful when the bicep template contains a lot of conditional logic. EG. If you're using parameter values to choose whether or not to install certain resources it can be especially useful to write a couple of test cases around this.

There might also be a number of rules specific that we may want to enforce to guide best practices that cannot be done using [Azure Policy](https://docs.microsoft.com/en-us/azure/governance/policy/overview), such as resource naming conventions.

### Deploying to an Azure Subscription

By running the Validation and WhatIf, we've already have achieved a good level of rigour on quality, however there are gaps (Key Vault soft delete, Diagnostic Setting category validation, to name but two) with these validation tests - and the only way to know for sure if the template works is to deploy it.

Actually deploying the IaC template as part of the development process also supports;

- Enabling integration tests for more complex infrastructure deployments.
- Documented evidence of the IaC working with associated logs, great for future analysis if things break.
- Seeing the end to end time it takes to deploy, so we can provide guidance to the those who consume thetemplate.

In this repo we run a real deployment and integration tests daily on a schedule, as well as on every push to the main branch.

### Post-deploy Validation

The fact that a deployment completes successfully is a great sign, however there are several post deployment checks that should be run to verify the usability of the IaC code that's been new'd up.

In this case we are installing software and we are testing the software is installed.

## Github Actions

This section outlines the key GitHub Actions implemented in this repository to ensure code quality, automate builds, and streamline releases. These actions form the backbone of the continuous integration and deployment pipeline, enhancing our development workflow and maintaining high standards across our project.

![[0]][0]

#### Infra - Test

This action will run a Validate Step to ensure any changes to bicep is acceptable. It also will trigger a Standards Check that is non blocking in order to determine if the solution passes the PSRule checks.

#### Infra - Build

This action ensures that the bicep can build properly.

#### Infra - Release

The release action will run whenever a release is created to ensure we have a copy of the ARM template from that release that could then be used by other systems as necessary.

<!--- https://diagrams.helpful.dev/ --->
```mermaid
sequenceDiagram
    participant Workflow as "GitHub Workflow"
    participant Azure as "Azure/login@v2"
    participant extension1 as "github-tag-action@1.69.0"
    participant bashCommand as "bash"
    participant pwshCommand as "pwsh"
    participant extension2 as "elease-changelog-builder-action@v1"
    participant EndBug as "add-and-commit@v9"
    participant extension3 as "release-action@v1"

    Workflow->>Workflow: Manual Trigger
    Workflow->>Workflow: Code Checkout
    Workflow->>Azure: Azure Login
    Workflow->>extension1: New Tag
    Workflow->>bashCommand: Version Update
    Workflow->>pwshCommand: Bicep Install
    Workflow->>pwshCommand: Bicep Build
    Workflow->>extension2: Generate Changes
    Workflow->>EndBug: Git Commit
    Workflow->>extension3: Create Release
```

#### Auto - Doc

This action performs two main functions:

1. It runs a _spell check_ on any `.md` files in the repo. This is useful for catching simple mistakes from quick edits or other people's PRs. This spell check is part of the branch policy for merging to main.

2. It automatically compiles and deploys the documentation to the gh-pages site. This ensures that the documentation is always up-to-date with the latest changes in the main branch.

The action is triggered on pull requests that modify markdown files, pushes to the main branch that affect the docs/src directory, and can also be run manually from the Actions tab. This comprehensive approach helps maintain high-quality, current documentation for the project.

#### Auto - Greet

This is an auto action for a bot to reply to open issues and open pull requests.

#### Auto - Label

This is an auto action for a bot to automatically apply labels based on detection of type of code change.

[0]: src/images/pipeline_1.png "Validation Diagram"
[1]: src/images/pipeline_2.png "Pipeline Diagram"
</file>

<file path="README.md">
# Documentation

Documentation is written in Markdown from the `docs` folder. The
`src` folder contains the sources with the `.md` extension.

We have adopted [MkDocs](https://www.mkdocs.org/) as an open source solution to
build the documentation starting from Markdown format.

Before you submit a pull request for the documentation, you must have gone through the following steps:

1. local test of the documentation
2. run through the spell checker

## How to locally test the documentation

You can locally test the documentation in two ways:

- using Docker
- using `mkdocs` directly

In both cases, you should issue the commands inside the `docs` folder.

With Docker, you just need to execute the following command and point your
browser to `http://127.0.0.1:8000/`:

``` bash
docker run --rm -v "$(pwd):$(pwd)" -w "$(pwd)" -p 8000:8000 \
    minidocks/mkdocs \
    mkdocs serve -a 0.0.0.0:8000
```

If you have installed `mkdocs` directly in your workstation, you can simply run:

``` bash
mkdocs serve
```

Even in this case, point your browser to `http://127.0.0.1:8000/`.

Make sure you review what you have written by putting yourself in the end
user's shoes. Once you are ready, proceed with the spell check and then with
the pull request.
</file>

</files>
